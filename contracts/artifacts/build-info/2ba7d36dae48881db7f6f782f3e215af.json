{
	"id": "2ba7d36dae48881db7f6f782f3e215af",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.15",
	"solcLongVersion": "0.8.15+commit.e14f2714",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/StrongHands.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity >=0.6.12;\r\n\r\nimport \"https://github.com/aave/protocol-v2/blob/ice/mainnet-deployment-03-12-2020/contracts/interfaces/ILendingPool.sol\";\r\nimport \"https://github.com/aave/protocol-v2/blob/ice/mainnet-deployment-03-12-2020/contracts/interfaces/ILendingPoolAddressesProvider.sol\";\r\nimport \"https://github.com/aave/protocol-v2/blob/ice/mainnet-deployment-03-12-2020/contracts/protocol/libraries/types/DataTypes.sol\";\r\nimport \"https://github.com/aave/protocol-v2/blob/ice/mainnet-deployment-03-12-2020/contracts/interfaces/IAToken.sol\";\r\nimport \"./ERC20.sol\";\r\n\r\ncontract StrongHands\r\n{\r\n    struct user\r\n    {\r\n        uint value;\r\n        uint lockTime;\r\n        bool flag;\r\n    }\r\n    \r\n    mapping( address => user) allUsers;\r\n    address [] private  usernames;\r\n    address private manager;\r\n    uint private immutable timeToBeLocked;\r\n    ERC20 private immutable weth;\r\n    ILendingPoolAddressesProvider private provider;\r\n    ILendingPool private lending_pool;\r\n    uint public depositedAmount;\r\n    uint constant percision = 10000;\r\n\r\n    constructor(uint lockTime)  \r\n    {\r\n        manager = msg.sender;\r\n        timeToBeLocked = lockTime;\r\n        weth = ERC20(0xd0A1E359811322d97991E03f863a0C30C2cF029C);\r\n        provider = ILendingPoolAddressesProvider(address(0x88757f2f99175387aB4C6a4b3067c77A695b0349));\r\n        lending_pool = ILendingPool(provider.getLendingPool());\r\n        depositedAmount = 0;\r\n        weth.approve(address(lending_pool), type(uint256).max);\r\n    } \r\n\r\n    /**\r\n        * Function that returns deposited amount of ETH for the user\r\n    **/\r\n    function getUserData() public view returns(uint v)\r\n    {\r\n        return allUsers[msg.sender].value;\r\n    }\r\n\r\n    /**\r\n        * Function that sends ETH to AAVE V2 Lending Pool \r\n    **/\r\n    function sendEther() public payable\r\n    {\r\n        require(msg.value > 0, \"You must send some tokens...\");\r\n        allUsers[msg.sender].value += msg.value;\r\n        allUsers[msg.sender].lockTime = block.timestamp;\r\n        if(allUsers[msg.sender].flag == false)\r\n        {\r\n            allUsers[msg.sender].flag = true;\r\n            usernames.push(msg.sender);\r\n        }\r\n       depositAave(msg.value);\r\n       depositedAmount +=msg.value;\r\n    }\r\n\r\n    /**\r\n        * A function that returns ETH from AAVE Lending Pool to the user and distributes a portion\r\n        *  to other usersif the user has withdrawn ETH before a defined time period\r\n\r\n    **/\r\n    function getMyEther() public payable\r\n    {\r\n        uint currentMoneyOfUser = allUsers[msg.sender].value;\r\n        require(currentMoneyOfUser > 0, \"User don't have deposited ETH\");\r\n        uint lockTimeOfUser = allUsers[msg.sender].lockTime;\r\n        uint currentBlockTime = block.timestamp;\r\n        if(currentBlockTime > lockTimeOfUser + timeToBeLocked )  \r\n        { \r\n            /**\r\n                *This part of the code returns full value \r\n                *of ETH to the user because lock time has expired\r\n            **/    \r\n            allUsers[msg.sender].value = 0;\r\n            depositedAmount = depositedAmount - currentMoneyOfUser;\r\n            withdrawWETH(currentMoneyOfUser);\r\n            (bool succ, ) = msg.sender.call{value : currentMoneyOfUser}(\"\");\r\n            require(succ, \"Transfer failed.\");\r\n            return;\r\n        } \r\n        /**\r\n            *This part of the code is giving penalty to the user due to witdrawing coins before locktime runs out\r\n            *by taking some amount of his ETH coins and giving them to the other users proportional to how much Ether \r\n            *they have deposited on the contract.\r\n        **/  \r\n        uint spentTime = ((currentBlockTime-lockTimeOfUser)*100)/(timeToBeLocked) ; //passed time in percentage\r\n        uint toBePayed = (currentMoneyOfUser * ((100 - spentTime)/2)) /100; //penalty for the user\r\n        uint x = toBePayed; //x returns 1 or 2 WEI back to the user in the end, because we can't take exactly 100% of penalty. Takes 99.99%\r\n        uint money = depositedAmount -  currentMoneyOfUser; //deposited amount of ethers, without amount of the msg.sender\r\n        address [] memory  _usernames = usernames;\r\n        uint perc; \r\n        uint toPay;\r\n        for (uint i = 0; i < _usernames.length; i++)\r\n        {\r\n            uint currentMappedUserValue = allUsers[_usernames[i]].value;\r\n            if(_usernames[i]!=msg.sender &&  currentMappedUserValue > 0)\r\n            {\r\n                /**\r\n                    *Calculating the proportional amount of all users and sharing the penalty of msg.sender\r\n                **/\r\n                perc = (currentMappedUserValue * percision) / money; \r\n                toPay = (toBePayed*perc)/(percision);\r\n                x = x - toPay;\r\n                allUsers[_usernames[i]].value +=toPay;\r\n            }\r\n        }\r\n\r\n        currentMoneyOfUser = currentMoneyOfUser - toBePayed + x ;\r\n        depositedAmount = depositedAmount - currentMoneyOfUser;\r\n        allUsers[msg.sender].value = 0;\r\n        withdrawWETH(currentMoneyOfUser);\r\n        (bool success, ) = msg.sender.call{value : currentMoneyOfUser}(\"\");\r\n        require(success, \"Transfer failed.\");\r\n        allUsers[msg.sender].value = 0;\r\n\r\n    }\r\n\r\n    /**\r\n        *A function that sends passive income to the owner of the contract.\r\n        *manager is the owner\r\n    **/\r\n    function sendKajmakToOwner() public payable onlyOwner\r\n    {\r\n          uint income = getCurrentBalanceOfATokens() - depositedAmount;\r\n          require(income > 0);\r\n          withdrawWETH(income);\r\n          (bool success, ) = msg.sender.call{value : income}(\"\");\r\n          require(success, \"Transfer failed.\");\r\n    }\r\n\r\n    modifier onlyOwner \r\n    {\r\n        require(msg.sender == manager , \"Only owner can call this function\");\r\n        _;\r\n    }\r\n    /**\r\n        *Deposit val amount of ETH to WETH address\r\n    **/\r\n    function depositETH(uint val) internal \r\n    {\r\n        weth.deposit{value : val}();\r\n    }\r\n\r\n    /**\r\n        *Returns current balance of AETH tokens for this contract\r\n    **/\r\n    function getCurrentBalanceOfATokens() public view returns(uint a)\r\n    {\r\n        IAToken aWETH = IAToken(lending_pool.getReserveData(address(weth)).aTokenAddress);\r\n        return aWETH.balanceOf(address(this));\r\n    }\r\n    /**\r\n        *Lending Pool return val tokens to WETH, and they are then \r\n        *converted to ETH and assigned to balance of this contract \r\n    **/\r\n      function withdrawWETH(uint val) internal \r\n      {\r\n        lending_pool.withdraw(address(weth),val, address(this));\r\n        bool torf = weth.approve(address(this) , val);\r\n        if(torf)\r\n            weth.withdraw(val);\r\n    }\r\n    /**\r\n        *Depositing val WETH tokens to AAVE V2 Lending Pool\r\n    **/\r\n    function depositAave(uint val) internal \r\n    {\r\n      require(val > 0);\r\n      depositETH(val);\r\n      lending_pool.deposit(address(weth),val, address(this), 0);\r\n    }\r\n\r\n    receive() external payable {}\r\n    fallback() external payable {}\r\n   \r\n}"
			},
			"contracts/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity >=0.6.12;\r\ninterface ERC20{\r\n  function deposit() external payable;\r\n  function withdraw(uint256 amount) external payable;\r\n  function transfer(address sender, uint value ) external payable ;\r\n  function balanceOf(address owner) external view returns (uint256 balance);\r\n  function approve(address guy, uint wad) external returns (bool);\r\n  function allowance(address owner, address spender) external returns(uint256);\r\n}"
			},
			"https://github.com/aave/protocol-v2/blob/ice/mainnet-deployment-03-12-2020/contracts/interfaces/IAToken.sol": {
				"content": "// SPDX-License-Identifier: agpl-3.0\npragma solidity >=0.6.12;\n\nimport {IERC20} from '../dependencies/openzeppelin/contracts/IERC20.sol';\nimport {IScaledBalanceToken} from \"https://github.com/aave/protocol-v2/blob/ice/mainnet-deployment-03-12-2020/contracts/interfaces/IScaledBalanceToken.sol\";\n\ninterface IAToken is IERC20, IScaledBalanceToken {\n  /**\n   * @dev Emitted after the mint action\n   * @param from The address performing the mint\n   * @param value The amount being\n   * @param index The new liquidity index of the reserve\n   **/\n  event Mint(address indexed from, uint256 value, uint256 index);\n\n  /**\n   * @dev Mints `amount` aTokens to `user`\n   * @param user The address receiving the minted tokens\n   * @param amount The amount of tokens getting minted\n   * @param index The new liquidity index of the reserve\n   * @return `true` if the the previous balance of the user was 0\n   */\n  function mint(\n    address user,\n    uint256 amount,\n    uint256 index\n  ) external returns (bool);\n\n  /**\n   * @dev Emitted after aTokens are burned\n   * @param from The owner of the aTokens, getting them burned\n   * @param target The address that will receive the underlying\n   * @param value The amount being burned\n   * @param index The new liquidity index of the reserve\n   **/\n  event Burn(address indexed from, address indexed target, uint256 value, uint256 index);\n\n  /**\n   * @dev Emitted during the transfer action\n   * @param from The user whose tokens are being transferred\n   * @param to The recipient\n   * @param value The amount being transferred\n   * @param index The new liquidity index of the reserve\n   **/\n  event BalanceTransfer(address indexed from, address indexed to, uint256 value, uint256 index);\n\n  /**\n   * @dev Burns aTokens from `user` and sends the equivalent amount of underlying to `receiverOfUnderlying`\n   * @param user The owner of the aTokens, getting them burned\n   * @param receiverOfUnderlying The address that will receive the underlying\n   * @param amount The amount being burned\n   * @param index The new liquidity index of the reserve\n   **/\n  function burn(\n    address user,\n    address receiverOfUnderlying,\n    uint256 amount,\n    uint256 index\n  ) external;\n\n  /**\n   * @dev Mints aTokens to the reserve treasury\n   * @param amount The amount of tokens getting minted\n   * @param index The new liquidity index of the reserve\n   */\n  function mintToTreasury(uint256 amount, uint256 index) external;\n\n  /**\n   * @dev Transfers aTokens in the event of a borrow being liquidated, in case the liquidators reclaims the aToken\n   * @param from The address getting liquidated, current owner of the aTokens\n   * @param to The recipient\n   * @param value The amount of tokens getting transferred\n   **/\n  function transferOnLiquidation(\n    address from,\n    address to,\n    uint256 value\n  ) external;\n\n  /**\n   * @dev Transfers the underlying asset to `target`. Used by the LendingPool to transfer\n   * assets in borrow(), withdraw() and flashLoan()\n   * @param user The recipient of the aTokens\n   * @param amount The amount getting transferred\n   * @return The amount transferred\n   **/\n  function transferUnderlyingTo(address user, uint256 amount) external returns (uint256);\n}\n"
			},
			"https://github.com/aave/protocol-v2/blob/ice/mainnet-deployment-03-12-2020/contracts/protocol/libraries/types/DataTypes.sol": {
				"content": "// SPDX-License-Identifier: agpl-3.0\npragma solidity >=0.6.12;\n\nlibrary DataTypes {\n  // refer to the whitepaper, section 1.1 basic concepts for a formal description of these properties.\n  struct ReserveData {\n    //stores the reserve configuration\n    ReserveConfigurationMap configuration;\n    //the liquidity index. Expressed in ray\n    uint128 liquidityIndex;\n    //variable borrow index. Expressed in ray\n    uint128 variableBorrowIndex;\n    //the current supply rate. Expressed in ray\n    uint128 currentLiquidityRate;\n    //the current variable borrow rate. Expressed in ray\n    uint128 currentVariableBorrowRate;\n    //the current stable borrow rate. Expressed in ray\n    uint128 currentStableBorrowRate;\n    uint40 lastUpdateTimestamp;\n    //tokens addresses\n    address aTokenAddress;\n    address stableDebtTokenAddress;\n    address variableDebtTokenAddress;\n    //address of the interest rate strategy\n    address interestRateStrategyAddress;\n    //the id of the reserve. Represents the position in the list of the active reserves\n    uint8 id;\n  }\n\n  struct ReserveConfigurationMap {\n    //bit 0-15: LTV\n    //bit 16-31: Liq. threshold\n    //bit 32-47: Liq. bonus\n    //bit 48-55: Decimals\n    //bit 56: Reserve is active\n    //bit 57: reserve is frozen\n    //bit 58: borrowing is enabled\n    //bit 59: stable rate borrowing enabled\n    //bit 60-63: reserved\n    //bit 64-79: reserve factor\n    uint256 data;\n  }\n\n  struct UserConfigurationMap {\n    uint256 data;\n  }\n\n  enum InterestRateMode {NONE, STABLE, VARIABLE}\n}\n"
			},
			"https://github.com/aave/protocol-v2/blob/ice/mainnet-deployment-03-12-2020/contracts/interfaces/ILendingPoolAddressesProvider.sol": {
				"content": "// SPDX-License-Identifier: agpl-3.0\npragma solidity >=0.6.12;\n\n/**\n * @title LendingPoolAddressesProvider contract\n * @dev Main registry of addresses part of or connected to the protocol, including permissioned roles\n * - Acting also as factory of proxies and admin of those, so with right to change its implementations\n * - Owned by the Aave Governance\n * @author Aave\n **/\ninterface ILendingPoolAddressesProvider {\n  event MarketIdSet(string newMarketId);\n  event LendingPoolUpdated(address indexed newAddress);\n  event ConfigurationAdminUpdated(address indexed newAddress);\n  event EmergencyAdminUpdated(address indexed newAddress);\n  event LendingPoolConfiguratorUpdated(address indexed newAddress);\n  event LendingPoolCollateralManagerUpdated(address indexed newAddress);\n  event PriceOracleUpdated(address indexed newAddress);\n  event LendingRateOracleUpdated(address indexed newAddress);\n  event ProxyCreated(bytes32 id, address indexed newAddress);\n  event AddressSet(bytes32 id, address indexed newAddress, bool hasProxy);\n\n  function getMarketId() external view returns (string memory);\n\n  function setMarketId(string calldata marketId) external;\n\n  function setAddress(bytes32 id, address newAddress) external;\n\n  function setAddressAsProxy(bytes32 id, address impl) external;\n\n  function getAddress(bytes32 id) external view returns (address);\n\n  function getLendingPool() external view returns (address);\n\n  function setLendingPoolImpl(address pool) external;\n\n  function getLendingPoolConfigurator() external view returns (address);\n\n  function setLendingPoolConfiguratorImpl(address configurator) external;\n\n  function getLendingPoolCollateralManager() external view returns (address);\n\n  function setLendingPoolCollateralManager(address manager) external;\n\n  function getPoolAdmin() external view returns (address);\n\n  function setPoolAdmin(address admin) external;\n\n  function getEmergencyAdmin() external view returns (address);\n\n  function setEmergencyAdmin(address admin) external;\n\n  function getPriceOracle() external view returns (address);\n\n  function setPriceOracle(address priceOracle) external;\n\n  function getLendingRateOracle() external view returns (address);\n\n  function setLendingRateOracle(address lendingRateOracle) external;\n}\n"
			},
			"https://github.com/aave/protocol-v2/blob/ice/mainnet-deployment-03-12-2020/contracts/interfaces/ILendingPool.sol": {
				"content": "// SPDX-License-Identifier: agpl-3.0\npragma solidity >=0.6.12;\npragma experimental ABIEncoderV2;\n\nimport {ILendingPoolAddressesProvider} from './ILendingPoolAddressesProvider.sol';\nimport {DataTypes} from '../protocol/libraries/types/DataTypes.sol';\n\ninterface ILendingPool {\n  /**\n   * @dev Emitted on deposit()\n   * @param reserve The address of the underlying asset of the reserve\n   * @param user The address initiating the deposit\n   * @param onBehalfOf The beneficiary of the deposit, receiving the aTokens\n   * @param amount The amount deposited\n   * @param referral The referral code used\n   **/\n  event Deposit(\n    address indexed reserve,\n    address user,\n    address indexed onBehalfOf,\n    uint256 amount,\n    uint16 indexed referral\n  );\n\n  /**\n   * @dev Emitted on withdraw()\n   * @param reserve The address of the underlyng asset being withdrawn\n   * @param user The address initiating the withdrawal, owner of aTokens\n   * @param to Address that will receive the underlying\n   * @param amount The amount to be withdrawn\n   **/\n  event Withdraw(address indexed reserve, address indexed user, address indexed to, uint256 amount);\n\n  /**\n   * @dev Emitted on borrow() and flashLoan() when debt needs to be opened\n   * @param reserve The address of the underlying asset being borrowed\n   * @param user The address of the user initiating the borrow(), receiving the funds on borrow() or just\n   * initiator of the transaction on flashLoan()\n   * @param onBehalfOf The address that will be getting the debt\n   * @param amount The amount borrowed out\n   * @param borrowRateMode The rate mode: 1 for Stable, 2 for Variable\n   * @param borrowRate The numeric rate at which the user has borrowed\n   * @param referral The referral code used\n   **/\n  event Borrow(\n    address indexed reserve,\n    address user,\n    address indexed onBehalfOf,\n    uint256 amount,\n    uint256 borrowRateMode,\n    uint256 borrowRate,\n    uint16 indexed referral\n  );\n\n  /**\n   * @dev Emitted on repay()\n   * @param reserve The address of the underlying asset of the reserve\n   * @param user The beneficiary of the repayment, getting his debt reduced\n   * @param repayer The address of the user initiating the repay(), providing the funds\n   * @param amount The amount repaid\n   **/\n  event Repay(\n    address indexed reserve,\n    address indexed user,\n    address indexed repayer,\n    uint256 amount\n  );\n\n  /**\n   * @dev Emitted on swapBorrowRateMode()\n   * @param reserve The address of the underlying asset of the reserve\n   * @param user The address of the user swapping his rate mode\n   * @param rateMode The rate mode that the user wants to swap to\n   **/\n  event Swap(address indexed reserve, address indexed user, uint256 rateMode);\n\n  /**\n   * @dev Emitted on setUserUseReserveAsCollateral()\n   * @param reserve The address of the underlying asset of the reserve\n   * @param user The address of the user enabling the usage as collateral\n   **/\n  event ReserveUsedAsCollateralEnabled(address indexed reserve, address indexed user);\n\n  /**\n   * @dev Emitted on setUserUseReserveAsCollateral()\n   * @param reserve The address of the underlying asset of the reserve\n   * @param user The address of the user enabling the usage as collateral\n   **/\n  event ReserveUsedAsCollateralDisabled(address indexed reserve, address indexed user);\n\n  /**\n   * @dev Emitted on rebalanceStableBorrowRate()\n   * @param reserve The address of the underlying asset of the reserve\n   * @param user The address of the user for which the rebalance has been executed\n   **/\n  event RebalanceStableBorrowRate(address indexed reserve, address indexed user);\n\n  /**\n   * @dev Emitted on flashLoan()\n   * @param target The address of the flash loan receiver contract\n   * @param initiator The address initiating the flash loan\n   * @param asset The address of the asset being flash borrowed\n   * @param amount The amount flash borrowed\n   * @param premium The fee flash borrowed\n   * @param referralCode The referral code used\n   **/\n  event FlashLoan(\n    address indexed target,\n    address indexed initiator,\n    address indexed asset,\n    uint256 amount,\n    uint256 premium,\n    uint16 referralCode\n  );\n\n  /**\n   * @dev Emitted when the pause is triggered.\n   */\n  event Paused();\n\n  /**\n   * @dev Emitted when the pause is lifted.\n   */\n  event Unpaused();\n\n  /**\n   * @dev Emitted when a borrower is liquidated. This event is emitted by the LendingPool via\n   * LendingPoolCollateral manager using a DELEGATECALL\n   * This allows to have the events in the generated ABI for LendingPool.\n   * @param collateralAsset The address of the underlying asset used as collateral, to receive as result of the liquidation\n   * @param debtAsset The address of the underlying borrowed asset to be repaid with the liquidation\n   * @param user The address of the borrower getting liquidated\n   * @param debtToCover The debt amount of borrowed `asset` the liquidator wants to cover\n   * @param liquidatedCollateralAmount The amount of collateral received by the liiquidator\n   * @param liquidator The address of the liquidator\n   * @param receiveAToken `true` if the liquidators wants to receive the collateral aTokens, `false` if he wants\n   * to receive the underlying collateral asset directly\n   **/\n  event LiquidationCall(\n    address indexed collateralAsset,\n    address indexed debtAsset,\n    address indexed user,\n    uint256 debtToCover,\n    uint256 liquidatedCollateralAmount,\n    address liquidator,\n    bool receiveAToken\n  );\n\n  /**\n   * @dev Emitted when the state of a reserve is updated. NOTE: This event is actually declared\n   * in the ReserveLogic library and emitted in the updateInterestRates() function. Since the function is internal,\n   * the event will actually be fired by the LendingPool contract. The event is therefore replicated here so it\n   * gets added to the LendingPool ABI\n   * @param reserve The address of the underlying asset of the reserve\n   * @param liquidityRate The new liquidity rate\n   * @param stableBorrowRate The new stable borrow rate\n   * @param variableBorrowRate The new variable borrow rate\n   * @param liquidityIndex The new liquidity index\n   * @param variableBorrowIndex The new variable borrow index\n   **/\n  event ReserveDataUpdated(\n    address indexed reserve,\n    uint256 liquidityRate,\n    uint256 stableBorrowRate,\n    uint256 variableBorrowRate,\n    uint256 liquidityIndex,\n    uint256 variableBorrowIndex\n  );\n\n  /**\n   * @dev Deposits an `amount` of underlying asset into the reserve, receiving in return overlying aTokens.\n   * - E.g. User deposits 100 USDC and gets in return 100 aUSDC\n   * @param asset The address of the underlying asset to deposit\n   * @param amount The amount to be deposited\n   * @param onBehalfOf The address that will receive the aTokens, same as msg.sender if the user\n   *   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens\n   *   is a different wallet\n   * @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   *   0 if the action is executed directly by the user, without any middle-man\n   **/\n  function deposit(\n    address asset,\n    uint256 amount,\n    address onBehalfOf,\n    uint16 referralCode\n  ) external;\n\n  /**\n   * @dev Withdraws an `amount` of underlying asset from the reserve, burning the equivalent aTokens owned\n   * E.g. User has 100 aUSDC, calls withdraw() and receives 100 USDC, burning the 100 aUSDC\n   * @param asset The address of the underlying asset to withdraw\n   * @param amount The underlying amount to be withdrawn\n   *   - Send the value type(uint256).max in order to withdraw the whole aToken balance\n   * @param to Address that will receive the underlying, same as msg.sender if the user\n   *   wants to receive it on his own wallet, or a different address if the beneficiary is a\n   *   different wallet\n   * @return The final amount withdrawn\n   **/\n  function withdraw(\n    address asset,\n    uint256 amount,\n    address to\n  ) external returns (uint256);\n\n  /**\n   * @dev Allows users to borrow a specific `amount` of the reserve underlying asset, provided that the borrower\n   * already deposited enough collateral, or he was given enough allowance by a credit delegator on the\n   * corresponding debt token (StableDebtToken or VariableDebtToken)\n   * - E.g. User borrows 100 USDC passing as `onBehalfOf` his own address, receiving the 100 USDC in his wallet\n   *   and 100 stable/variable debt tokens, depending on the `interestRateMode`\n   * @param asset The address of the underlying asset to borrow\n   * @param amount The amount to be borrowed\n   * @param interestRateMode The interest rate mode at which the user wants to borrow: 1 for Stable, 2 for Variable\n   * @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   *   0 if the action is executed directly by the user, without any middle-man\n   * @param onBehalfOf Address of the user who will receive the debt. Should be the address of the borrower itself\n   * calling the function if he wants to borrow against his own collateral, or the address of the credit delegator\n   * if he has been given credit delegation allowance\n   **/\n  function borrow(\n    address asset,\n    uint256 amount,\n    uint256 interestRateMode,\n    uint16 referralCode,\n    address onBehalfOf\n  ) external;\n\n  /**\n   * @notice Repays a borrowed `amount` on a specific reserve, burning the equivalent debt tokens owned\n   * - E.g. User repays 100 USDC, burning 100 variable/stable debt tokens of the `onBehalfOf` address\n   * @param asset The address of the borrowed underlying asset previously borrowed\n   * @param amount The amount to repay\n   * - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\n   * @param rateMode The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\n   * @param onBehalfOf Address of the user who will get his debt reduced/removed. Should be the address of the\n   * user calling the function if he wants to reduce/remove his own debt, or the address of any other\n   * other borrower whose debt should be removed\n   * @return The final amount repaid\n   **/\n  function repay(\n    address asset,\n    uint256 amount,\n    uint256 rateMode,\n    address onBehalfOf\n  ) external returns (uint256);\n\n  /**\n   * @dev Allows a borrower to swap his debt between stable and variable mode, or viceversa\n   * @param asset The address of the underlying asset borrowed\n   * @param rateMode The rate mode that the user wants to swap to\n   **/\n  function swapBorrowRateMode(address asset, uint256 rateMode) external;\n\n  /**\n   * @dev Rebalances the stable interest rate of a user to the current stable rate defined on the reserve.\n   * - Users can be rebalanced if the following conditions are satisfied:\n   *     1. Usage ratio is above 95%\n   *     2. the current deposit APY is below REBALANCE_UP_THRESHOLD * maxVariableBorrowRate, which means that too much has been\n   *        borrowed at a stable rate and depositors are not earning enough\n   * @param asset The address of the underlying asset borrowed\n   * @param user The address of the user to be rebalanced\n   **/\n  function rebalanceStableBorrowRate(address asset, address user) external;\n\n  /**\n   * @dev Allows depositors to enable/disable a specific deposited asset as collateral\n   * @param asset The address of the underlying asset deposited\n   * @param useAsCollateral `true` if the user wants to use the deposit as collateral, `false` otherwise\n   **/\n  function setUserUseReserveAsCollateral(address asset, bool useAsCollateral) external;\n\n  /**\n   * @dev Function to liquidate a non-healthy position collateral-wise, with Health Factor below 1\n   * - The caller (liquidator) covers `debtToCover` amount of debt of the user getting liquidated, and receives\n   *   a proportionally amount of the `collateralAsset` plus a bonus to cover market risk\n   * @param collateralAsset The address of the underlying asset used as collateral, to receive as result of the liquidation\n   * @param debtAsset The address of the underlying borrowed asset to be repaid with the liquidation\n   * @param user The address of the borrower getting liquidated\n   * @param debtToCover The debt amount of borrowed `asset` the liquidator wants to cover\n   * @param receiveAToken `true` if the liquidators wants to receive the collateral aTokens, `false` if he wants\n   * to receive the underlying collateral asset directly\n   **/\n  function liquidationCall(\n    address collateralAsset,\n    address debtAsset,\n    address user,\n    uint256 debtToCover,\n    bool receiveAToken\n  ) external;\n\n  /**\n   * @dev Allows smartcontracts to access the liquidity of the pool within one transaction,\n   * as long as the amount taken plus a fee is returned.\n   * IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept into consideration.\n   * For further details please visit https://developers.aave.com\n   * @param receiverAddress The address of the contract receiving the funds, implementing the IFlashLoanReceiver interface\n   * @param assets The addresses of the assets being flash-borrowed\n   * @param amounts The amounts amounts being flash-borrowed\n   * @param modes Types of the debt to open if the flash loan is not returned:\n   *   0 -> Don't open any debt, just revert if funds can't be transferred from the receiver\n   *   1 -> Open debt at stable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\n   *   2 -> Open debt at variable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\n   * @param onBehalfOf The address  that will receive the debt in the case of using on `modes` 1 or 2\n   * @param params Variadic packed params to pass to the receiver as extra information\n   * @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   *   0 if the action is executed directly by the user, without any middle-man\n   **/\n  function flashLoan(\n    address receiverAddress,\n    address[] calldata assets,\n    uint256[] calldata amounts,\n    uint256[] calldata modes,\n    address onBehalfOf,\n    bytes calldata params,\n    uint16 referralCode\n  ) external;\n\n  /**\n   * @dev Returns the user account data across all the reserves\n   * @param user The address of the user\n   * @return totalCollateralETH the total collateral in ETH of the user\n   * @return totalDebtETH the total debt in ETH of the user\n   * @return availableBorrowsETH the borrowing power left of the user\n   * @return currentLiquidationThreshold the liquidation threshold of the user\n   * @return ltv the loan to value of the user\n   * @return healthFactor the current health factor of the user\n   **/\n  function getUserAccountData(address user)\n    external\n    view\n    returns (\n      uint256 totalCollateralETH,\n      uint256 totalDebtETH,\n      uint256 availableBorrowsETH,\n      uint256 currentLiquidationThreshold,\n      uint256 ltv,\n      uint256 healthFactor\n    );\n\n  function initReserve(\n    address reserve,\n    address aTokenAddress,\n    address stableDebtAddress,\n    address variableDebtAddress,\n    address interestRateStrategyAddress\n  ) external;\n\n  function setReserveInterestRateStrategyAddress(address reserve, address rateStrategyAddress)\n    external;\n\n  function setConfiguration(address reserve, uint256 configuration) external;\n\n  /**\n   * @dev Returns the configuration of the reserve\n   * @param asset The address of the underlying asset of the reserve\n   * @return The configuration of the reserve\n   **/\n  function getConfiguration(address asset)\n    external\n    view\n    returns (DataTypes.ReserveConfigurationMap memory);\n\n  /**\n   * @dev Returns the configuration of the user across all the reserves\n   * @param user The user address\n   * @return The configuration of the user\n   **/\n  function getUserConfiguration(address user)\n    external\n    view\n    returns (DataTypes.UserConfigurationMap memory);\n\n  /**\n   * @dev Returns the normalized income normalized income of the reserve\n   * @param asset The address of the underlying asset of the reserve\n   * @return The reserve's normalized income\n   */\n  function getReserveNormalizedIncome(address asset) external view returns (uint256);\n\n  /**\n   * @dev Returns the normalized variable debt per unit of asset\n   * @param asset The address of the underlying asset of the reserve\n   * @return The reserve normalized variable debt\n   */\n  function getReserveNormalizedVariableDebt(address asset) external view returns (uint256);\n\n  /**\n   * @dev Returns the state and configuration of the reserve\n   * @param asset The address of the underlying asset of the reserve\n   * @return The state of the reserve\n   **/\n  function getReserveData(address asset) external view returns (DataTypes.ReserveData memory);\n\n  function finalizeTransfer(\n    address asset,\n    address from,\n    address to,\n    uint256 amount,\n    uint256 balanceFromAfter,\n    uint256 balanceToBefore\n  ) external;\n\n  function getReservesList() external view returns (address[] memory);\n\n  function getAddressesProvider() external view returns (ILendingPoolAddressesProvider);\n\n  function setPause(bool val) external;\n\n  function paused() external view returns (bool);\n}\n"
			},
			"https://github.com/aave/protocol-v2/blob/ice/mainnet-deployment-03-12-2020/contracts/interfaces/IScaledBalanceToken.sol": {
				"content": "// SPDX-License-Identifier: agpl-3.0\npragma solidity >=0.6.12;\n\ninterface IScaledBalanceToken {\n  /**\n   * @dev Returns the scaled balance of the user. The scaled balance is the sum of all the\n   * updated stored balance divided by the reserve's liquidity index at the moment of the update\n   * @param user The user whose balance is calculated\n   * @return The scaled balance of the user\n   **/\n  function scaledBalanceOf(address user) external view returns (uint256);\n\n  /**\n   * @dev Returns the scaled balance of the user and the scaled total supply.\n   * @param user The address of the user\n   * @return The scaled balance of the user\n   * @return The scaled balance and the scaled total supply\n   **/\n  function getScaledUserBalanceAndSupply(address user) external view returns (uint256, uint256);\n\n  /**\n   * @dev Returns the scaled total supply of the variable debt token. Represents sum(debt/index)\n   * @return The scaled total supply\n   **/\n  function scaledTotalSupply() external view returns (uint256);\n}\n"
			},
			"https://github.com/aave/protocol-v2/blob/ice/mainnet-deployment-03-12-2020/contracts/dependencies/openzeppelin/contracts/IERC20.sol": {
				"content": "// SPDX-License-Identifier: agpl-3.0\npragma solidity >=0.6.12;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n  /**\n   * @dev Returns the amount of tokens in existence.\n   */\n  function totalSupply() external view returns (uint256);\n\n  /**\n   * @dev Returns the amount of tokens owned by `account`.\n   */\n  function balanceOf(address account) external view returns (uint256);\n\n  /**\n   * @dev Moves `amount` tokens from the caller's account to `recipient`.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * Emits a {Transfer} event.\n   */\n  function transfer(address recipient, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Returns the remaining number of tokens that `spender` will be\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\n   * zero by default.\n   *\n   * This value changes when {approve} or {transferFrom} are called.\n   */\n  function allowance(address owner, address spender) external view returns (uint256);\n\n  /**\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\n   * that someone may use both the old and the new allowance by unfortunate\n   * transaction ordering. One possible solution to mitigate this race\n   * condition is to first reduce the spender's allowance to 0 and set the\n   * desired value afterwards:\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n   *\n   * Emits an {Approval} event.\n   */\n  function approve(address spender, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Moves `amount` tokens from `sender` to `recipient` using the\n   * allowance mechanism. `amount` is then deducted from the caller's\n   * allowance.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * Emits a {Transfer} event.\n   */\n  function transferFrom(\n    address sender,\n    address recipient,\n    uint256 amount\n  ) external returns (bool);\n\n  /**\n   * @dev Emitted when `value` tokens are moved from one account (`from`) to\n   * another (`to`).\n   *\n   * Note that `value` may be zero.\n   */\n  event Transfer(address indexed from, address indexed to, uint256 value);\n\n  /**\n   * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n   * a call to {approve}. `value` is the new allowance.\n   */\n  event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "guy",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "wad",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"deposit()": "d0e30db0",
							"transfer(address,uint256)": "a9059cbb",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"guy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC20.sol\":{\"keccak256\":\"0xd5385404fd9f537884fd58a9af6d5de6f2c3e456f7f2ccfc736786b83d41efe6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ab129ea7f9535d2efedccd91c963f22953eeb3a95a8c497dc532ce506f80843\",\"dweb:/ipfs/QmXucCSBURQNLsqKEKrRPySnPru2SGx5H11TuWC71HhzpK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/StrongHands.sol": {
				"StrongHands": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "lockTime",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [],
							"name": "depositedAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCurrentBalanceOfATokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "a",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getMyEther",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getUserData",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "v",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sendEther",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sendKajmakToOwner",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/StrongHands.sol\":606:7032  contract StrongHands... */\n  mstore(0x40, 0xc0)\n    /* \"contracts/StrongHands.sol\":1090:1530  constructor(uint lockTime)  ... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/StrongHands.sol\":1145:1155  msg.sender */\n  caller\n    /* \"contracts/StrongHands.sol\":1135:1142  manager */\n  0x02\n  0x00\n    /* \"contracts/StrongHands.sol\":1135:1155  manager = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/StrongHands.sol\":1183:1191  lockTime */\n  dup1\n    /* \"contracts/StrongHands.sol\":1166:1191  timeToBeLocked = lockTime */\n  0x80\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/StrongHands.sol\":1215:1257  0xd0A1E359811322d97991E03f863a0C30C2cF029C */\n  0xd0a1e359811322d97991e03f863a0c30c2cf029c\n    /* \"contracts/StrongHands.sol\":1202:1258  weth = ERC20(0xd0A1E359811322d97991E03f863a0C30C2cF029C) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xa0\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/StrongHands.sol\":1318:1360  0x88757f2f99175387aB4C6a4b3067c77A695b0349 */\n  0x88757f2f99175387ab4c6a4b3067c77a695b0349\n    /* \"contracts/StrongHands.sol\":1269:1277  provider */\n  0x03\n  0x00\n    /* \"contracts/StrongHands.sol\":1269:1362  provider = ILendingPoolAddressesProvider(address(0x88757f2f99175387aB4C6a4b3067c77A695b0349)) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/StrongHands.sol\":1401:1409  provider */\n  0x03\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/StrongHands.sol\":1401:1424  provider.getLendingPool */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x0261bf8b\n    /* \"contracts/StrongHands.sol\":1401:1426  provider.getLendingPool() */\n  mload(0x40)\n  dup2\n  0xffffffff\n  and\n  0xe0\n  shl\n  dup2\n  mstore\n  0x04\n  add\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup7\n  gas\n  staticcall\n  iszero\n  dup1\n  iszero\n  tag_7\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_7:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n    /* \"contracts/StrongHands.sol\":1373:1385  lending_pool */\n  0x04\n  0x00\n    /* \"contracts/StrongHands.sol\":1373:1427  lending_pool = ILendingPool(provider.getLendingPool()) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/StrongHands.sol\":1456:1457  0 */\n  0x00\n    /* \"contracts/StrongHands.sol\":1438:1453  depositedAmount */\n  0x05\n    /* \"contracts/StrongHands.sol\":1438:1457  depositedAmount = 0 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/StrongHands.sol\":1468:1472  weth */\n  mload(0xa0)\n    /* \"contracts/StrongHands.sol\":1468:1480  weth.approve */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x095ea7b3\n    /* \"contracts/StrongHands.sol\":1489:1501  lending_pool */\n  0x04\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/StrongHands.sol\":1504:1521  type(uint256).max */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"contracts/StrongHands.sol\":1468:1522  weth.approve(address(lending_pool), type(uint256).max) */\n  mload(0x40)\n  dup4\n  0xffffffff\n  and\n  0xe0\n  shl\n  dup2\n  mstore\n  0x04\n  add\n  tag_10\n  swap3\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  0x00\n  dup8\n  gas\n  call\n  iszero\n  dup1\n  iszero\n  tag_13\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_13:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_14\n  swap2\n  swap1\n  tag_15\n  jump\t// in\ntag_14:\n  pop\n    /* \"contracts/StrongHands.sol\":1090:1530  constructor(uint lockTime)  ... */\n  pop\n    /* \"contracts/StrongHands.sol\":606:7032  contract StrongHands... */\n  jump(tag_16)\n    /* \"#utility.yul\":88:205   */\ntag_18:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:411   */\ntag_20:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":400:405   */\n  dup2\n    /* \"#utility.yul\":389:405   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:411   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":417:539   */\ntag_21:\n    /* \"#utility.yul\":490:514   */\n  tag_38\n    /* \"#utility.yul\":508:513   */\n  dup2\n    /* \"#utility.yul\":490:514   */\n  tag_20\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":483:488   */\n  dup2\n    /* \"#utility.yul\":480:515   */\n  eq\n    /* \"#utility.yul\":470:533   */\n  tag_39\n  jumpi\n    /* \"#utility.yul\":529:530   */\n  0x00\n    /* \"#utility.yul\":526:527   */\n  dup1\n    /* \"#utility.yul\":519:531   */\n  revert\n    /* \"#utility.yul\":470:533   */\ntag_39:\n    /* \"#utility.yul\":417:539   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":545:688   */\ntag_22:\n    /* \"#utility.yul\":602:607   */\n  0x00\n    /* \"#utility.yul\":633:639   */\n  dup2\n    /* \"#utility.yul\":627:640   */\n  mload\n    /* \"#utility.yul\":618:640   */\n  swap1\n  pop\n    /* \"#utility.yul\":649:682   */\n  tag_41\n    /* \"#utility.yul\":676:681   */\n  dup2\n    /* \"#utility.yul\":649:682   */\n  tag_21\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":545:688   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":694:1045   */\ntag_3:\n    /* \"#utility.yul\":764:770   */\n  0x00\n    /* \"#utility.yul\":813:815   */\n  0x20\n    /* \"#utility.yul\":801:810   */\n  dup3\n    /* \"#utility.yul\":792:799   */\n  dup5\n    /* \"#utility.yul\":788:811   */\n  sub\n    /* \"#utility.yul\":784:816   */\n  slt\n    /* \"#utility.yul\":781:900   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":819:898   */\n  tag_44\n  tag_18\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":781:900   */\ntag_43:\n    /* \"#utility.yul\":939:940   */\n  0x00\n    /* \"#utility.yul\":964:1028   */\n  tag_45\n    /* \"#utility.yul\":1020:1027   */\n  dup5\n    /* \"#utility.yul\":1011:1017   */\n  dup3\n    /* \"#utility.yul\":1000:1009   */\n  dup6\n    /* \"#utility.yul\":996:1018   */\n  add\n    /* \"#utility.yul\":964:1028   */\n  tag_22\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":954:1028   */\n  swap2\n  pop\n    /* \"#utility.yul\":910:1038   */\n  pop\n    /* \"#utility.yul\":694:1045   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1051:1177   */\ntag_23:\n    /* \"#utility.yul\":1088:1095   */\n  0x00\n    /* \"#utility.yul\":1128:1170   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1121:1126   */\n  dup3\n    /* \"#utility.yul\":1117:1171   */\n  and\n    /* \"#utility.yul\":1106:1171   */\n  swap1\n  pop\n    /* \"#utility.yul\":1051:1177   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1183:1279   */\ntag_24:\n    /* \"#utility.yul\":1220:1227   */\n  0x00\n    /* \"#utility.yul\":1249:1273   */\n  tag_48\n    /* \"#utility.yul\":1267:1272   */\n  dup3\n    /* \"#utility.yul\":1249:1273   */\n  tag_23\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":1238:1273   */\n  swap1\n  pop\n    /* \"#utility.yul\":1183:1279   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1285:1407   */\ntag_25:\n    /* \"#utility.yul\":1358:1382   */\n  tag_50\n    /* \"#utility.yul\":1376:1381   */\n  dup2\n    /* \"#utility.yul\":1358:1382   */\n  tag_24\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":1351:1356   */\n  dup2\n    /* \"#utility.yul\":1348:1383   */\n  eq\n    /* \"#utility.yul\":1338:1401   */\n  tag_51\n  jumpi\n    /* \"#utility.yul\":1397:1398   */\n  0x00\n    /* \"#utility.yul\":1394:1395   */\n  dup1\n    /* \"#utility.yul\":1387:1399   */\n  revert\n    /* \"#utility.yul\":1338:1401   */\ntag_51:\n    /* \"#utility.yul\":1285:1407   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1413:1556   */\ntag_26:\n    /* \"#utility.yul\":1470:1475   */\n  0x00\n    /* \"#utility.yul\":1501:1507   */\n  dup2\n    /* \"#utility.yul\":1495:1508   */\n  mload\n    /* \"#utility.yul\":1486:1508   */\n  swap1\n  pop\n    /* \"#utility.yul\":1517:1550   */\n  tag_53\n    /* \"#utility.yul\":1544:1549   */\n  dup2\n    /* \"#utility.yul\":1517:1550   */\n  tag_25\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":1413:1556   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1562:1913   */\ntag_9:\n    /* \"#utility.yul\":1632:1638   */\n  0x00\n    /* \"#utility.yul\":1681:1683   */\n  0x20\n    /* \"#utility.yul\":1669:1678   */\n  dup3\n    /* \"#utility.yul\":1660:1667   */\n  dup5\n    /* \"#utility.yul\":1656:1679   */\n  sub\n    /* \"#utility.yul\":1652:1684   */\n  slt\n    /* \"#utility.yul\":1649:1768   */\n  iszero\n  tag_55\n  jumpi\n    /* \"#utility.yul\":1687:1766   */\n  tag_56\n  tag_18\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":1649:1768   */\ntag_55:\n    /* \"#utility.yul\":1807:1808   */\n  0x00\n    /* \"#utility.yul\":1832:1896   */\n  tag_57\n    /* \"#utility.yul\":1888:1895   */\n  dup5\n    /* \"#utility.yul\":1879:1885   */\n  dup3\n    /* \"#utility.yul\":1868:1877   */\n  dup6\n    /* \"#utility.yul\":1864:1886   */\n  add\n    /* \"#utility.yul\":1832:1896   */\n  tag_26\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":1822:1896   */\n  swap2\n  pop\n    /* \"#utility.yul\":1778:1906   */\n  pop\n    /* \"#utility.yul\":1562:1913   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1919:2037   */\ntag_27:\n    /* \"#utility.yul\":2006:2030   */\n  tag_59\n    /* \"#utility.yul\":2024:2029   */\n  dup2\n    /* \"#utility.yul\":2006:2030   */\n  tag_24\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":2001:2004   */\n  dup3\n    /* \"#utility.yul\":1994:2031   */\n  mstore\n    /* \"#utility.yul\":1919:2037   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2043:2161   */\ntag_28:\n    /* \"#utility.yul\":2130:2154   */\n  tag_61\n    /* \"#utility.yul\":2148:2153   */\n  dup2\n    /* \"#utility.yul\":2130:2154   */\n  tag_20\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":2125:2128   */\n  dup3\n    /* \"#utility.yul\":2118:2155   */\n  mstore\n    /* \"#utility.yul\":2043:2161   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2167:2499   */\ntag_11:\n    /* \"#utility.yul\":2288:2292   */\n  0x00\n    /* \"#utility.yul\":2326:2328   */\n  0x40\n    /* \"#utility.yul\":2315:2324   */\n  dup3\n    /* \"#utility.yul\":2311:2329   */\n  add\n    /* \"#utility.yul\":2303:2329   */\n  swap1\n  pop\n    /* \"#utility.yul\":2339:2410   */\n  tag_63\n    /* \"#utility.yul\":2407:2408   */\n  0x00\n    /* \"#utility.yul\":2396:2405   */\n  dup4\n    /* \"#utility.yul\":2392:2409   */\n  add\n    /* \"#utility.yul\":2383:2389   */\n  dup6\n    /* \"#utility.yul\":2339:2410   */\n  tag_27\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":2420:2492   */\n  tag_64\n    /* \"#utility.yul\":2488:2490   */\n  0x20\n    /* \"#utility.yul\":2477:2486   */\n  dup4\n    /* \"#utility.yul\":2473:2491   */\n  add\n    /* \"#utility.yul\":2464:2470   */\n  dup5\n    /* \"#utility.yul\":2420:2492   */\n  tag_28\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":2167:2499   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2505:2595   */\ntag_29:\n    /* \"#utility.yul\":2539:2546   */\n  0x00\n    /* \"#utility.yul\":2582:2587   */\n  dup2\n    /* \"#utility.yul\":2575:2588   */\n  iszero\n    /* \"#utility.yul\":2568:2589   */\n  iszero\n    /* \"#utility.yul\":2557:2589   */\n  swap1\n  pop\n    /* \"#utility.yul\":2505:2595   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2601:2717   */\ntag_30:\n    /* \"#utility.yul\":2671:2692   */\n  tag_67\n    /* \"#utility.yul\":2686:2691   */\n  dup2\n    /* \"#utility.yul\":2671:2692   */\n  tag_29\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":2664:2669   */\n  dup2\n    /* \"#utility.yul\":2661:2693   */\n  eq\n    /* \"#utility.yul\":2651:2711   */\n  tag_68\n  jumpi\n    /* \"#utility.yul\":2707:2708   */\n  0x00\n    /* \"#utility.yul\":2704:2705   */\n  dup1\n    /* \"#utility.yul\":2697:2709   */\n  revert\n    /* \"#utility.yul\":2651:2711   */\ntag_68:\n    /* \"#utility.yul\":2601:2717   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2723:2860   */\ntag_31:\n    /* \"#utility.yul\":2777:2782   */\n  0x00\n    /* \"#utility.yul\":2808:2814   */\n  dup2\n    /* \"#utility.yul\":2802:2815   */\n  mload\n    /* \"#utility.yul\":2793:2815   */\n  swap1\n  pop\n    /* \"#utility.yul\":2824:2854   */\n  tag_70\n    /* \"#utility.yul\":2848:2853   */\n  dup2\n    /* \"#utility.yul\":2824:2854   */\n  tag_30\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":2723:2860   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2866:3211   */\ntag_15:\n    /* \"#utility.yul\":2933:2939   */\n  0x00\n    /* \"#utility.yul\":2982:2984   */\n  0x20\n    /* \"#utility.yul\":2970:2979   */\n  dup3\n    /* \"#utility.yul\":2961:2968   */\n  dup5\n    /* \"#utility.yul\":2957:2980   */\n  sub\n    /* \"#utility.yul\":2953:2985   */\n  slt\n    /* \"#utility.yul\":2950:3069   */\n  iszero\n  tag_72\n  jumpi\n    /* \"#utility.yul\":2988:3067   */\n  tag_73\n  tag_18\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":2950:3069   */\ntag_72:\n    /* \"#utility.yul\":3108:3109   */\n  0x00\n    /* \"#utility.yul\":3133:3194   */\n  tag_74\n    /* \"#utility.yul\":3186:3193   */\n  dup5\n    /* \"#utility.yul\":3177:3183   */\n  dup3\n    /* \"#utility.yul\":3166:3175   */\n  dup6\n    /* \"#utility.yul\":3162:3184   */\n  add\n    /* \"#utility.yul\":3133:3194   */\n  tag_31\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":3123:3194   */\n  swap2\n  pop\n    /* \"#utility.yul\":3079:3204   */\n  pop\n    /* \"#utility.yul\":2866:3211   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/StrongHands.sol\":606:7032  contract StrongHands... */\ntag_16:\n  mload(0x80)\n  mload(0xa0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x2cc0d3dcb20652cd8f106aee76b6a7391771a130885634c0eb2bbe3cde796691\")\n  0x00\n  assignImmutable(\"0xcc143a676b82d5e07b2c9d57717b403ab3c58caa273a42cdb95b15980141a86c\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/StrongHands.sol\":606:7032  contract StrongHands... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x0e29df22\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1d01364c\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x22e8c87d\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xc3d40853\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xdb88031a\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xe2ec0c2d\n      eq\n      tag_8\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      stop\n        /* \"contracts/StrongHands.sol\":1821:2270  function sendEther() public payable... */\n    tag_3:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      stop\n        /* \"contracts/StrongHands.sol\":1016:1043  uint public depositedAmount */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n      pop\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StrongHands.sol\":1627:1735  function getUserData() public view returns(uint v)... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      pop\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StrongHands.sol\":6084:6303  function getCurrentBalanceOfATokens() public view returns(uint a)... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      pop\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StrongHands.sol\":2483:5237  function getMyEther() public payable... */\n    tag_7:\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      stop\n        /* \"contracts/StrongHands.sol\":5371:5692  function sendKajmakToOwner() public payable onlyOwner... */\n    tag_8:\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      stop\n        /* \"contracts/StrongHands.sol\":1821:2270  function sendEther() public payable... */\n    tag_14:\n        /* \"contracts/StrongHands.sol\":1893:1894  0 */\n      0x00\n        /* \"contracts/StrongHands.sol\":1881:1890  msg.value */\n      callvalue\n        /* \"contracts/StrongHands.sol\":1881:1894  msg.value > 0 */\n      gt\n        /* \"contracts/StrongHands.sol\":1873:1927  require(msg.value > 0, \"You must send some tokens...\") */\n      tag_33\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_34\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_33:\n        /* \"contracts/StrongHands.sol\":1968:1977  msg.value */\n      callvalue\n        /* \"contracts/StrongHands.sol\":1938:1946  allUsers */\n      0x00\n        /* \"contracts/StrongHands.sol\":1938:1958  allUsers[msg.sender] */\n      dup1\n        /* \"contracts/StrongHands.sol\":1947:1957  msg.sender */\n      caller\n        /* \"contracts/StrongHands.sol\":1938:1958  allUsers[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StrongHands.sol\":1938:1964  allUsers[msg.sender].value */\n      0x00\n      add\n      0x00\n        /* \"contracts/StrongHands.sol\":1938:1977  allUsers[msg.sender].value += msg.value */\n      dup3\n      dup3\n      sload\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StrongHands.sol\":2020:2035  block.timestamp */\n      timestamp\n        /* \"contracts/StrongHands.sol\":1988:1996  allUsers */\n      0x00\n        /* \"contracts/StrongHands.sol\":1988:2008  allUsers[msg.sender] */\n      dup1\n        /* \"contracts/StrongHands.sol\":1997:2007  msg.sender */\n      caller\n        /* \"contracts/StrongHands.sol\":1988:2008  allUsers[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StrongHands.sol\":1988:2017  allUsers[msg.sender].lockTime */\n      0x01\n      add\n        /* \"contracts/StrongHands.sol\":1988:2035  allUsers[msg.sender].lockTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StrongHands.sol\":2078:2083  false */\n      0x00\n        /* \"contracts/StrongHands.sol\":2049:2083  allUsers[msg.sender].flag == false */\n      iszero\n      iszero\n        /* \"contracts/StrongHands.sol\":2049:2057  allUsers */\n      0x00\n        /* \"contracts/StrongHands.sol\":2049:2069  allUsers[msg.sender] */\n      dup1\n        /* \"contracts/StrongHands.sol\":2058:2068  msg.sender */\n      caller\n        /* \"contracts/StrongHands.sol\":2049:2069  allUsers[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StrongHands.sol\":2049:2074  allUsers[msg.sender].flag */\n      0x02\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/StrongHands.sol\":2049:2083  allUsers[msg.sender].flag == false */\n      iszero\n      iszero\n      sub\n        /* \"contracts/StrongHands.sol\":2046:2194  if(allUsers[msg.sender].flag == false)... */\n      tag_38\n      jumpi\n        /* \"contracts/StrongHands.sol\":2137:2141  true */\n      0x01\n        /* \"contracts/StrongHands.sol\":2109:2117  allUsers */\n      0x00\n        /* \"contracts/StrongHands.sol\":2109:2129  allUsers[msg.sender] */\n      dup1\n        /* \"contracts/StrongHands.sol\":2118:2128  msg.sender */\n      caller\n        /* \"contracts/StrongHands.sol\":2109:2129  allUsers[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StrongHands.sol\":2109:2134  allUsers[msg.sender].flag */\n      0x02\n      add\n      0x00\n        /* \"contracts/StrongHands.sol\":2109:2141  allUsers[msg.sender].flag = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/StrongHands.sol\":2156:2165  usernames */\n      0x01\n        /* \"contracts/StrongHands.sol\":2171:2181  msg.sender */\n      caller\n        /* \"contracts/StrongHands.sol\":2156:2182  usernames.push(msg.sender) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/StrongHands.sol\":2046:2194  if(allUsers[msg.sender].flag == false)... */\n    tag_38:\n        /* \"contracts/StrongHands.sol\":2203:2225  depositAave(msg.value) */\n      tag_40\n        /* \"contracts/StrongHands.sol\":2215:2224  msg.value */\n      callvalue\n        /* \"contracts/StrongHands.sol\":2203:2214  depositAave */\n      tag_41\n        /* \"contracts/StrongHands.sol\":2203:2225  depositAave(msg.value) */\n      jump\t// in\n    tag_40:\n        /* \"contracts/StrongHands.sol\":2253:2262  msg.value */\n      callvalue\n        /* \"contracts/StrongHands.sol\":2235:2250  depositedAmount */\n      0x05\n      0x00\n        /* \"contracts/StrongHands.sol\":2235:2262  depositedAmount +=msg.value */\n      dup3\n      dup3\n      sload\n      tag_42\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_42:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StrongHands.sol\":1821:2270  function sendEther() public payable... */\n      jump\t// out\n        /* \"contracts/StrongHands.sol\":1016:1043  uint public depositedAmount */\n    tag_17:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"contracts/StrongHands.sol\":1627:1735  function getUserData() public view returns(uint v)... */\n    tag_22:\n        /* \"contracts/StrongHands.sol\":1670:1676  uint v */\n      0x00\n        /* \"contracts/StrongHands.sol\":1701:1709  allUsers */\n      dup1\n        /* \"contracts/StrongHands.sol\":1701:1721  allUsers[msg.sender] */\n      0x00\n        /* \"contracts/StrongHands.sol\":1710:1720  msg.sender */\n      caller\n        /* \"contracts/StrongHands.sol\":1701:1721  allUsers[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StrongHands.sol\":1701:1727  allUsers[msg.sender].value */\n      0x00\n      add\n      sload\n        /* \"contracts/StrongHands.sol\":1694:1727  return allUsers[msg.sender].value */\n      swap1\n      pop\n        /* \"contracts/StrongHands.sol\":1627:1735  function getUserData() public view returns(uint v)... */\n      swap1\n      jump\t// out\n        /* \"contracts/StrongHands.sol\":6084:6303  function getCurrentBalanceOfATokens() public view returns(uint a)... */\n    tag_26:\n        /* \"contracts/StrongHands.sol\":6142:6148  uint a */\n      0x00\n        /* \"contracts/StrongHands.sol\":6166:6179  IAToken aWETH */\n      dup1\n        /* \"contracts/StrongHands.sol\":6190:6202  lending_pool */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StrongHands.sol\":6190:6217  lending_pool.getReserveData */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x35ea6a75\n        /* \"contracts/StrongHands.sol\":6226:6230  weth */\n      immutable(\"0x2cc0d3dcb20652cd8f106aee76b6a7391771a130885634c0eb2bbe3cde796691\")\n        /* \"contracts/StrongHands.sol\":6190:6232  lending_pool.getReserveData(address(weth)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      0x0180\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_48\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_48:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n        /* \"contracts/StrongHands.sol\":6190:6246  lending_pool.getReserveData(address(weth)).aTokenAddress */\n      0xe0\n      add\n      mload\n        /* \"contracts/StrongHands.sol\":6166:6247  IAToken aWETH = IAToken(lending_pool.getReserveData(address(weth)).aTokenAddress) */\n      swap1\n      pop\n        /* \"contracts/StrongHands.sol\":6265:6270  aWETH */\n      dup1\n        /* \"contracts/StrongHands.sol\":6265:6280  aWETH.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/StrongHands.sol\":6289:6293  this */\n      address\n        /* \"contracts/StrongHands.sol\":6265:6295  aWETH.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_51\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_51:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_53\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_53:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n        /* \"contracts/StrongHands.sol\":6258:6295  return aWETH.balanceOf(address(this)) */\n      swap2\n      pop\n      pop\n        /* \"contracts/StrongHands.sol\":6084:6303  function getCurrentBalanceOfATokens() public view returns(uint a)... */\n      swap1\n      jump\t// out\n        /* \"contracts/StrongHands.sol\":2483:5237  function getMyEther() public payable... */\n    tag_29:\n        /* \"contracts/StrongHands.sol\":2536:2559  uint currentMoneyOfUser */\n      0x00\n        /* \"contracts/StrongHands.sol\":2562:2570  allUsers */\n      dup1\n        /* \"contracts/StrongHands.sol\":2562:2582  allUsers[msg.sender] */\n      0x00\n        /* \"contracts/StrongHands.sol\":2571:2581  msg.sender */\n      caller\n        /* \"contracts/StrongHands.sol\":2562:2582  allUsers[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StrongHands.sol\":2562:2588  allUsers[msg.sender].value */\n      0x00\n      add\n      sload\n        /* \"contracts/StrongHands.sol\":2536:2588  uint currentMoneyOfUser = allUsers[msg.sender].value */\n      swap1\n      pop\n        /* \"contracts/StrongHands.sol\":2628:2629  0 */\n      0x00\n        /* \"contracts/StrongHands.sol\":2607:2625  currentMoneyOfUser */\n      dup2\n        /* \"contracts/StrongHands.sol\":2607:2629  currentMoneyOfUser > 0 */\n      gt\n        /* \"contracts/StrongHands.sol\":2599:2663  require(currentMoneyOfUser > 0, \"User don't have deposited ETH\") */\n      tag_57\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_58\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_57:\n        /* \"contracts/StrongHands.sol\":2674:2693  uint lockTimeOfUser */\n      0x00\n        /* \"contracts/StrongHands.sol\":2696:2704  allUsers */\n      dup1\n        /* \"contracts/StrongHands.sol\":2696:2716  allUsers[msg.sender] */\n      0x00\n        /* \"contracts/StrongHands.sol\":2705:2715  msg.sender */\n      caller\n        /* \"contracts/StrongHands.sol\":2696:2716  allUsers[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StrongHands.sol\":2696:2725  allUsers[msg.sender].lockTime */\n      0x01\n      add\n      sload\n        /* \"contracts/StrongHands.sol\":2674:2725  uint lockTimeOfUser = allUsers[msg.sender].lockTime */\n      swap1\n      pop\n        /* \"contracts/StrongHands.sol\":2736:2757  uint currentBlockTime */\n      0x00\n        /* \"contracts/StrongHands.sol\":2760:2775  block.timestamp */\n      timestamp\n        /* \"contracts/StrongHands.sol\":2736:2775  uint currentBlockTime = block.timestamp */\n      swap1\n      pop\n        /* \"contracts/StrongHands.sol\":2825:2839  timeToBeLocked */\n      immutable(\"0xcc143a676b82d5e07b2c9d57717b403ab3c58caa273a42cdb95b15980141a86c\")\n        /* \"contracts/StrongHands.sol\":2808:2822  lockTimeOfUser */\n      dup3\n        /* \"contracts/StrongHands.sol\":2808:2839  lockTimeOfUser + timeToBeLocked */\n      tag_60\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_60:\n        /* \"contracts/StrongHands.sol\":2789:2805  currentBlockTime */\n      dup2\n        /* \"contracts/StrongHands.sol\":2789:2839  currentBlockTime > lockTimeOfUser + timeToBeLocked */\n      gt\n        /* \"contracts/StrongHands.sol\":2786:3339  if(currentBlockTime > lockTimeOfUser + timeToBeLocked )  ... */\n      iszero\n      tag_61\n      jumpi\n        /* \"contracts/StrongHands.sol\":3063:3064  0 */\n      0x00\n        /* \"contracts/StrongHands.sol\":3034:3042  allUsers */\n      dup1\n        /* \"contracts/StrongHands.sol\":3034:3054  allUsers[msg.sender] */\n      0x00\n        /* \"contracts/StrongHands.sol\":3043:3053  msg.sender */\n      caller\n        /* \"contracts/StrongHands.sol\":3034:3054  allUsers[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StrongHands.sol\":3034:3060  allUsers[msg.sender].value */\n      0x00\n      add\n        /* \"contracts/StrongHands.sol\":3034:3064  allUsers[msg.sender].value = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StrongHands.sol\":3115:3133  currentMoneyOfUser */\n      dup3\n        /* \"contracts/StrongHands.sol\":3097:3112  depositedAmount */\n      sload(0x05)\n        /* \"contracts/StrongHands.sol\":3097:3133  depositedAmount - currentMoneyOfUser */\n      tag_62\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n        /* \"contracts/StrongHands.sol\":3079:3094  depositedAmount */\n      0x05\n        /* \"contracts/StrongHands.sol\":3079:3133  depositedAmount = depositedAmount - currentMoneyOfUser */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StrongHands.sol\":3148:3180  withdrawWETH(currentMoneyOfUser) */\n      tag_64\n        /* \"contracts/StrongHands.sol\":3161:3179  currentMoneyOfUser */\n      dup4\n        /* \"contracts/StrongHands.sol\":3148:3160  withdrawWETH */\n      tag_65\n        /* \"contracts/StrongHands.sol\":3148:3180  withdrawWETH(currentMoneyOfUser) */\n      jump\t// in\n    tag_64:\n        /* \"contracts/StrongHands.sol\":3196:3205  bool succ */\n      0x00\n        /* \"contracts/StrongHands.sol\":3211:3221  msg.sender */\n      caller\n        /* \"contracts/StrongHands.sol\":3211:3226  msg.sender.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StrongHands.sol\":3235:3253  currentMoneyOfUser */\n      dup5\n        /* \"contracts/StrongHands.sol\":3211:3258  msg.sender.call{value : currentMoneyOfUser}(\"\") */\n      mload(0x40)\n      tag_66\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_70\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_69)\n    tag_70:\n      0x60\n      swap2\n      pop\n    tag_69:\n      pop\n        /* \"contracts/StrongHands.sol\":3195:3258  (bool succ, ) = msg.sender.call{value : currentMoneyOfUser}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"contracts/StrongHands.sol\":3281:3285  succ */\n      dup1\n        /* \"contracts/StrongHands.sol\":3273:3306  require(succ, \"Transfer failed.\") */\n      tag_71\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_72\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_71:\n        /* \"contracts/StrongHands.sol\":3321:3328  return; */\n      pop\n      pop\n      pop\n      pop\n      jump(tag_56)\n        /* \"contracts/StrongHands.sol\":2786:3339  if(currentBlockTime > lockTimeOfUser + timeToBeLocked )  ... */\n    tag_61:\n        /* \"contracts/StrongHands.sol\":3664:3678  uint spentTime */\n      0x00\n        /* \"contracts/StrongHands.sol\":3722:3736  timeToBeLocked */\n      immutable(\"0xcc143a676b82d5e07b2c9d57717b403ab3c58caa273a42cdb95b15980141a86c\")\n        /* \"contracts/StrongHands.sol\":3716:3719  100 */\n      0x64\n        /* \"contracts/StrongHands.sol\":3700:3714  lockTimeOfUser */\n      dup5\n        /* \"contracts/StrongHands.sol\":3683:3699  currentBlockTime */\n      dup5\n        /* \"contracts/StrongHands.sol\":3683:3714  currentBlockTime-lockTimeOfUser */\n      tag_74\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_74:\n        /* \"contracts/StrongHands.sol\":3682:3719  (currentBlockTime-lockTimeOfUser)*100 */\n      tag_75\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n        /* \"contracts/StrongHands.sol\":3681:3737  ((currentBlockTime-lockTimeOfUser)*100)/(timeToBeLocked) */\n      tag_77\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n        /* \"contracts/StrongHands.sol\":3664:3737  uint spentTime = ((currentBlockTime-lockTimeOfUser)*100)/(timeToBeLocked) */\n      swap1\n      pop\n        /* \"contracts/StrongHands.sol\":3777:3791  uint toBePayed */\n      0x00\n        /* \"contracts/StrongHands.sol\":3840:3843  100 */\n      0x64\n        /* \"contracts/StrongHands.sol\":3835:3836  2 */\n      0x02\n        /* \"contracts/StrongHands.sol\":3824:3833  spentTime */\n      dup4\n        /* \"contracts/StrongHands.sol\":3818:3821  100 */\n      0x64\n        /* \"contracts/StrongHands.sol\":3818:3833  100 - spentTime */\n      tag_79\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_79:\n        /* \"contracts/StrongHands.sol\":3817:3836  (100 - spentTime)/2 */\n      tag_80\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_80:\n        /* \"contracts/StrongHands.sol\":3795:3813  currentMoneyOfUser */\n      dup7\n        /* \"contracts/StrongHands.sol\":3795:3837  currentMoneyOfUser * ((100 - spentTime)/2) */\n      tag_81\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_81:\n        /* \"contracts/StrongHands.sol\":3794:3843  (currentMoneyOfUser * ((100 - spentTime)/2)) /100 */\n      tag_82\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_82:\n        /* \"contracts/StrongHands.sol\":3777:3843  uint toBePayed = (currentMoneyOfUser * ((100 - spentTime)/2)) /100 */\n      swap1\n      pop\n        /* \"contracts/StrongHands.sol\":3877:3883  uint x */\n      0x00\n        /* \"contracts/StrongHands.sol\":3886:3895  toBePayed */\n      dup2\n        /* \"contracts/StrongHands.sol\":3877:3895  uint x = toBePayed */\n      swap1\n      pop\n        /* \"contracts/StrongHands.sol\":4018:4028  uint money */\n      0x00\n        /* \"contracts/StrongHands.sol\":4050:4068  currentMoneyOfUser */\n      dup7\n        /* \"contracts/StrongHands.sol\":4031:4046  depositedAmount */\n      sload(0x05)\n        /* \"contracts/StrongHands.sol\":4031:4068  depositedAmount -  currentMoneyOfUser */\n      tag_83\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_83:\n        /* \"contracts/StrongHands.sol\":4018:4068  uint money = depositedAmount -  currentMoneyOfUser */\n      swap1\n      pop\n        /* \"contracts/StrongHands.sol\":4142:4171  address [] memory  _usernames */\n      0x00\n        /* \"contracts/StrongHands.sol\":4174:4183  usernames */\n      0x01\n        /* \"contracts/StrongHands.sol\":4142:4183  address [] memory  _usernames = usernames */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_84\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_85:\n      dup2\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      dup1\n      dup4\n      gt\n      tag_85\n      jumpi\n    tag_84:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/StrongHands.sol\":4194:4203  uint perc */\n      0x00\n        /* \"contracts/StrongHands.sol\":4215:4225  uint toPay */\n      dup1\n        /* \"contracts/StrongHands.sol\":4241:4247  uint i */\n      0x00\n        /* \"contracts/StrongHands.sol\":4236:4845  for (uint i = 0; i < _usernames.length; i++)... */\n    tag_86:\n        /* \"contracts/StrongHands.sol\":4257:4267  _usernames */\n      dup4\n        /* \"contracts/StrongHands.sol\":4257:4274  _usernames.length */\n      mload\n        /* \"contracts/StrongHands.sol\":4253:4254  i */\n      dup2\n        /* \"contracts/StrongHands.sol\":4253:4274  i < _usernames.length */\n      lt\n        /* \"contracts/StrongHands.sol\":4236:4845  for (uint i = 0; i < _usernames.length; i++)... */\n      iszero\n      tag_87\n      jumpi\n        /* \"contracts/StrongHands.sol\":4305:4332  uint currentMappedUserValue */\n      0x00\n        /* \"contracts/StrongHands.sol\":4335:4343  allUsers */\n      dup1\n        /* \"contracts/StrongHands.sol\":4335:4358  allUsers[_usernames[i]] */\n      0x00\n        /* \"contracts/StrongHands.sol\":4344:4354  _usernames */\n      dup7\n        /* \"contracts/StrongHands.sol\":4355:4356  i */\n      dup5\n        /* \"contracts/StrongHands.sol\":4344:4357  _usernames[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_89\n      jumpi\n      tag_90\n      tag_91\n      jump\t// in\n    tag_90:\n    tag_89:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/StrongHands.sol\":4335:4358  allUsers[_usernames[i]] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StrongHands.sol\":4335:4364  allUsers[_usernames[i]].value */\n      0x00\n      add\n      sload\n        /* \"contracts/StrongHands.sol\":4305:4364  uint currentMappedUserValue = allUsers[_usernames[i]].value */\n      swap1\n      pop\n        /* \"contracts/StrongHands.sol\":4397:4407  msg.sender */\n      caller\n        /* \"contracts/StrongHands.sol\":4382:4407  _usernames[i]!=msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StrongHands.sol\":4382:4392  _usernames */\n      dup6\n        /* \"contracts/StrongHands.sol\":4393:4394  i */\n      dup4\n        /* \"contracts/StrongHands.sol\":4382:4395  _usernames[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_92\n      jumpi\n      tag_93\n      tag_91\n      jump\t// in\n    tag_93:\n    tag_92:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/StrongHands.sol\":4382:4407  _usernames[i]!=msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/StrongHands.sol\":4382:4438  _usernames[i]!=msg.sender &&  currentMappedUserValue > 0 */\n      dup1\n      iszero\n      tag_94\n      jumpi\n      pop\n        /* \"contracts/StrongHands.sol\":4437:4438  0 */\n      0x00\n        /* \"contracts/StrongHands.sol\":4412:4434  currentMappedUserValue */\n      dup2\n        /* \"contracts/StrongHands.sol\":4412:4438  currentMappedUserValue > 0 */\n      gt\n        /* \"contracts/StrongHands.sol\":4382:4438  _usernames[i]!=msg.sender &&  currentMappedUserValue > 0 */\n    tag_94:\n        /* \"contracts/StrongHands.sol\":4379:4834  if(_usernames[i]!=msg.sender &&  currentMappedUserValue > 0)... */\n      iszero\n      tag_95\n      jumpi\n        /* \"contracts/StrongHands.sol\":4669:4674  money */\n      dup6\n        /* \"contracts/StrongHands.sol\":1076:1081  10000 */\n      0x2710\n        /* \"contracts/StrongHands.sol\":4631:4653  currentMappedUserValue */\n      dup3\n        /* \"contracts/StrongHands.sol\":4631:4665  currentMappedUserValue * percision */\n      tag_96\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_96:\n        /* \"contracts/StrongHands.sol\":4630:4674  (currentMappedUserValue * percision) / money */\n      tag_97\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_97:\n        /* \"contracts/StrongHands.sol\":4623:4674  perc = (currentMappedUserValue * percision) / money */\n      swap4\n      pop\n        /* \"contracts/StrongHands.sol\":1076:1081  10000 */\n      0x2710\n        /* \"contracts/StrongHands.sol\":4713:4717  perc */\n      dup5\n        /* \"contracts/StrongHands.sol\":4703:4712  toBePayed */\n      dup10\n        /* \"contracts/StrongHands.sol\":4703:4717  toBePayed*perc */\n      tag_98\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_98:\n        /* \"contracts/StrongHands.sol\":4702:4730  (toBePayed*perc)/(percision) */\n      tag_99\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_99:\n        /* \"contracts/StrongHands.sol\":4694:4730  toPay = (toBePayed*perc)/(percision) */\n      swap3\n      pop\n        /* \"contracts/StrongHands.sol\":4757:4762  toPay */\n      dup3\n        /* \"contracts/StrongHands.sol\":4753:4754  x */\n      dup8\n        /* \"contracts/StrongHands.sol\":4753:4762  x - toPay */\n      tag_100\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_100:\n        /* \"contracts/StrongHands.sol\":4749:4762  x = x - toPay */\n      swap7\n      pop\n        /* \"contracts/StrongHands.sol\":4813:4818  toPay */\n      dup3\n        /* \"contracts/StrongHands.sol\":4781:4789  allUsers */\n      0x00\n        /* \"contracts/StrongHands.sol\":4781:4804  allUsers[_usernames[i]] */\n      dup1\n        /* \"contracts/StrongHands.sol\":4790:4800  _usernames */\n      dup8\n        /* \"contracts/StrongHands.sol\":4801:4802  i */\n      dup6\n        /* \"contracts/StrongHands.sol\":4790:4803  _usernames[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_101\n      jumpi\n      tag_102\n      tag_91\n      jump\t// in\n    tag_102:\n    tag_101:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/StrongHands.sol\":4781:4804  allUsers[_usernames[i]] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StrongHands.sol\":4781:4810  allUsers[_usernames[i]].value */\n      0x00\n      add\n      0x00\n        /* \"contracts/StrongHands.sol\":4781:4818  allUsers[_usernames[i]].value +=toPay */\n      dup3\n      dup3\n      sload\n      tag_103\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_103:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StrongHands.sol\":4379:4834  if(_usernames[i]!=msg.sender &&  currentMappedUserValue > 0)... */\n    tag_95:\n        /* \"contracts/StrongHands.sol\":4290:4845  {... */\n      pop\n        /* \"contracts/StrongHands.sol\":4276:4279  i++ */\n      dup1\n      dup1\n      tag_104\n      swap1\n      tag_105\n      jump\t// in\n    tag_104:\n      swap2\n      pop\n      pop\n        /* \"contracts/StrongHands.sol\":4236:4845  for (uint i = 0; i < _usernames.length; i++)... */\n      jump(tag_86)\n    tag_87:\n      pop\n        /* \"contracts/StrongHands.sol\":4911:4912  x */\n      dup5\n        /* \"contracts/StrongHands.sol\":4899:4908  toBePayed */\n      dup7\n        /* \"contracts/StrongHands.sol\":4878:4896  currentMoneyOfUser */\n      dup12\n        /* \"contracts/StrongHands.sol\":4878:4908  currentMoneyOfUser - toBePayed */\n      tag_106\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_106:\n        /* \"contracts/StrongHands.sol\":4878:4912  currentMoneyOfUser - toBePayed + x */\n      tag_107\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_107:\n        /* \"contracts/StrongHands.sol\":4857:4912  currentMoneyOfUser = currentMoneyOfUser - toBePayed + x */\n      swap10\n      pop\n        /* \"contracts/StrongHands.sol\":4960:4978  currentMoneyOfUser */\n      dup10\n        /* \"contracts/StrongHands.sol\":4942:4957  depositedAmount */\n      sload(0x05)\n        /* \"contracts/StrongHands.sol\":4942:4978  depositedAmount - currentMoneyOfUser */\n      tag_108\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_108:\n        /* \"contracts/StrongHands.sol\":4924:4939  depositedAmount */\n      0x05\n        /* \"contracts/StrongHands.sol\":4924:4978  depositedAmount = depositedAmount - currentMoneyOfUser */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StrongHands.sol\":5018:5019  0 */\n      0x00\n        /* \"contracts/StrongHands.sol\":4989:4997  allUsers */\n      dup1\n        /* \"contracts/StrongHands.sol\":4989:5009  allUsers[msg.sender] */\n      0x00\n        /* \"contracts/StrongHands.sol\":4998:5008  msg.sender */\n      caller\n        /* \"contracts/StrongHands.sol\":4989:5009  allUsers[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StrongHands.sol\":4989:5015  allUsers[msg.sender].value */\n      0x00\n      add\n        /* \"contracts/StrongHands.sol\":4989:5019  allUsers[msg.sender].value = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StrongHands.sol\":5030:5062  withdrawWETH(currentMoneyOfUser) */\n      tag_109\n        /* \"contracts/StrongHands.sol\":5043:5061  currentMoneyOfUser */\n      dup11\n        /* \"contracts/StrongHands.sol\":5030:5042  withdrawWETH */\n      tag_65\n        /* \"contracts/StrongHands.sol\":5030:5062  withdrawWETH(currentMoneyOfUser) */\n      jump\t// in\n    tag_109:\n        /* \"contracts/StrongHands.sol\":5074:5086  bool success */\n      0x00\n        /* \"contracts/StrongHands.sol\":5092:5102  msg.sender */\n      caller\n        /* \"contracts/StrongHands.sol\":5092:5107  msg.sender.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StrongHands.sol\":5116:5134  currentMoneyOfUser */\n      dup12\n        /* \"contracts/StrongHands.sol\":5092:5139  msg.sender.call{value : currentMoneyOfUser}(\"\") */\n      mload(0x40)\n      tag_110\n      swap1\n      tag_67\n      jump\t// in\n    tag_110:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_113\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_112)\n    tag_113:\n      0x60\n      swap2\n      pop\n    tag_112:\n      pop\n        /* \"contracts/StrongHands.sol\":5073:5139  (bool success, ) = msg.sender.call{value : currentMoneyOfUser}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"contracts/StrongHands.sol\":5158:5165  success */\n      dup1\n        /* \"contracts/StrongHands.sol\":5150:5186  require(success, \"Transfer failed.\") */\n      tag_114\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_115\n      swap1\n      tag_73\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_114:\n        /* \"contracts/StrongHands.sol\":5226:5227  0 */\n      0x00\n        /* \"contracts/StrongHands.sol\":5197:5205  allUsers */\n      dup1\n        /* \"contracts/StrongHands.sol\":5197:5217  allUsers[msg.sender] */\n      0x00\n        /* \"contracts/StrongHands.sol\":5206:5216  msg.sender */\n      caller\n        /* \"contracts/StrongHands.sol\":5197:5217  allUsers[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StrongHands.sol\":5197:5223  allUsers[msg.sender].value */\n      0x00\n      add\n        /* \"contracts/StrongHands.sol\":5197:5227  allUsers[msg.sender].value = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StrongHands.sol\":2525:5237  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/StrongHands.sol\":2483:5237  function getMyEther() public payable... */\n    tag_56:\n      jump\t// out\n        /* \"contracts/StrongHands.sol\":5371:5692  function sendKajmakToOwner() public payable onlyOwner... */\n    tag_31:\n        /* \"contracts/StrongHands.sol\":5758:5765  manager */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StrongHands.sol\":5744:5765  msg.sender == manager */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StrongHands.sol\":5744:5754  msg.sender */\n      caller\n        /* \"contracts/StrongHands.sol\":5744:5765  msg.sender == manager */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/StrongHands.sol\":5736:5804  require(msg.sender == manager , \"Only owner can call this function\") */\n      tag_117\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_118\n      swap1\n      tag_119\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_117:\n        /* \"contracts/StrongHands.sol\":5443:5454  uint income */\n      0x00\n        /* \"contracts/StrongHands.sol\":5488:5503  depositedAmount */\n      sload(0x05)\n        /* \"contracts/StrongHands.sol\":5457:5485  getCurrentBalanceOfATokens() */\n      tag_121\n        /* \"contracts/StrongHands.sol\":5457:5483  getCurrentBalanceOfATokens */\n      tag_26\n        /* \"contracts/StrongHands.sol\":5457:5485  getCurrentBalanceOfATokens() */\n      jump\t// in\n    tag_121:\n        /* \"contracts/StrongHands.sol\":5457:5503  getCurrentBalanceOfATokens() - depositedAmount */\n      tag_122\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_122:\n        /* \"contracts/StrongHands.sol\":5443:5503  uint income = getCurrentBalanceOfATokens() - depositedAmount */\n      swap1\n      pop\n        /* \"contracts/StrongHands.sol\":5533:5534  0 */\n      0x00\n        /* \"contracts/StrongHands.sol\":5524:5530  income */\n      dup2\n        /* \"contracts/StrongHands.sol\":5524:5534  income > 0 */\n      gt\n        /* \"contracts/StrongHands.sol\":5516:5535  require(income > 0) */\n      tag_123\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_123:\n        /* \"contracts/StrongHands.sol\":5548:5568  withdrawWETH(income) */\n      tag_124\n        /* \"contracts/StrongHands.sol\":5561:5567  income */\n      dup2\n        /* \"contracts/StrongHands.sol\":5548:5560  withdrawWETH */\n      tag_65\n        /* \"contracts/StrongHands.sol\":5548:5568  withdrawWETH(income) */\n      jump\t// in\n    tag_124:\n        /* \"contracts/StrongHands.sol\":5582:5594  bool success */\n      0x00\n        /* \"contracts/StrongHands.sol\":5600:5610  msg.sender */\n      caller\n        /* \"contracts/StrongHands.sol\":5600:5615  msg.sender.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StrongHands.sol\":5624:5630  income */\n      dup3\n        /* \"contracts/StrongHands.sol\":5600:5635  msg.sender.call{value : income}(\"\") */\n      mload(0x40)\n      tag_125\n      swap1\n      tag_67\n      jump\t// in\n    tag_125:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_128\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_127)\n    tag_128:\n      0x60\n      swap2\n      pop\n    tag_127:\n      pop\n        /* \"contracts/StrongHands.sol\":5581:5635  (bool success, ) = msg.sender.call{value : income}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"contracts/StrongHands.sol\":5656:5663  success */\n      dup1\n        /* \"contracts/StrongHands.sol\":5648:5684  require(success, \"Transfer failed.\") */\n      tag_129\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_130\n      swap1\n      tag_73\n      jump\t// in\n    tag_130:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_129:\n        /* \"contracts/StrongHands.sol\":5430:5692  {... */\n      pop\n      pop\n        /* \"contracts/StrongHands.sol\":5371:5692  function sendKajmakToOwner() public payable onlyOwner... */\n      jump\t// out\n        /* \"contracts/StrongHands.sol\":6782:6951  function depositAave(uint val) internal ... */\n    tag_41:\n        /* \"contracts/StrongHands.sol\":6851:6852  0 */\n      0x00\n        /* \"contracts/StrongHands.sol\":6845:6848  val */\n      dup2\n        /* \"contracts/StrongHands.sol\":6845:6852  val > 0 */\n      gt\n        /* \"contracts/StrongHands.sol\":6837:6853  require(val > 0) */\n      tag_132\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_132:\n        /* \"contracts/StrongHands.sol\":6862:6877  depositETH(val) */\n      tag_133\n        /* \"contracts/StrongHands.sol\":6873:6876  val */\n      dup2\n        /* \"contracts/StrongHands.sol\":6862:6872  depositETH */\n      tag_134\n        /* \"contracts/StrongHands.sol\":6862:6877  depositETH(val) */\n      jump\t// in\n    tag_133:\n        /* \"contracts/StrongHands.sol\":6886:6898  lending_pool */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StrongHands.sol\":6886:6906  lending_pool.deposit */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xe8eda9df\n        /* \"contracts/StrongHands.sol\":6915:6919  weth */\n      immutable(\"0x2cc0d3dcb20652cd8f106aee76b6a7391771a130885634c0eb2bbe3cde796691\")\n        /* \"contracts/StrongHands.sol\":6921:6924  val */\n      dup4\n        /* \"contracts/StrongHands.sol\":6934:6938  this */\n      address\n        /* \"contracts/StrongHands.sol\":6941:6942  0 */\n      0x00\n        /* \"contracts/StrongHands.sol\":6886:6943  lending_pool.deposit(address(weth),val, address(this), 0) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_135\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_136\n      jump\t// in\n    tag_135:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_137\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_137:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_139\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_139:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/StrongHands.sol\":6782:6951  function depositAave(uint val) internal ... */\n      pop\n      jump\t// out\n        /* \"contracts/StrongHands.sol\":6467:6697  function withdrawWETH(uint val) internal ... */\n    tag_65:\n        /* \"contracts/StrongHands.sol\":6527:6539  lending_pool */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StrongHands.sol\":6527:6548  lending_pool.withdraw */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x69328dec\n        /* \"contracts/StrongHands.sol\":6557:6561  weth */\n      immutable(\"0x2cc0d3dcb20652cd8f106aee76b6a7391771a130885634c0eb2bbe3cde796691\")\n        /* \"contracts/StrongHands.sol\":6563:6566  val */\n      dup4\n        /* \"contracts/StrongHands.sol\":6576:6580  this */\n      address\n        /* \"contracts/StrongHands.sol\":6527:6582  lending_pool.withdraw(address(weth),val, address(this)) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_141\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_142\n      jump\t// in\n    tag_141:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_144\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_144:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_145\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_145:\n      pop\n        /* \"contracts/StrongHands.sol\":6593:6602  bool torf */\n      0x00\n        /* \"contracts/StrongHands.sol\":6605:6609  weth */\n      immutable(\"0x2cc0d3dcb20652cd8f106aee76b6a7391771a130885634c0eb2bbe3cde796691\")\n        /* \"contracts/StrongHands.sol\":6605:6617  weth.approve */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x095ea7b3\n        /* \"contracts/StrongHands.sol\":6626:6630  this */\n      address\n        /* \"contracts/StrongHands.sol\":6634:6637  val */\n      dup5\n        /* \"contracts/StrongHands.sol\":6605:6638  weth.approve(address(this) , val) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_146\n      swap3\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n    tag_146:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_149\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_149:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_150\n      swap2\n      swap1\n      tag_151\n      jump\t// in\n    tag_150:\n        /* \"contracts/StrongHands.sol\":6593:6638  bool torf = weth.approve(address(this) , val) */\n      swap1\n      pop\n        /* \"contracts/StrongHands.sol\":6652:6656  torf */\n      dup1\n        /* \"contracts/StrongHands.sol\":6649:6689  if(torf)... */\n      iszero\n      tag_152\n      jumpi\n        /* \"contracts/StrongHands.sol\":6671:6675  weth */\n      immutable(\"0x2cc0d3dcb20652cd8f106aee76b6a7391771a130885634c0eb2bbe3cde796691\")\n        /* \"contracts/StrongHands.sol\":6671:6684  weth.withdraw */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x2e1a7d4d\n        /* \"contracts/StrongHands.sol\":6685:6688  val */\n      dup4\n        /* \"contracts/StrongHands.sol\":6671:6689  weth.withdraw(val) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_153\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_153:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_154\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_154:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_156\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_156:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/StrongHands.sol\":6649:6689  if(torf)... */\n    tag_152:\n        /* \"contracts/StrongHands.sol\":6516:6697  {... */\n      pop\n        /* \"contracts/StrongHands.sol\":6467:6697  function withdrawWETH(uint val) internal ... */\n      pop\n      jump\t// out\n        /* \"contracts/StrongHands.sol\":5900:5991  function depositETH(uint val) internal ... */\n    tag_134:\n        /* \"contracts/StrongHands.sol\":5956:5960  weth */\n      immutable(\"0x2cc0d3dcb20652cd8f106aee76b6a7391771a130885634c0eb2bbe3cde796691\")\n        /* \"contracts/StrongHands.sol\":5956:5968  weth.deposit */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd0e30db0\n        /* \"contracts/StrongHands.sol\":5977:5980  val */\n      dup3\n        /* \"contracts/StrongHands.sol\":5956:5983  weth.deposit{value : val}() */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_158\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_158:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_160\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_160:\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/StrongHands.sol\":5900:5991  function depositETH(uint val) internal ... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_161:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_162:\n        /* \"#utility.yul\":177:201   */\n      tag_215\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_161\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_19:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_217\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_162\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":442:611   */\n    tag_163:\n        /* \"#utility.yul\":526:537   */\n      0x00\n        /* \"#utility.yul\":560:566   */\n      dup3\n        /* \"#utility.yul\":555:558   */\n      dup3\n        /* \"#utility.yul\":548:567   */\n      mstore\n        /* \"#utility.yul\":600:604   */\n      0x20\n        /* \"#utility.yul\":595:598   */\n      dup3\n        /* \"#utility.yul\":591:605   */\n      add\n        /* \"#utility.yul\":576:605   */\n      swap1\n      pop\n        /* \"#utility.yul\":442:611   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":617:795   */\n    tag_164:\n        /* \"#utility.yul\":757:787   */\n      0x596f75206d7573742073656e6420736f6d6520746f6b656e732e2e2e00000000\n        /* \"#utility.yul\":753:754   */\n      0x00\n        /* \"#utility.yul\":745:751   */\n      dup3\n        /* \"#utility.yul\":741:755   */\n      add\n        /* \"#utility.yul\":734:788   */\n      mstore\n        /* \"#utility.yul\":617:795   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":801:1167   */\n    tag_165:\n        /* \"#utility.yul\":943:946   */\n      0x00\n        /* \"#utility.yul\":964:1031   */\n      tag_221\n        /* \"#utility.yul\":1028:1030   */\n      0x1c\n        /* \"#utility.yul\":1023:1026   */\n      dup4\n        /* \"#utility.yul\":964:1031   */\n      tag_163\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":957:1031   */\n      swap2\n      pop\n        /* \"#utility.yul\":1040:1133   */\n      tag_222\n        /* \"#utility.yul\":1129:1132   */\n      dup3\n        /* \"#utility.yul\":1040:1133   */\n      tag_164\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":1158:1160   */\n      0x20\n        /* \"#utility.yul\":1153:1156   */\n      dup3\n        /* \"#utility.yul\":1149:1161   */\n      add\n        /* \"#utility.yul\":1142:1161   */\n      swap1\n      pop\n        /* \"#utility.yul\":801:1167   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1173:1592   */\n    tag_35:\n        /* \"#utility.yul\":1339:1343   */\n      0x00\n        /* \"#utility.yul\":1377:1379   */\n      0x20\n        /* \"#utility.yul\":1366:1375   */\n      dup3\n        /* \"#utility.yul\":1362:1380   */\n      add\n        /* \"#utility.yul\":1354:1380   */\n      swap1\n      pop\n        /* \"#utility.yul\":1426:1435   */\n      dup2\n        /* \"#utility.yul\":1420:1424   */\n      dup2\n        /* \"#utility.yul\":1416:1436   */\n      sub\n        /* \"#utility.yul\":1412:1413   */\n      0x00\n        /* \"#utility.yul\":1401:1410   */\n      dup4\n        /* \"#utility.yul\":1397:1414   */\n      add\n        /* \"#utility.yul\":1390:1437   */\n      mstore\n        /* \"#utility.yul\":1454:1585   */\n      tag_224\n        /* \"#utility.yul\":1580:1584   */\n      dup2\n        /* \"#utility.yul\":1454:1585   */\n      tag_165\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":1446:1585   */\n      swap1\n      pop\n        /* \"#utility.yul\":1173:1592   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1598:1778   */\n    tag_166:\n        /* \"#utility.yul\":1646:1723   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1643:1644   */\n      0x00\n        /* \"#utility.yul\":1636:1724   */\n      mstore\n        /* \"#utility.yul\":1743:1747   */\n      0x11\n        /* \"#utility.yul\":1740:1741   */\n      0x04\n        /* \"#utility.yul\":1733:1748   */\n      mstore\n        /* \"#utility.yul\":1767:1771   */\n      0x24\n        /* \"#utility.yul\":1764:1765   */\n      0x00\n        /* \"#utility.yul\":1757:1772   */\n      revert\n        /* \"#utility.yul\":1784:2089   */\n    tag_37:\n        /* \"#utility.yul\":1824:1827   */\n      0x00\n        /* \"#utility.yul\":1843:1863   */\n      tag_227\n        /* \"#utility.yul\":1861:1862   */\n      dup3\n        /* \"#utility.yul\":1843:1863   */\n      tag_161\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":1838:1863   */\n      swap2\n      pop\n        /* \"#utility.yul\":1877:1897   */\n      tag_228\n        /* \"#utility.yul\":1895:1896   */\n      dup4\n        /* \"#utility.yul\":1877:1897   */\n      tag_161\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":1872:1897   */\n      swap3\n      pop\n        /* \"#utility.yul\":2031:2032   */\n      dup3\n        /* \"#utility.yul\":1963:2029   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1959:2033   */\n      sub\n        /* \"#utility.yul\":1956:1957   */\n      dup3\n        /* \"#utility.yul\":1953:2034   */\n      gt\n        /* \"#utility.yul\":1950:2057   */\n      iszero\n      tag_229\n      jumpi\n        /* \"#utility.yul\":2037:2055   */\n      tag_230\n      tag_166\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":1950:2057   */\n    tag_229:\n        /* \"#utility.yul\":2081:2082   */\n      dup3\n        /* \"#utility.yul\":2078:2079   */\n      dup3\n        /* \"#utility.yul\":2074:2083   */\n      add\n        /* \"#utility.yul\":2067:2083   */\n      swap1\n      pop\n        /* \"#utility.yul\":1784:2089   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2095:2221   */\n    tag_167:\n        /* \"#utility.yul\":2132:2139   */\n      0x00\n        /* \"#utility.yul\":2172:2214   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2165:2170   */\n      dup3\n        /* \"#utility.yul\":2161:2215   */\n      and\n        /* \"#utility.yul\":2150:2215   */\n      swap1\n      pop\n        /* \"#utility.yul\":2095:2221   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2227:2323   */\n    tag_168:\n        /* \"#utility.yul\":2264:2271   */\n      0x00\n        /* \"#utility.yul\":2293:2317   */\n      tag_233\n        /* \"#utility.yul\":2311:2316   */\n      dup3\n        /* \"#utility.yul\":2293:2317   */\n      tag_167\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":2282:2317   */\n      swap1\n      pop\n        /* \"#utility.yul\":2227:2323   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2329:2447   */\n    tag_169:\n        /* \"#utility.yul\":2416:2440   */\n      tag_235\n        /* \"#utility.yul\":2434:2439   */\n      dup2\n        /* \"#utility.yul\":2416:2440   */\n      tag_168\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":2411:2414   */\n      dup3\n        /* \"#utility.yul\":2404:2441   */\n      mstore\n        /* \"#utility.yul\":2329:2447   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2453:2675   */\n    tag_46:\n        /* \"#utility.yul\":2546:2550   */\n      0x00\n        /* \"#utility.yul\":2584:2586   */\n      0x20\n        /* \"#utility.yul\":2573:2582   */\n      dup3\n        /* \"#utility.yul\":2569:2587   */\n      add\n        /* \"#utility.yul\":2561:2587   */\n      swap1\n      pop\n        /* \"#utility.yul\":2597:2668   */\n      tag_237\n        /* \"#utility.yul\":2665:2666   */\n      0x00\n        /* \"#utility.yul\":2654:2663   */\n      dup4\n        /* \"#utility.yul\":2650:2667   */\n      add\n        /* \"#utility.yul\":2641:2647   */\n      dup5\n        /* \"#utility.yul\":2597:2668   */\n      tag_169\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":2453:2675   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2681:2756   */\n    tag_170:\n        /* \"#utility.yul\":2714:2720   */\n      0x00\n        /* \"#utility.yul\":2747:2749   */\n      0x40\n        /* \"#utility.yul\":2741:2750   */\n      mload\n        /* \"#utility.yul\":2731:2750   */\n      swap1\n      pop\n        /* \"#utility.yul\":2681:2756   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":2762:2879   */\n    tag_171:\n        /* \"#utility.yul\":2871:2872   */\n      0x00\n        /* \"#utility.yul\":2868:2869   */\n      dup1\n        /* \"#utility.yul\":2861:2873   */\n      revert\n        /* \"#utility.yul\":3008:3125   */\n    tag_173:\n        /* \"#utility.yul\":3117:3118   */\n      0x00\n        /* \"#utility.yul\":3114:3115   */\n      dup1\n        /* \"#utility.yul\":3107:3119   */\n      revert\n        /* \"#utility.yul\":3131:3233   */\n    tag_174:\n        /* \"#utility.yul\":3172:3178   */\n      0x00\n        /* \"#utility.yul\":3223:3225   */\n      0x1f\n        /* \"#utility.yul\":3219:3226   */\n      not\n        /* \"#utility.yul\":3214:3216   */\n      0x1f\n        /* \"#utility.yul\":3207:3212   */\n      dup4\n        /* \"#utility.yul\":3203:3217   */\n      add\n        /* \"#utility.yul\":3199:3227   */\n      and\n        /* \"#utility.yul\":3189:3227   */\n      swap1\n      pop\n        /* \"#utility.yul\":3131:3233   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3239:3419   */\n    tag_175:\n        /* \"#utility.yul\":3287:3364   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3284:3285   */\n      0x00\n        /* \"#utility.yul\":3277:3365   */\n      mstore\n        /* \"#utility.yul\":3384:3388   */\n      0x41\n        /* \"#utility.yul\":3381:3382   */\n      0x04\n        /* \"#utility.yul\":3374:3389   */\n      mstore\n        /* \"#utility.yul\":3408:3412   */\n      0x24\n        /* \"#utility.yul\":3405:3406   */\n      0x00\n        /* \"#utility.yul\":3398:3413   */\n      revert\n        /* \"#utility.yul\":3425:3706   */\n    tag_176:\n        /* \"#utility.yul\":3508:3535   */\n      tag_245\n        /* \"#utility.yul\":3530:3534   */\n      dup3\n        /* \"#utility.yul\":3508:3535   */\n      tag_174\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":3500:3506   */\n      dup2\n        /* \"#utility.yul\":3496:3536   */\n      add\n        /* \"#utility.yul\":3638:3644   */\n      dup2\n        /* \"#utility.yul\":3626:3636   */\n      dup2\n        /* \"#utility.yul\":3623:3645   */\n      lt\n        /* \"#utility.yul\":3602:3620   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3590:3600   */\n      dup3\n        /* \"#utility.yul\":3587:3621   */\n      gt\n        /* \"#utility.yul\":3584:3646   */\n      or\n        /* \"#utility.yul\":3581:3669   */\n      iszero\n      tag_246\n      jumpi\n        /* \"#utility.yul\":3649:3667   */\n      tag_247\n      tag_175\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":3581:3669   */\n    tag_246:\n        /* \"#utility.yul\":3689:3699   */\n      dup1\n        /* \"#utility.yul\":3685:3687   */\n      0x40\n        /* \"#utility.yul\":3678:3700   */\n      mstore\n        /* \"#utility.yul\":3468:3706   */\n      pop\n        /* \"#utility.yul\":3425:3706   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3712:3841   */\n    tag_177:\n        /* \"#utility.yul\":3746:3752   */\n      0x00\n        /* \"#utility.yul\":3773:3793   */\n      tag_249\n      tag_170\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":3763:3793   */\n      swap1\n      pop\n        /* \"#utility.yul\":3802:3835   */\n      tag_250\n        /* \"#utility.yul\":3830:3834   */\n      dup3\n        /* \"#utility.yul\":3822:3828   */\n      dup3\n        /* \"#utility.yul\":3802:3835   */\n      tag_176\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":3712:3841   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3970:4092   */\n    tag_179:\n        /* \"#utility.yul\":4043:4067   */\n      tag_253\n        /* \"#utility.yul\":4061:4066   */\n      dup2\n        /* \"#utility.yul\":4043:4067   */\n      tag_161\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":4036:4041   */\n      dup2\n        /* \"#utility.yul\":4033:4068   */\n      eq\n        /* \"#utility.yul\":4023:4086   */\n      tag_254\n      jumpi\n        /* \"#utility.yul\":4082:4083   */\n      0x00\n        /* \"#utility.yul\":4079:4080   */\n      dup1\n        /* \"#utility.yul\":4072:4084   */\n      revert\n        /* \"#utility.yul\":4023:4086   */\n    tag_254:\n        /* \"#utility.yul\":3970:4092   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4098:4241   */\n    tag_180:\n        /* \"#utility.yul\":4155:4160   */\n      0x00\n        /* \"#utility.yul\":4186:4192   */\n      dup2\n        /* \"#utility.yul\":4180:4193   */\n      mload\n        /* \"#utility.yul\":4171:4193   */\n      swap1\n      pop\n        /* \"#utility.yul\":4202:4235   */\n      tag_256\n        /* \"#utility.yul\":4229:4234   */\n      dup2\n        /* \"#utility.yul\":4202:4235   */\n      tag_179\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":4098:4241   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4295:4746   */\n    tag_181:\n        /* \"#utility.yul\":4396:4401   */\n      0x00\n        /* \"#utility.yul\":4440:4444   */\n      0x20\n        /* \"#utility.yul\":4428:4437   */\n      dup3\n        /* \"#utility.yul\":4423:4426   */\n      dup5\n        /* \"#utility.yul\":4419:4438   */\n      sub\n        /* \"#utility.yul\":4415:4445   */\n      slt\n        /* \"#utility.yul\":4412:4529   */\n      iszero\n      tag_258\n      jumpi\n        /* \"#utility.yul\":4448:4527   */\n      tag_259\n      tag_173\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":4412:4529   */\n    tag_258:\n        /* \"#utility.yul\":4547:4568   */\n      tag_260\n        /* \"#utility.yul\":4563:4567   */\n      0x20\n        /* \"#utility.yul\":4547:4568   */\n      tag_177\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":4538:4568   */\n      swap1\n      pop\n        /* \"#utility.yul\":4627:4628   */\n      0x00\n        /* \"#utility.yul\":4667:4727   */\n      tag_261\n        /* \"#utility.yul\":4723:4726   */\n      dup5\n        /* \"#utility.yul\":4714:4720   */\n      dup3\n        /* \"#utility.yul\":4703:4712   */\n      dup6\n        /* \"#utility.yul\":4699:4721   */\n      add\n        /* \"#utility.yul\":4667:4727   */\n      tag_180\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":4660:4664   */\n      0x00\n        /* \"#utility.yul\":4653:4658   */\n      dup4\n        /* \"#utility.yul\":4649:4665   */\n      add\n        /* \"#utility.yul\":4642:4728   */\n      mstore\n        /* \"#utility.yul\":4578:4739   */\n      pop\n        /* \"#utility.yul\":4295:4746   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4752:4870   */\n    tag_182:\n        /* \"#utility.yul\":4789:4796   */\n      0x00\n        /* \"#utility.yul\":4829:4863   */\n      0xffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":4822:4827   */\n      dup3\n        /* \"#utility.yul\":4818:4864   */\n      and\n        /* \"#utility.yul\":4807:4864   */\n      swap1\n      pop\n        /* \"#utility.yul\":4752:4870   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4876:4998   */\n    tag_183:\n        /* \"#utility.yul\":4949:4973   */\n      tag_264\n        /* \"#utility.yul\":4967:4972   */\n      dup2\n        /* \"#utility.yul\":4949:4973   */\n      tag_182\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":4942:4947   */\n      dup2\n        /* \"#utility.yul\":4939:4974   */\n      eq\n        /* \"#utility.yul\":4929:4992   */\n      tag_265\n      jumpi\n        /* \"#utility.yul\":4988:4989   */\n      0x00\n        /* \"#utility.yul\":4985:4986   */\n      dup1\n        /* \"#utility.yul\":4978:4990   */\n      revert\n        /* \"#utility.yul\":4929:4992   */\n    tag_265:\n        /* \"#utility.yul\":4876:4998   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5004:5147   */\n    tag_184:\n        /* \"#utility.yul\":5061:5066   */\n      0x00\n        /* \"#utility.yul\":5092:5098   */\n      dup2\n        /* \"#utility.yul\":5086:5099   */\n      mload\n        /* \"#utility.yul\":5077:5099   */\n      swap1\n      pop\n        /* \"#utility.yul\":5108:5141   */\n      tag_267\n        /* \"#utility.yul\":5135:5140   */\n      dup2\n        /* \"#utility.yul\":5108:5141   */\n      tag_183\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":5004:5147   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5153:5248   */\n    tag_185:\n        /* \"#utility.yul\":5189:5196   */\n      0x00\n        /* \"#utility.yul\":5229:5241   */\n      0xffffffffff\n        /* \"#utility.yul\":5222:5227   */\n      dup3\n        /* \"#utility.yul\":5218:5242   */\n      and\n        /* \"#utility.yul\":5207:5242   */\n      swap1\n      pop\n        /* \"#utility.yul\":5153:5248   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5254:5374   */\n    tag_186:\n        /* \"#utility.yul\":5326:5349   */\n      tag_270\n        /* \"#utility.yul\":5343:5348   */\n      dup2\n        /* \"#utility.yul\":5326:5349   */\n      tag_185\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":5319:5324   */\n      dup2\n        /* \"#utility.yul\":5316:5350   */\n      eq\n        /* \"#utility.yul\":5306:5368   */\n      tag_271\n      jumpi\n        /* \"#utility.yul\":5364:5365   */\n      0x00\n        /* \"#utility.yul\":5361:5362   */\n      dup1\n        /* \"#utility.yul\":5354:5366   */\n      revert\n        /* \"#utility.yul\":5306:5368   */\n    tag_271:\n        /* \"#utility.yul\":5254:5374   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5380:5521   */\n    tag_187:\n        /* \"#utility.yul\":5436:5441   */\n      0x00\n        /* \"#utility.yul\":5467:5473   */\n      dup2\n        /* \"#utility.yul\":5461:5474   */\n      mload\n        /* \"#utility.yul\":5452:5474   */\n      swap1\n      pop\n        /* \"#utility.yul\":5483:5515   */\n      tag_273\n        /* \"#utility.yul\":5509:5514   */\n      dup2\n        /* \"#utility.yul\":5483:5515   */\n      tag_186\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":5380:5521   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5527:5649   */\n    tag_188:\n        /* \"#utility.yul\":5600:5624   */\n      tag_275\n        /* \"#utility.yul\":5618:5623   */\n      dup2\n        /* \"#utility.yul\":5600:5624   */\n      tag_168\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":5593:5598   */\n      dup2\n        /* \"#utility.yul\":5590:5625   */\n      eq\n        /* \"#utility.yul\":5580:5643   */\n      tag_276\n      jumpi\n        /* \"#utility.yul\":5639:5640   */\n      0x00\n        /* \"#utility.yul\":5636:5637   */\n      dup1\n        /* \"#utility.yul\":5629:5641   */\n      revert\n        /* \"#utility.yul\":5580:5643   */\n    tag_276:\n        /* \"#utility.yul\":5527:5649   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5655:5798   */\n    tag_189:\n        /* \"#utility.yul\":5712:5717   */\n      0x00\n        /* \"#utility.yul\":5743:5749   */\n      dup2\n        /* \"#utility.yul\":5737:5750   */\n      mload\n        /* \"#utility.yul\":5728:5750   */\n      swap1\n      pop\n        /* \"#utility.yul\":5759:5792   */\n      tag_278\n        /* \"#utility.yul\":5786:5791   */\n      dup2\n        /* \"#utility.yul\":5759:5792   */\n      tag_188\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":5655:5798   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5804:5890   */\n    tag_190:\n        /* \"#utility.yul\":5839:5846   */\n      0x00\n        /* \"#utility.yul\":5879:5883   */\n      0xff\n        /* \"#utility.yul\":5872:5877   */\n      dup3\n        /* \"#utility.yul\":5868:5884   */\n      and\n        /* \"#utility.yul\":5857:5884   */\n      swap1\n      pop\n        /* \"#utility.yul\":5804:5890   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5896:6014   */\n    tag_191:\n        /* \"#utility.yul\":5967:5989   */\n      tag_281\n        /* \"#utility.yul\":5983:5988   */\n      dup2\n        /* \"#utility.yul\":5967:5989   */\n      tag_190\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":5960:5965   */\n      dup2\n        /* \"#utility.yul\":5957:5990   */\n      eq\n        /* \"#utility.yul\":5947:6008   */\n      tag_282\n      jumpi\n        /* \"#utility.yul\":6004:6005   */\n      0x00\n        /* \"#utility.yul\":6001:6002   */\n      dup1\n        /* \"#utility.yul\":5994:6006   */\n      revert\n        /* \"#utility.yul\":5947:6008   */\n    tag_282:\n        /* \"#utility.yul\":5896:6014   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6020:6159   */\n    tag_192:\n        /* \"#utility.yul\":6075:6080   */\n      0x00\n        /* \"#utility.yul\":6106:6112   */\n      dup2\n        /* \"#utility.yul\":6100:6113   */\n      mload\n        /* \"#utility.yul\":6091:6113   */\n      swap1\n      pop\n        /* \"#utility.yul\":6122:6153   */\n      tag_284\n        /* \"#utility.yul\":6147:6152   */\n      dup2\n        /* \"#utility.yul\":6122:6153   */\n      tag_191\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":6020:6159   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6201:8763   */\n    tag_193:\n        /* \"#utility.yul\":6290:6295   */\n      0x00\n        /* \"#utility.yul\":6334:6340   */\n      0x0180\n        /* \"#utility.yul\":6322:6331   */\n      dup3\n        /* \"#utility.yul\":6317:6320   */\n      dup5\n        /* \"#utility.yul\":6313:6332   */\n      sub\n        /* \"#utility.yul\":6309:6341   */\n      slt\n        /* \"#utility.yul\":6306:6425   */\n      iszero\n      tag_286\n      jumpi\n        /* \"#utility.yul\":6344:6423   */\n      tag_287\n      tag_173\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":6306:6425   */\n    tag_286:\n        /* \"#utility.yul\":6443:6466   */\n      tag_288\n        /* \"#utility.yul\":6459:6465   */\n      0x0180\n        /* \"#utility.yul\":6443:6466   */\n      tag_177\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":6434:6466   */\n      swap1\n      pop\n        /* \"#utility.yul\":6534:6535   */\n      0x00\n        /* \"#utility.yul\":6574:6675   */\n      tag_289\n        /* \"#utility.yul\":6671:6674   */\n      dup5\n        /* \"#utility.yul\":6662:6668   */\n      dup3\n        /* \"#utility.yul\":6651:6660   */\n      dup6\n        /* \"#utility.yul\":6647:6669   */\n      add\n        /* \"#utility.yul\":6574:6675   */\n      tag_181\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":6567:6571   */\n      0x00\n        /* \"#utility.yul\":6560:6565   */\n      dup4\n        /* \"#utility.yul\":6556:6572   */\n      add\n        /* \"#utility.yul\":6549:6676   */\n      mstore\n        /* \"#utility.yul\":6476:6687   */\n      pop\n        /* \"#utility.yul\":6756:6758   */\n      0x20\n        /* \"#utility.yul\":6797:6857   */\n      tag_290\n        /* \"#utility.yul\":6853:6856   */\n      dup5\n        /* \"#utility.yul\":6844:6850   */\n      dup3\n        /* \"#utility.yul\":6833:6842   */\n      dup6\n        /* \"#utility.yul\":6829:6851   */\n      add\n        /* \"#utility.yul\":6797:6857   */\n      tag_184\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":6790:6794   */\n      0x20\n        /* \"#utility.yul\":6783:6788   */\n      dup4\n        /* \"#utility.yul\":6779:6795   */\n      add\n        /* \"#utility.yul\":6772:6858   */\n      mstore\n        /* \"#utility.yul\":6697:6869   */\n      pop\n        /* \"#utility.yul\":6943:6945   */\n      0x40\n        /* \"#utility.yul\":6984:7044   */\n      tag_291\n        /* \"#utility.yul\":7040:7043   */\n      dup5\n        /* \"#utility.yul\":7031:7037   */\n      dup3\n        /* \"#utility.yul\":7020:7029   */\n      dup6\n        /* \"#utility.yul\":7016:7038   */\n      add\n        /* \"#utility.yul\":6984:7044   */\n      tag_184\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":6977:6981   */\n      0x40\n        /* \"#utility.yul\":6970:6975   */\n      dup4\n        /* \"#utility.yul\":6966:6982   */\n      add\n        /* \"#utility.yul\":6959:7045   */\n      mstore\n        /* \"#utility.yul\":6879:7056   */\n      pop\n        /* \"#utility.yul\":7131:7133   */\n      0x60\n        /* \"#utility.yul\":7172:7232   */\n      tag_292\n        /* \"#utility.yul\":7228:7231   */\n      dup5\n        /* \"#utility.yul\":7219:7225   */\n      dup3\n        /* \"#utility.yul\":7208:7217   */\n      dup6\n        /* \"#utility.yul\":7204:7226   */\n      add\n        /* \"#utility.yul\":7172:7232   */\n      tag_184\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":7165:7169   */\n      0x60\n        /* \"#utility.yul\":7158:7163   */\n      dup4\n        /* \"#utility.yul\":7154:7170   */\n      add\n        /* \"#utility.yul\":7147:7233   */\n      mstore\n        /* \"#utility.yul\":7066:7244   */\n      pop\n        /* \"#utility.yul\":7324:7327   */\n      0x80\n        /* \"#utility.yul\":7366:7426   */\n      tag_293\n        /* \"#utility.yul\":7422:7425   */\n      dup5\n        /* \"#utility.yul\":7413:7419   */\n      dup3\n        /* \"#utility.yul\":7402:7411   */\n      dup6\n        /* \"#utility.yul\":7398:7420   */\n      add\n        /* \"#utility.yul\":7366:7426   */\n      tag_184\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":7359:7363   */\n      0x80\n        /* \"#utility.yul\":7352:7357   */\n      dup4\n        /* \"#utility.yul\":7348:7364   */\n      add\n        /* \"#utility.yul\":7341:7427   */\n      mstore\n        /* \"#utility.yul\":7254:7438   */\n      pop\n        /* \"#utility.yul\":7516:7519   */\n      0xa0\n        /* \"#utility.yul\":7558:7618   */\n      tag_294\n        /* \"#utility.yul\":7614:7617   */\n      dup5\n        /* \"#utility.yul\":7605:7611   */\n      dup3\n        /* \"#utility.yul\":7594:7603   */\n      dup6\n        /* \"#utility.yul\":7590:7612   */\n      add\n        /* \"#utility.yul\":7558:7618   */\n      tag_184\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":7551:7555   */\n      0xa0\n        /* \"#utility.yul\":7544:7549   */\n      dup4\n        /* \"#utility.yul\":7540:7556   */\n      add\n        /* \"#utility.yul\":7533:7619   */\n      mstore\n        /* \"#utility.yul\":7448:7630   */\n      pop\n        /* \"#utility.yul\":7704:7707   */\n      0xc0\n        /* \"#utility.yul\":7746:7805   */\n      tag_295\n        /* \"#utility.yul\":7801:7804   */\n      dup5\n        /* \"#utility.yul\":7792:7798   */\n      dup3\n        /* \"#utility.yul\":7781:7790   */\n      dup6\n        /* \"#utility.yul\":7777:7799   */\n      add\n        /* \"#utility.yul\":7746:7805   */\n      tag_187\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":7739:7743   */\n      0xc0\n        /* \"#utility.yul\":7732:7737   */\n      dup4\n        /* \"#utility.yul\":7728:7744   */\n      add\n        /* \"#utility.yul\":7721:7806   */\n      mstore\n        /* \"#utility.yul\":7640:7817   */\n      pop\n        /* \"#utility.yul\":7885:7888   */\n      0xe0\n        /* \"#utility.yul\":7927:7987   */\n      tag_296\n        /* \"#utility.yul\":7983:7986   */\n      dup5\n        /* \"#utility.yul\":7974:7980   */\n      dup3\n        /* \"#utility.yul\":7963:7972   */\n      dup6\n        /* \"#utility.yul\":7959:7981   */\n      add\n        /* \"#utility.yul\":7927:7987   */\n      tag_189\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":7920:7924   */\n      0xe0\n        /* \"#utility.yul\":7913:7918   */\n      dup4\n        /* \"#utility.yul\":7909:7925   */\n      add\n        /* \"#utility.yul\":7902:7988   */\n      mstore\n        /* \"#utility.yul\":7827:7999   */\n      pop\n        /* \"#utility.yul\":8076:8079   */\n      0x0100\n        /* \"#utility.yul\":8120:8180   */\n      tag_297\n        /* \"#utility.yul\":8176:8179   */\n      dup5\n        /* \"#utility.yul\":8167:8173   */\n      dup3\n        /* \"#utility.yul\":8156:8165   */\n      dup6\n        /* \"#utility.yul\":8152:8174   */\n      add\n        /* \"#utility.yul\":8120:8180   */\n      tag_189\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":8111:8117   */\n      0x0100\n        /* \"#utility.yul\":8104:8109   */\n      dup4\n        /* \"#utility.yul\":8100:8118   */\n      add\n        /* \"#utility.yul\":8093:8181   */\n      mstore\n        /* \"#utility.yul\":8009:8192   */\n      pop\n        /* \"#utility.yul\":8271:8274   */\n      0x0120\n        /* \"#utility.yul\":8315:8375   */\n      tag_298\n        /* \"#utility.yul\":8371:8374   */\n      dup5\n        /* \"#utility.yul\":8362:8368   */\n      dup3\n        /* \"#utility.yul\":8351:8360   */\n      dup6\n        /* \"#utility.yul\":8347:8369   */\n      add\n        /* \"#utility.yul\":8315:8375   */\n      tag_189\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":8306:8312   */\n      0x0120\n        /* \"#utility.yul\":8299:8304   */\n      dup4\n        /* \"#utility.yul\":8295:8313   */\n      add\n        /* \"#utility.yul\":8288:8376   */\n      mstore\n        /* \"#utility.yul\":8202:8387   */\n      pop\n        /* \"#utility.yul\":8469:8472   */\n      0x0140\n        /* \"#utility.yul\":8513:8573   */\n      tag_299\n        /* \"#utility.yul\":8569:8572   */\n      dup5\n        /* \"#utility.yul\":8560:8566   */\n      dup3\n        /* \"#utility.yul\":8549:8558   */\n      dup6\n        /* \"#utility.yul\":8545:8567   */\n      add\n        /* \"#utility.yul\":8513:8573   */\n      tag_189\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":8504:8510   */\n      0x0140\n        /* \"#utility.yul\":8497:8502   */\n      dup4\n        /* \"#utility.yul\":8493:8511   */\n      add\n        /* \"#utility.yul\":8486:8574   */\n      mstore\n        /* \"#utility.yul\":8397:8585   */\n      pop\n        /* \"#utility.yul\":8642:8645   */\n      0x0160\n        /* \"#utility.yul\":8686:8744   */\n      tag_300\n        /* \"#utility.yul\":8740:8743   */\n      dup5\n        /* \"#utility.yul\":8731:8737   */\n      dup3\n        /* \"#utility.yul\":8720:8729   */\n      dup6\n        /* \"#utility.yul\":8716:8738   */\n      add\n        /* \"#utility.yul\":8686:8744   */\n      tag_192\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":8677:8683   */\n      0x0160\n        /* \"#utility.yul\":8670:8675   */\n      dup4\n        /* \"#utility.yul\":8666:8684   */\n      add\n        /* \"#utility.yul\":8659:8745   */\n      mstore\n        /* \"#utility.yul\":8595:8756   */\n      pop\n        /* \"#utility.yul\":6201:8763   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8769:9179   */\n    tag_50:\n        /* \"#utility.yul\":8868:8874   */\n      0x00\n        /* \"#utility.yul\":8917:8920   */\n      0x0180\n        /* \"#utility.yul\":8905:8914   */\n      dup3\n        /* \"#utility.yul\":8896:8903   */\n      dup5\n        /* \"#utility.yul\":8892:8915   */\n      sub\n        /* \"#utility.yul\":8888:8921   */\n      slt\n        /* \"#utility.yul\":8885:9005   */\n      iszero\n      tag_302\n      jumpi\n        /* \"#utility.yul\":8924:9003   */\n      tag_303\n      tag_171\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":8885:9005   */\n    tag_302:\n        /* \"#utility.yul\":9044:9045   */\n      0x00\n        /* \"#utility.yul\":9069:9162   */\n      tag_304\n        /* \"#utility.yul\":9154:9161   */\n      dup5\n        /* \"#utility.yul\":9145:9151   */\n      dup3\n        /* \"#utility.yul\":9134:9143   */\n      dup6\n        /* \"#utility.yul\":9130:9152   */\n      add\n        /* \"#utility.yul\":9069:9162   */\n      tag_193\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":9059:9162   */\n      swap2\n      pop\n        /* \"#utility.yul\":9015:9172   */\n      pop\n        /* \"#utility.yul\":8769:9179   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9185:9536   */\n    tag_55:\n        /* \"#utility.yul\":9255:9261   */\n      0x00\n        /* \"#utility.yul\":9304:9306   */\n      0x20\n        /* \"#utility.yul\":9292:9301   */\n      dup3\n        /* \"#utility.yul\":9283:9290   */\n      dup5\n        /* \"#utility.yul\":9279:9302   */\n      sub\n        /* \"#utility.yul\":9275:9307   */\n      slt\n        /* \"#utility.yul\":9272:9391   */\n      iszero\n      tag_306\n      jumpi\n        /* \"#utility.yul\":9310:9389   */\n      tag_307\n      tag_171\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":9272:9391   */\n    tag_306:\n        /* \"#utility.yul\":9430:9431   */\n      0x00\n        /* \"#utility.yul\":9455:9519   */\n      tag_308\n        /* \"#utility.yul\":9511:9518   */\n      dup5\n        /* \"#utility.yul\":9502:9508   */\n      dup3\n        /* \"#utility.yul\":9491:9500   */\n      dup6\n        /* \"#utility.yul\":9487:9509   */\n      add\n        /* \"#utility.yul\":9455:9519   */\n      tag_180\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":9445:9519   */\n      swap2\n      pop\n        /* \"#utility.yul\":9401:9529   */\n      pop\n        /* \"#utility.yul\":9185:9536   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9542:9721   */\n    tag_194:\n        /* \"#utility.yul\":9682:9713   */\n      0x5573657220646f6e27742068617665206465706f736974656420455448000000\n        /* \"#utility.yul\":9678:9679   */\n      0x00\n        /* \"#utility.yul\":9670:9676   */\n      dup3\n        /* \"#utility.yul\":9666:9680   */\n      add\n        /* \"#utility.yul\":9659:9714   */\n      mstore\n        /* \"#utility.yul\":9542:9721   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9727:10093   */\n    tag_195:\n        /* \"#utility.yul\":9869:9872   */\n      0x00\n        /* \"#utility.yul\":9890:9957   */\n      tag_311\n        /* \"#utility.yul\":9954:9956   */\n      0x1d\n        /* \"#utility.yul\":9949:9952   */\n      dup4\n        /* \"#utility.yul\":9890:9957   */\n      tag_163\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":9883:9957   */\n      swap2\n      pop\n        /* \"#utility.yul\":9966:10059   */\n      tag_312\n        /* \"#utility.yul\":10055:10058   */\n      dup3\n        /* \"#utility.yul\":9966:10059   */\n      tag_194\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":10084:10086   */\n      0x20\n        /* \"#utility.yul\":10079:10082   */\n      dup3\n        /* \"#utility.yul\":10075:10087   */\n      add\n        /* \"#utility.yul\":10068:10087   */\n      swap1\n      pop\n        /* \"#utility.yul\":9727:10093   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10099:10518   */\n    tag_59:\n        /* \"#utility.yul\":10265:10269   */\n      0x00\n        /* \"#utility.yul\":10303:10305   */\n      0x20\n        /* \"#utility.yul\":10292:10301   */\n      dup3\n        /* \"#utility.yul\":10288:10306   */\n      add\n        /* \"#utility.yul\":10280:10306   */\n      swap1\n      pop\n        /* \"#utility.yul\":10352:10361   */\n      dup2\n        /* \"#utility.yul\":10346:10350   */\n      dup2\n        /* \"#utility.yul\":10342:10362   */\n      sub\n        /* \"#utility.yul\":10338:10339   */\n      0x00\n        /* \"#utility.yul\":10327:10336   */\n      dup4\n        /* \"#utility.yul\":10323:10340   */\n      add\n        /* \"#utility.yul\":10316:10363   */\n      mstore\n        /* \"#utility.yul\":10380:10511   */\n      tag_314\n        /* \"#utility.yul\":10506:10510   */\n      dup2\n        /* \"#utility.yul\":10380:10511   */\n      tag_195\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":10372:10511   */\n      swap1\n      pop\n        /* \"#utility.yul\":10099:10518   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10524:10715   */\n    tag_63:\n        /* \"#utility.yul\":10564:10568   */\n      0x00\n        /* \"#utility.yul\":10584:10604   */\n      tag_316\n        /* \"#utility.yul\":10602:10603   */\n      dup3\n        /* \"#utility.yul\":10584:10604   */\n      tag_161\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":10579:10604   */\n      swap2\n      pop\n        /* \"#utility.yul\":10618:10638   */\n      tag_317\n        /* \"#utility.yul\":10636:10637   */\n      dup4\n        /* \"#utility.yul\":10618:10638   */\n      tag_161\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":10613:10638   */\n      swap3\n      pop\n        /* \"#utility.yul\":10657:10658   */\n      dup3\n        /* \"#utility.yul\":10654:10655   */\n      dup3\n        /* \"#utility.yul\":10651:10659   */\n      lt\n        /* \"#utility.yul\":10648:10682   */\n      iszero\n      tag_318\n      jumpi\n        /* \"#utility.yul\":10662:10680   */\n      tag_319\n      tag_166\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":10648:10682   */\n    tag_318:\n        /* \"#utility.yul\":10707:10708   */\n      dup3\n        /* \"#utility.yul\":10704:10705   */\n      dup3\n        /* \"#utility.yul\":10700:10709   */\n      sub\n        /* \"#utility.yul\":10692:10709   */\n      swap1\n      pop\n        /* \"#utility.yul\":10524:10715   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10721:10868   */\n    tag_196:\n        /* \"#utility.yul\":10822:10833   */\n      0x00\n        /* \"#utility.yul\":10859:10862   */\n      dup2\n        /* \"#utility.yul\":10844:10862   */\n      swap1\n      pop\n        /* \"#utility.yul\":10721:10868   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10874:10988   */\n    tag_197:\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10994:11392   */\n    tag_198:\n        /* \"#utility.yul\":11153:11156   */\n      0x00\n        /* \"#utility.yul\":11174:11257   */\n      tag_323\n        /* \"#utility.yul\":11255:11256   */\n      0x00\n        /* \"#utility.yul\":11250:11253   */\n      dup4\n        /* \"#utility.yul\":11174:11257   */\n      tag_196\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":11167:11257   */\n      swap2\n      pop\n        /* \"#utility.yul\":11266:11359   */\n      tag_324\n        /* \"#utility.yul\":11355:11358   */\n      dup3\n        /* \"#utility.yul\":11266:11359   */\n      tag_197\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":11384:11385   */\n      0x00\n        /* \"#utility.yul\":11379:11382   */\n      dup3\n        /* \"#utility.yul\":11375:11386   */\n      add\n        /* \"#utility.yul\":11368:11386   */\n      swap1\n      pop\n        /* \"#utility.yul\":10994:11392   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11398:11777   */\n    tag_67:\n        /* \"#utility.yul\":11582:11585   */\n      0x00\n        /* \"#utility.yul\":11604:11751   */\n      tag_326\n        /* \"#utility.yul\":11747:11750   */\n      dup3\n        /* \"#utility.yul\":11604:11751   */\n      tag_198\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":11597:11751   */\n      swap2\n      pop\n        /* \"#utility.yul\":11768:11771   */\n      dup2\n        /* \"#utility.yul\":11761:11771   */\n      swap1\n      pop\n        /* \"#utility.yul\":11398:11777   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11783:11949   */\n    tag_199:\n        /* \"#utility.yul\":11923:11941   */\n      0x5472616e73666572206661696c65642e00000000000000000000000000000000\n        /* \"#utility.yul\":11919:11920   */\n      0x00\n        /* \"#utility.yul\":11911:11917   */\n      dup3\n        /* \"#utility.yul\":11907:11921   */\n      add\n        /* \"#utility.yul\":11900:11942   */\n      mstore\n        /* \"#utility.yul\":11783:11949   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11955:12321   */\n    tag_200:\n        /* \"#utility.yul\":12097:12100   */\n      0x00\n        /* \"#utility.yul\":12118:12185   */\n      tag_329\n        /* \"#utility.yul\":12182:12184   */\n      0x10\n        /* \"#utility.yul\":12177:12180   */\n      dup4\n        /* \"#utility.yul\":12118:12185   */\n      tag_163\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":12111:12185   */\n      swap2\n      pop\n        /* \"#utility.yul\":12194:12287   */\n      tag_330\n        /* \"#utility.yul\":12283:12286   */\n      dup3\n        /* \"#utility.yul\":12194:12287   */\n      tag_199\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":12312:12314   */\n      0x20\n        /* \"#utility.yul\":12307:12310   */\n      dup3\n        /* \"#utility.yul\":12303:12315   */\n      add\n        /* \"#utility.yul\":12296:12315   */\n      swap1\n      pop\n        /* \"#utility.yul\":11955:12321   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12327:12746   */\n    tag_73:\n        /* \"#utility.yul\":12493:12497   */\n      0x00\n        /* \"#utility.yul\":12531:12533   */\n      0x20\n        /* \"#utility.yul\":12520:12529   */\n      dup3\n        /* \"#utility.yul\":12516:12534   */\n      add\n        /* \"#utility.yul\":12508:12534   */\n      swap1\n      pop\n        /* \"#utility.yul\":12580:12589   */\n      dup2\n        /* \"#utility.yul\":12574:12578   */\n      dup2\n        /* \"#utility.yul\":12570:12590   */\n      sub\n        /* \"#utility.yul\":12566:12567   */\n      0x00\n        /* \"#utility.yul\":12555:12564   */\n      dup4\n        /* \"#utility.yul\":12551:12568   */\n      add\n        /* \"#utility.yul\":12544:12591   */\n      mstore\n        /* \"#utility.yul\":12608:12739   */\n      tag_332\n        /* \"#utility.yul\":12734:12738   */\n      dup2\n        /* \"#utility.yul\":12608:12739   */\n      tag_200\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":12600:12739   */\n      swap1\n      pop\n        /* \"#utility.yul\":12327:12746   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12752:13100   */\n    tag_76:\n        /* \"#utility.yul\":12792:12799   */\n      0x00\n        /* \"#utility.yul\":12815:12835   */\n      tag_334\n        /* \"#utility.yul\":12833:12834   */\n      dup3\n        /* \"#utility.yul\":12815:12835   */\n      tag_161\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":12810:12835   */\n      swap2\n      pop\n        /* \"#utility.yul\":12849:12869   */\n      tag_335\n        /* \"#utility.yul\":12867:12868   */\n      dup4\n        /* \"#utility.yul\":12849:12869   */\n      tag_161\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":12844:12869   */\n      swap3\n      pop\n        /* \"#utility.yul\":13037:13038   */\n      dup2\n        /* \"#utility.yul\":12969:13035   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":12965:13039   */\n      div\n        /* \"#utility.yul\":12962:12963   */\n      dup4\n        /* \"#utility.yul\":12959:13040   */\n      gt\n        /* \"#utility.yul\":12954:12955   */\n      dup3\n        /* \"#utility.yul\":12947:12956   */\n      iszero\n        /* \"#utility.yul\":12940:12957   */\n      iszero\n        /* \"#utility.yul\":12936:13041   */\n      and\n        /* \"#utility.yul\":12933:13064   */\n      iszero\n      tag_336\n      jumpi\n        /* \"#utility.yul\":13044:13062   */\n      tag_337\n      tag_166\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":12933:13064   */\n    tag_336:\n        /* \"#utility.yul\":13092:13093   */\n      dup3\n        /* \"#utility.yul\":13089:13090   */\n      dup3\n        /* \"#utility.yul\":13085:13094   */\n      mul\n        /* \"#utility.yul\":13074:13094   */\n      swap1\n      pop\n        /* \"#utility.yul\":12752:13100   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13106:13286   */\n    tag_201:\n        /* \"#utility.yul\":13154:13231   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13151:13152   */\n      0x00\n        /* \"#utility.yul\":13144:13232   */\n      mstore\n        /* \"#utility.yul\":13251:13255   */\n      0x12\n        /* \"#utility.yul\":13248:13249   */\n      0x04\n        /* \"#utility.yul\":13241:13256   */\n      mstore\n        /* \"#utility.yul\":13275:13279   */\n      0x24\n        /* \"#utility.yul\":13272:13273   */\n      0x00\n        /* \"#utility.yul\":13265:13280   */\n      revert\n        /* \"#utility.yul\":13292:13477   */\n    tag_78:\n        /* \"#utility.yul\":13332:13333   */\n      0x00\n        /* \"#utility.yul\":13349:13369   */\n      tag_340\n        /* \"#utility.yul\":13367:13368   */\n      dup3\n        /* \"#utility.yul\":13349:13369   */\n      tag_161\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":13344:13369   */\n      swap2\n      pop\n        /* \"#utility.yul\":13383:13403   */\n      tag_341\n        /* \"#utility.yul\":13401:13402   */\n      dup4\n        /* \"#utility.yul\":13383:13403   */\n      tag_161\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":13378:13403   */\n      swap3\n      pop\n        /* \"#utility.yul\":13422:13423   */\n      dup3\n        /* \"#utility.yul\":13412:13447   */\n      tag_342\n      jumpi\n        /* \"#utility.yul\":13427:13445   */\n      tag_343\n      tag_201\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":13412:13447   */\n    tag_342:\n        /* \"#utility.yul\":13469:13470   */\n      dup3\n        /* \"#utility.yul\":13466:13467   */\n      dup3\n        /* \"#utility.yul\":13462:13471   */\n      div\n        /* \"#utility.yul\":13457:13471   */\n      swap1\n      pop\n        /* \"#utility.yul\":13292:13477   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13483:13663   */\n    tag_91:\n        /* \"#utility.yul\":13531:13608   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13528:13529   */\n      0x00\n        /* \"#utility.yul\":13521:13609   */\n      mstore\n        /* \"#utility.yul\":13628:13632   */\n      0x32\n        /* \"#utility.yul\":13625:13626   */\n      0x04\n        /* \"#utility.yul\":13618:13633   */\n      mstore\n        /* \"#utility.yul\":13652:13656   */\n      0x24\n        /* \"#utility.yul\":13649:13650   */\n      0x00\n        /* \"#utility.yul\":13642:13657   */\n      revert\n        /* \"#utility.yul\":13669:13902   */\n    tag_105:\n        /* \"#utility.yul\":13708:13711   */\n      0x00\n        /* \"#utility.yul\":13731:13755   */\n      tag_346\n        /* \"#utility.yul\":13749:13754   */\n      dup3\n        /* \"#utility.yul\":13731:13755   */\n      tag_161\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":13722:13755   */\n      swap2\n      pop\n        /* \"#utility.yul\":13777:13843   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":13770:13775   */\n      dup3\n        /* \"#utility.yul\":13767:13844   */\n      sub\n        /* \"#utility.yul\":13764:13867   */\n      tag_347\n      jumpi\n        /* \"#utility.yul\":13847:13865   */\n      tag_348\n      tag_166\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":13764:13867   */\n    tag_347:\n        /* \"#utility.yul\":13894:13895   */\n      0x01\n        /* \"#utility.yul\":13887:13892   */\n      dup3\n        /* \"#utility.yul\":13883:13896   */\n      add\n        /* \"#utility.yul\":13876:13896   */\n      swap1\n      pop\n        /* \"#utility.yul\":13669:13902   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13908:14128   */\n    tag_202:\n        /* \"#utility.yul\":14048:14082   */\n      0x4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f\n        /* \"#utility.yul\":14044:14045   */\n      0x00\n        /* \"#utility.yul\":14036:14042   */\n      dup3\n        /* \"#utility.yul\":14032:14046   */\n      add\n        /* \"#utility.yul\":14025:14083   */\n      mstore\n        /* \"#utility.yul\":14117:14120   */\n      0x6e00000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14112:14114   */\n      0x20\n        /* \"#utility.yul\":14104:14110   */\n      dup3\n        /* \"#utility.yul\":14100:14115   */\n      add\n        /* \"#utility.yul\":14093:14121   */\n      mstore\n        /* \"#utility.yul\":13908:14128   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14134:14500   */\n    tag_203:\n        /* \"#utility.yul\":14276:14279   */\n      0x00\n        /* \"#utility.yul\":14297:14364   */\n      tag_351\n        /* \"#utility.yul\":14361:14363   */\n      0x21\n        /* \"#utility.yul\":14356:14359   */\n      dup4\n        /* \"#utility.yul\":14297:14364   */\n      tag_163\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":14290:14364   */\n      swap2\n      pop\n        /* \"#utility.yul\":14373:14466   */\n      tag_352\n        /* \"#utility.yul\":14462:14465   */\n      dup3\n        /* \"#utility.yul\":14373:14466   */\n      tag_202\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":14491:14493   */\n      0x40\n        /* \"#utility.yul\":14486:14489   */\n      dup3\n        /* \"#utility.yul\":14482:14494   */\n      add\n        /* \"#utility.yul\":14475:14494   */\n      swap1\n      pop\n        /* \"#utility.yul\":14134:14500   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14506:14925   */\n    tag_119:\n        /* \"#utility.yul\":14672:14676   */\n      0x00\n        /* \"#utility.yul\":14710:14712   */\n      0x20\n        /* \"#utility.yul\":14699:14708   */\n      dup3\n        /* \"#utility.yul\":14695:14713   */\n      add\n        /* \"#utility.yul\":14687:14713   */\n      swap1\n      pop\n        /* \"#utility.yul\":14759:14768   */\n      dup2\n        /* \"#utility.yul\":14753:14757   */\n      dup2\n        /* \"#utility.yul\":14749:14769   */\n      sub\n        /* \"#utility.yul\":14745:14746   */\n      0x00\n        /* \"#utility.yul\":14734:14743   */\n      dup4\n        /* \"#utility.yul\":14730:14747   */\n      add\n        /* \"#utility.yul\":14723:14770   */\n      mstore\n        /* \"#utility.yul\":14787:14918   */\n      tag_354\n        /* \"#utility.yul\":14913:14917   */\n      dup2\n        /* \"#utility.yul\":14787:14918   */\n      tag_203\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":14779:14918   */\n      swap1\n      pop\n        /* \"#utility.yul\":14506:14925   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14931:15016   */\n    tag_204:\n        /* \"#utility.yul\":14976:14983   */\n      0x00\n        /* \"#utility.yul\":15005:15010   */\n      dup2\n        /* \"#utility.yul\":14994:15010   */\n      swap1\n      pop\n        /* \"#utility.yul\":14931:15016   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15022:15111   */\n    tag_205:\n        /* \"#utility.yul\":15058:15065   */\n      0x00\n        /* \"#utility.yul\":15098:15104   */\n      0xffff\n        /* \"#utility.yul\":15091:15096   */\n      dup3\n        /* \"#utility.yul\":15087:15105   */\n      and\n        /* \"#utility.yul\":15076:15105   */\n      swap1\n      pop\n        /* \"#utility.yul\":15022:15111   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15117:15177   */\n    tag_206:\n        /* \"#utility.yul\":15145:15148   */\n      0x00\n        /* \"#utility.yul\":15166:15171   */\n      dup2\n        /* \"#utility.yul\":15159:15171   */\n      swap1\n      pop\n        /* \"#utility.yul\":15117:15177   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15183:15339   */\n    tag_207:\n        /* \"#utility.yul\":15240:15249   */\n      0x00\n        /* \"#utility.yul\":15273:15333   */\n      tag_359\n        /* \"#utility.yul\":15290:15332   */\n      tag_360\n        /* \"#utility.yul\":15299:15331   */\n      tag_361\n        /* \"#utility.yul\":15325:15330   */\n      dup5\n        /* \"#utility.yul\":15299:15331   */\n      tag_204\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":15290:15332   */\n      tag_206\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":15273:15333   */\n      tag_205\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":15260:15333   */\n      swap1\n      pop\n        /* \"#utility.yul\":15183:15339   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15345:15490   */\n    tag_208:\n        /* \"#utility.yul\":15439:15483   */\n      tag_363\n        /* \"#utility.yul\":15477:15482   */\n      dup2\n        /* \"#utility.yul\":15439:15483   */\n      tag_207\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":15434:15437   */\n      dup3\n        /* \"#utility.yul\":15427:15484   */\n      mstore\n        /* \"#utility.yul\":15345:15490   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15496:16063   */\n    tag_136:\n        /* \"#utility.yul\":15680:15684   */\n      0x00\n        /* \"#utility.yul\":15718:15721   */\n      0x80\n        /* \"#utility.yul\":15707:15716   */\n      dup3\n        /* \"#utility.yul\":15703:15722   */\n      add\n        /* \"#utility.yul\":15695:15722   */\n      swap1\n      pop\n        /* \"#utility.yul\":15732:15803   */\n      tag_365\n        /* \"#utility.yul\":15800:15801   */\n      0x00\n        /* \"#utility.yul\":15789:15798   */\n      dup4\n        /* \"#utility.yul\":15785:15802   */\n      add\n        /* \"#utility.yul\":15776:15782   */\n      dup8\n        /* \"#utility.yul\":15732:15803   */\n      tag_169\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":15813:15885   */\n      tag_366\n        /* \"#utility.yul\":15881:15883   */\n      0x20\n        /* \"#utility.yul\":15870:15879   */\n      dup4\n        /* \"#utility.yul\":15866:15884   */\n      add\n        /* \"#utility.yul\":15857:15863   */\n      dup7\n        /* \"#utility.yul\":15813:15885   */\n      tag_162\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":15895:15967   */\n      tag_367\n        /* \"#utility.yul\":15963:15965   */\n      0x40\n        /* \"#utility.yul\":15952:15961   */\n      dup4\n        /* \"#utility.yul\":15948:15966   */\n      add\n        /* \"#utility.yul\":15939:15945   */\n      dup6\n        /* \"#utility.yul\":15895:15967   */\n      tag_169\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":15977:16056   */\n      tag_368\n        /* \"#utility.yul\":16052:16054   */\n      0x60\n        /* \"#utility.yul\":16041:16050   */\n      dup4\n        /* \"#utility.yul\":16037:16055   */\n      add\n        /* \"#utility.yul\":16028:16034   */\n      dup5\n        /* \"#utility.yul\":15977:16056   */\n      tag_208\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":15496:16063   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16069:16511   */\n    tag_142:\n        /* \"#utility.yul\":16218:16222   */\n      0x00\n        /* \"#utility.yul\":16256:16258   */\n      0x60\n        /* \"#utility.yul\":16245:16254   */\n      dup3\n        /* \"#utility.yul\":16241:16259   */\n      add\n        /* \"#utility.yul\":16233:16259   */\n      swap1\n      pop\n        /* \"#utility.yul\":16269:16340   */\n      tag_370\n        /* \"#utility.yul\":16337:16338   */\n      0x00\n        /* \"#utility.yul\":16326:16335   */\n      dup4\n        /* \"#utility.yul\":16322:16339   */\n      add\n        /* \"#utility.yul\":16313:16319   */\n      dup7\n        /* \"#utility.yul\":16269:16340   */\n      tag_169\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":16350:16422   */\n      tag_371\n        /* \"#utility.yul\":16418:16420   */\n      0x20\n        /* \"#utility.yul\":16407:16416   */\n      dup4\n        /* \"#utility.yul\":16403:16421   */\n      add\n        /* \"#utility.yul\":16394:16400   */\n      dup6\n        /* \"#utility.yul\":16350:16422   */\n      tag_162\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":16432:16504   */\n      tag_372\n        /* \"#utility.yul\":16500:16502   */\n      0x40\n        /* \"#utility.yul\":16489:16498   */\n      dup4\n        /* \"#utility.yul\":16485:16503   */\n      add\n        /* \"#utility.yul\":16476:16482   */\n      dup5\n        /* \"#utility.yul\":16432:16504   */\n      tag_169\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":16069:16511   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16517:16849   */\n    tag_147:\n        /* \"#utility.yul\":16638:16642   */\n      0x00\n        /* \"#utility.yul\":16676:16678   */\n      0x40\n        /* \"#utility.yul\":16665:16674   */\n      dup3\n        /* \"#utility.yul\":16661:16679   */\n      add\n        /* \"#utility.yul\":16653:16679   */\n      swap1\n      pop\n        /* \"#utility.yul\":16689:16760   */\n      tag_374\n        /* \"#utility.yul\":16757:16758   */\n      0x00\n        /* \"#utility.yul\":16746:16755   */\n      dup4\n        /* \"#utility.yul\":16742:16759   */\n      add\n        /* \"#utility.yul\":16733:16739   */\n      dup6\n        /* \"#utility.yul\":16689:16760   */\n      tag_169\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":16770:16842   */\n      tag_375\n        /* \"#utility.yul\":16838:16840   */\n      0x20\n        /* \"#utility.yul\":16827:16836   */\n      dup4\n        /* \"#utility.yul\":16823:16841   */\n      add\n        /* \"#utility.yul\":16814:16820   */\n      dup5\n        /* \"#utility.yul\":16770:16842   */\n      tag_162\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":16517:16849   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16855:16945   */\n    tag_209:\n        /* \"#utility.yul\":16889:16896   */\n      0x00\n        /* \"#utility.yul\":16932:16937   */\n      dup2\n        /* \"#utility.yul\":16925:16938   */\n      iszero\n        /* \"#utility.yul\":16918:16939   */\n      iszero\n        /* \"#utility.yul\":16907:16939   */\n      swap1\n      pop\n        /* \"#utility.yul\":16855:16945   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16951:17067   */\n    tag_210:\n        /* \"#utility.yul\":17021:17042   */\n      tag_378\n        /* \"#utility.yul\":17036:17041   */\n      dup2\n        /* \"#utility.yul\":17021:17042   */\n      tag_209\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":17014:17019   */\n      dup2\n        /* \"#utility.yul\":17011:17043   */\n      eq\n        /* \"#utility.yul\":17001:17061   */\n      tag_379\n      jumpi\n        /* \"#utility.yul\":17057:17058   */\n      0x00\n        /* \"#utility.yul\":17054:17055   */\n      dup1\n        /* \"#utility.yul\":17047:17059   */\n      revert\n        /* \"#utility.yul\":17001:17061   */\n    tag_379:\n        /* \"#utility.yul\":16951:17067   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17073:17210   */\n    tag_211:\n        /* \"#utility.yul\":17127:17132   */\n      0x00\n        /* \"#utility.yul\":17158:17164   */\n      dup2\n        /* \"#utility.yul\":17152:17165   */\n      mload\n        /* \"#utility.yul\":17143:17165   */\n      swap1\n      pop\n        /* \"#utility.yul\":17174:17204   */\n      tag_381\n        /* \"#utility.yul\":17198:17203   */\n      dup2\n        /* \"#utility.yul\":17174:17204   */\n      tag_210\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":17073:17210   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17216:17561   */\n    tag_151:\n        /* \"#utility.yul\":17283:17289   */\n      0x00\n        /* \"#utility.yul\":17332:17334   */\n      0x20\n        /* \"#utility.yul\":17320:17329   */\n      dup3\n        /* \"#utility.yul\":17311:17318   */\n      dup5\n        /* \"#utility.yul\":17307:17330   */\n      sub\n        /* \"#utility.yul\":17303:17335   */\n      slt\n        /* \"#utility.yul\":17300:17419   */\n      iszero\n      tag_383\n      jumpi\n        /* \"#utility.yul\":17338:17417   */\n      tag_384\n      tag_171\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":17300:17419   */\n    tag_383:\n        /* \"#utility.yul\":17458:17459   */\n      0x00\n        /* \"#utility.yul\":17483:17544   */\n      tag_385\n        /* \"#utility.yul\":17536:17543   */\n      dup5\n        /* \"#utility.yul\":17527:17533   */\n      dup3\n        /* \"#utility.yul\":17516:17525   */\n      dup6\n        /* \"#utility.yul\":17512:17534   */\n      add\n        /* \"#utility.yul\":17483:17544   */\n      tag_211\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":17473:17544   */\n      swap2\n      pop\n        /* \"#utility.yul\":17429:17554   */\n      pop\n        /* \"#utility.yul\":17216:17561   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122079dd0c3a03bdec3f0b558a5f28007ce7f2632448d8d47535fe64ec3eea379ec064736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_138": {
									"entryPoint": null,
									"id": 138,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 904,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 1094,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 753,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 927,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 1117,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 776,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 977,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 994,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 1011,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 858,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 1056,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 826,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 717,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 712,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 878,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 1068,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 727,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3214:8",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:8",
														"type": ""
													}
												],
												"src": "7:75:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:8",
														"type": ""
													}
												],
												"src": "334:77:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:8"
															},
															"nodeType": "YulIf",
															"src": "470:63:8"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:8",
														"type": ""
													}
												],
												"src": "417:122:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "608:80:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "618:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "633:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "627:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "627:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "618:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "676:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "649:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "649:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "649:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "586:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "594:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "602:5:8",
														"type": ""
													}
												],
												"src": "545:143:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "771:274:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "817:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "819:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "819:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "819:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "792:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "801:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "788:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "788:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "813:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "784:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "784:32:8"
															},
															"nodeType": "YulIf",
															"src": "781:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "910:128:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "925:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "939:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "929:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "954:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1000:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1011:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "996:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "996:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1020:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "964:31:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "964:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "954:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "741:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "752:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "764:6:8",
														"type": ""
													}
												],
												"src": "694:351:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1096:81:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1106:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1121:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1128:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1117:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1117:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1106:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1078:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1088:7:8",
														"type": ""
													}
												],
												"src": "1051:126:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1228:51:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1238:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1267:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1249:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1249:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1238:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1210:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1220:7:8",
														"type": ""
													}
												],
												"src": "1183:96:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1328:79:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1385:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1394:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1397:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1387:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1387:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1387:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1351:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1376:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1358:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1358:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1348:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1348:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1341:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1341:43:8"
															},
															"nodeType": "YulIf",
															"src": "1338:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1321:5:8",
														"type": ""
													}
												],
												"src": "1285:122:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1476:80:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1486:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1501:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1495:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1495:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1486:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1544:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1517:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1517:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1517:33:8"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1454:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1462:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1470:5:8",
														"type": ""
													}
												],
												"src": "1413:143:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1639:274:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1685:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1687:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1687:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1687:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1660:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1669:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1656:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1656:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1681:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1652:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1652:32:8"
															},
															"nodeType": "YulIf",
															"src": "1649:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "1778:128:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1793:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1807:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1797:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1822:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1868:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1879:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1864:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1864:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1888:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1832:31:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1832:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1822:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1609:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1620:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1632:6:8",
														"type": ""
													}
												],
												"src": "1562:351:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1984:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2001:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2024:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2006:17:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2006:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1994:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1994:37:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1994:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1972:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1979:3:8",
														"type": ""
													}
												],
												"src": "1919:118:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2108:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2125:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2148:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2130:17:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2130:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2118:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2118:37:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2118:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2096:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2103:3:8",
														"type": ""
													}
												],
												"src": "2043:118:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2293:206:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2303:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2315:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2326:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2311:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2311:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2303:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2383:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2396:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2407:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2392:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2392:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2339:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2339:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2339:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "2464:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2477:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2488:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2473:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2473:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2420:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2420:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2420:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2257:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2269:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2277:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2288:4:8",
														"type": ""
													}
												],
												"src": "2167:332:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2547:48:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2557:32:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2582:5:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2575:6:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2575:13:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2568:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2568:21:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2557:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2529:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2539:7:8",
														"type": ""
													}
												],
												"src": "2505:90:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2641:76:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2695:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2704:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2707:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2697:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2697:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2697:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2664:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2686:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "2671:14:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2671:21:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2661:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2661:32:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2654:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2654:40:8"
															},
															"nodeType": "YulIf",
															"src": "2651:60:8"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2634:5:8",
														"type": ""
													}
												],
												"src": "2601:116:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2783:77:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2793:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2808:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2802:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2802:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2793:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2848:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "2824:23:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2824:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2824:30:8"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2761:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2769:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2777:5:8",
														"type": ""
													}
												],
												"src": "2723:137:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2940:271:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2986:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2988:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2988:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2988:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2961:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2970:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2957:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2957:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2982:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2953:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2953:32:8"
															},
															"nodeType": "YulIf",
															"src": "2950:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "3079:125:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3094:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3108:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3098:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3123:71:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3166:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3177:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3162:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3162:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3186:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3133:28:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3133:61:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3123:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2910:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2921:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2933:6:8",
														"type": ""
													}
												],
												"src": "2866:345:8"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60c06040523480156200001157600080fd5b5060405162001e4738038062001e47833981810160405281019062000037919062000308565b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806080818152505073d0a1e359811322d97991e03f863a0c30c2cf029c73ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff16815250507388757f2f99175387ab4c6a4b3067c77a695b0349600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630261bf8b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200018b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001b191906200039f565b600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600060058190555060a05173ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6040518363ffffffff1660e01b81526004016200027a929190620003f3565b6020604051808303816000875af11580156200029a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002c091906200045d565b50506200048f565b600080fd5b6000819050919050565b620002e281620002cd565b8114620002ee57600080fd5b50565b6000815190506200030281620002d7565b92915050565b600060208284031215620003215762000320620002c8565b5b60006200033184828501620002f1565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000367826200033a565b9050919050565b62000379816200035a565b81146200038557600080fd5b50565b60008151905062000399816200036e565b92915050565b600060208284031215620003b857620003b7620002c8565b5b6000620003c88482850162000388565b91505092915050565b620003dc816200035a565b82525050565b620003ed81620002cd565b82525050565b60006040820190506200040a6000830185620003d1565b620004196020830184620003e2565b9392505050565b60008115159050919050565b620004378162000420565b81146200044357600080fd5b50565b60008151905062000457816200042c565b92915050565b600060208284031215620004765762000475620002c8565b5b6000620004868482850162000446565b91505092915050565b60805160a051611968620004df600039600081816103b001528181610cc901528181610d8001528181610e0701528181610ead0152610f3d01526000818161058901526106d701526119686000f3fe6080604052600436106100595760003560e01c80630e29df22146100625780631d01364c1461006c57806322e8c87d14610097578063c3d40853146100c2578063db88031a146100ed578063e2ec0c2d146100f757610060565b3661006057005b005b61006a610101565b005b34801561007857600080fd5b5061008161031e565b60405161008e9190610fd8565b60405180910390f35b3480156100a357600080fd5b506100ac610324565b6040516100b99190610fd8565b60405180910390f35b3480156100ce57600080fd5b506100d761036d565b6040516100e49190610fd8565b60405180910390f35b6100f56104b3565b005b6100ff610b04565b005b60003411610144576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161013b90611050565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000016000828254610195919061109f565b92505081905550426000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010181905550600015156000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff161515036102fa5760016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160006101000a81548160ff0219169083151502179055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b61030334610c73565b3460056000828254610315919061109f565b92505081905550565b60055481565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154905090565b600080600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166335ea6a757f00000000000000000000000000000000000000000000000000000000000000006040518263ffffffff1660e01b81526004016103eb9190611136565b61018060405180830381865afa158015610409573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042d9190611465565b60e0015190508073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161046c9190611136565b602060405180830381865afa158015610489573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ad9190611493565b91505090565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015490506000811161053c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105339061150c565b60405180910390fd5b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154905060004290507f0000000000000000000000000000000000000000000000000000000000000000826105b3919061109f565b8111156106d35760008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055508260055461060f919061152c565b60058190555061061e83610d40565b60003373ffffffffffffffffffffffffffffffffffffffff168460405161064490611591565b60006040518083038185875af1925050503d8060008114610681576040519150601f19603f3d011682016040523d82523d6000602084013e610686565b606091505b50509050806106ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c1906115f2565b60405180910390fd5b50505050610b02565b60007f000000000000000000000000000000000000000000000000000000000000000060648484610704919061152c565b61070e9190611612565b610718919061169b565b905060006064600283606461072d919061152c565b610737919061169b565b866107429190611612565b61074c919061169b565b90506000819050600086600554610763919061152c565b9050600060018054806020026020016040519081016040528092919081815260200182805480156107e957602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161079f575b5050505050905060008060005b8351811015610985576000806000868481518110610817576108166116cc565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015490503373ffffffffffffffffffffffffffffffffffffffff16858381518110610889576108886116cc565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff16141580156108b55750600081115b156109715785612710826108c99190611612565b6108d3919061169b565b935061271084896108e49190611612565b6108ee919061169b565b925082876108fc919061152c565b965082600080878581518110610915576109146116cc565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000016000828254610969919061109f565b925050819055505b50808061097d906116fb565b9150506107f6565b5084868b610993919061152c565b61099d919061109f565b9950896005546109ad919061152c565b60058190555060008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000181905550610a038a610d40565b60003373ffffffffffffffffffffffffffffffffffffffff168b604051610a2990611591565b60006040518083038185875af1925050503d8060008114610a66576040519150601f19603f3d011682016040523d82523d6000602084013e610a6b565b606091505b5050905080610aaf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aa6906115f2565b60405180910390fd5b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555050505050505050505050505b565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b94576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b8b906117b5565b60405180910390fd5b6000600554610ba161036d565b610bab919061152c565b905060008111610bba57600080fd5b610bc381610d40565b60003373ffffffffffffffffffffffffffffffffffffffff1682604051610be990611591565b60006040518083038185875af1925050503d8060008114610c26576040519150601f19603f3d011682016040523d82523d6000602084013e610c2b565b606091505b5050905080610c6f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c66906115f2565b60405180910390fd5b5050565b60008111610c8057600080fd5b610c8981610f3b565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e8eda9df7f0000000000000000000000000000000000000000000000000000000000000000833060006040518563ffffffff1660e01b8152600401610d0b9493929190611828565b600060405180830381600087803b158015610d2557600080fd5b505af1158015610d39573d6000803e3d6000fd5b5050505050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166369328dec7f000000000000000000000000000000000000000000000000000000000000000083306040518463ffffffff1660e01b8152600401610dbf9392919061186d565b6020604051808303816000875af1158015610dde573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e029190611493565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663095ea7b330846040518363ffffffff1660e01b8152600401610e609291906118a4565b6020604051808303816000875af1158015610e7f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ea39190611905565b90508015610f37577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16632e1a7d4d836040518263ffffffff1660e01b8152600401610f049190610fd8565b600060405180830381600087803b158015610f1e57600080fd5b505af1158015610f32573d6000803e3d6000fd5b505050505b5050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b158015610fa357600080fd5b505af1158015610fb7573d6000803e3d6000fd5b505050505050565b6000819050919050565b610fd281610fbf565b82525050565b6000602082019050610fed6000830184610fc9565b92915050565b600082825260208201905092915050565b7f596f75206d7573742073656e6420736f6d6520746f6b656e732e2e2e00000000600082015250565b600061103a601c83610ff3565b915061104582611004565b602082019050919050565b600060208201905081810360008301526110698161102d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006110aa82610fbf565b91506110b583610fbf565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156110ea576110e9611070565b5b828201905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611120826110f5565b9050919050565b61113081611115565b82525050565b600060208201905061114b6000830184611127565b92915050565b6000604051905090565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6111ae82611165565b810181811067ffffffffffffffff821117156111cd576111cc611176565b5b80604052505050565b60006111e0611151565b90506111ec82826111a5565b919050565b6111fa81610fbf565b811461120557600080fd5b50565b600081519050611217816111f1565b92915050565b60006020828403121561123357611232611160565b5b61123d60206111d6565b9050600061124d84828501611208565b60008301525092915050565b60006fffffffffffffffffffffffffffffffff82169050919050565b61127e81611259565b811461128957600080fd5b50565b60008151905061129b81611275565b92915050565b600064ffffffffff82169050919050565b6112bb816112a1565b81146112c657600080fd5b50565b6000815190506112d8816112b2565b92915050565b6112e781611115565b81146112f257600080fd5b50565b600081519050611304816112de565b92915050565b600060ff82169050919050565b6113208161130a565b811461132b57600080fd5b50565b60008151905061133d81611317565b92915050565b6000610180828403121561135a57611359611160565b5b6113656101806111d6565b905060006113758482850161121d565b60008301525060206113898482850161128c565b602083015250604061139d8482850161128c565b60408301525060606113b18482850161128c565b60608301525060806113c58482850161128c565b60808301525060a06113d98482850161128c565b60a08301525060c06113ed848285016112c9565b60c08301525060e0611401848285016112f5565b60e083015250610100611416848285016112f5565b6101008301525061012061142c848285016112f5565b61012083015250610140611442848285016112f5565b610140830152506101606114588482850161132e565b6101608301525092915050565b6000610180828403121561147c5761147b61115b565b5b600061148a84828501611343565b91505092915050565b6000602082840312156114a9576114a861115b565b5b60006114b784828501611208565b91505092915050565b7f5573657220646f6e27742068617665206465706f736974656420455448000000600082015250565b60006114f6601d83610ff3565b9150611501826114c0565b602082019050919050565b60006020820190508181036000830152611525816114e9565b9050919050565b600061153782610fbf565b915061154283610fbf565b92508282101561155557611554611070565b5b828203905092915050565b600081905092915050565b50565b600061157b600083611560565b91506115868261156b565b600082019050919050565b600061159c8261156e565b9150819050919050565b7f5472616e73666572206661696c65642e00000000000000000000000000000000600082015250565b60006115dc601083610ff3565b91506115e7826115a6565b602082019050919050565b6000602082019050818103600083015261160b816115cf565b9050919050565b600061161d82610fbf565b915061162883610fbf565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561166157611660611070565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006116a682610fbf565b91506116b183610fbf565b9250826116c1576116c061166c565b5b828204905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600061170682610fbf565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361173857611737611070565b5b600182019050919050565b7f4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f60008201527f6e00000000000000000000000000000000000000000000000000000000000000602082015250565b600061179f602183610ff3565b91506117aa82611743565b604082019050919050565b600060208201905081810360008301526117ce81611792565b9050919050565b6000819050919050565b600061ffff82169050919050565b6000819050919050565b600061181261180d611808846117d5565b6117ed565b6117df565b9050919050565b611822816117f7565b82525050565b600060808201905061183d6000830187611127565b61184a6020830186610fc9565b6118576040830185611127565b6118646060830184611819565b95945050505050565b60006060820190506118826000830186611127565b61188f6020830185610fc9565b61189c6040830184611127565b949350505050565b60006040820190506118b96000830185611127565b6118c66020830184610fc9565b9392505050565b60008115159050919050565b6118e2816118cd565b81146118ed57600080fd5b50565b6000815190506118ff816118d9565b92915050565b60006020828403121561191b5761191a61115b565b5b6000611929848285016118f0565b9150509291505056fea264697066735822122079dd0c3a03bdec3f0b558a5f28007ce7f2632448d8d47535fe64ec3eea379ec064736f6c634300080f0033",
							"opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1E47 CODESIZE SUB DUP1 PUSH3 0x1E47 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x308 JUMP JUMPDEST CALLER PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x80 DUP2 DUP2 MSTORE POP POP PUSH20 0xD0A1E359811322D97991E03F863A0C30C2CF029C PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH20 0x88757F2F99175387AB4C6A4B3067C77A695B0349 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x261BF8B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x18B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x1B1 SWAP2 SWAP1 PUSH3 0x39F JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH1 0xA0 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x27A SWAP3 SWAP2 SWAP1 PUSH3 0x3F3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH3 0x29A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x2C0 SWAP2 SWAP1 PUSH3 0x45D JUMP JUMPDEST POP POP PUSH3 0x48F JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2E2 DUP2 PUSH3 0x2CD JUMP JUMPDEST DUP2 EQ PUSH3 0x2EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x302 DUP2 PUSH3 0x2D7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x321 JUMPI PUSH3 0x320 PUSH3 0x2C8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x331 DUP5 DUP3 DUP6 ADD PUSH3 0x2F1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x367 DUP3 PUSH3 0x33A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x379 DUP2 PUSH3 0x35A JUMP JUMPDEST DUP2 EQ PUSH3 0x385 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x399 DUP2 PUSH3 0x36E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x3B8 JUMPI PUSH3 0x3B7 PUSH3 0x2C8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x3C8 DUP5 DUP3 DUP6 ADD PUSH3 0x388 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x3DC DUP2 PUSH3 0x35A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0x3ED DUP2 PUSH3 0x2CD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH3 0x40A PUSH1 0x0 DUP4 ADD DUP6 PUSH3 0x3D1 JUMP JUMPDEST PUSH3 0x419 PUSH1 0x20 DUP4 ADD DUP5 PUSH3 0x3E2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x437 DUP2 PUSH3 0x420 JUMP JUMPDEST DUP2 EQ PUSH3 0x443 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x457 DUP2 PUSH3 0x42C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x476 JUMPI PUSH3 0x475 PUSH3 0x2C8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x486 DUP5 DUP3 DUP6 ADD PUSH3 0x446 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x1968 PUSH3 0x4DF PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x3B0 ADD MSTORE DUP2 DUP2 PUSH2 0xCC9 ADD MSTORE DUP2 DUP2 PUSH2 0xD80 ADD MSTORE DUP2 DUP2 PUSH2 0xE07 ADD MSTORE DUP2 DUP2 PUSH2 0xEAD ADD MSTORE PUSH2 0xF3D ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x589 ADD MSTORE PUSH2 0x6D7 ADD MSTORE PUSH2 0x1968 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x59 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xE29DF22 EQ PUSH2 0x62 JUMPI DUP1 PUSH4 0x1D01364C EQ PUSH2 0x6C JUMPI DUP1 PUSH4 0x22E8C87D EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0xC3D40853 EQ PUSH2 0xC2 JUMPI DUP1 PUSH4 0xDB88031A EQ PUSH2 0xED JUMPI DUP1 PUSH4 0xE2EC0C2D EQ PUSH2 0xF7 JUMPI PUSH2 0x60 JUMP JUMPDEST CALLDATASIZE PUSH2 0x60 JUMPI STOP JUMPDEST STOP JUMPDEST PUSH2 0x6A PUSH2 0x101 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x78 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x81 PUSH2 0x31E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8E SWAP2 SWAP1 PUSH2 0xFD8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAC PUSH2 0x324 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB9 SWAP2 SWAP1 PUSH2 0xFD8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD7 PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE4 SWAP2 SWAP1 PUSH2 0xFD8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF5 PUSH2 0x4B3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xFF PUSH2 0xB04 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 CALLVALUE GT PUSH2 0x144 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13B SWAP1 PUSH2 0x1050 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x195 SWAP2 SWAP1 PUSH2 0x109F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 ISZERO ISZERO PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO SUB PUSH2 0x2FA JUMPI PUSH1 0x1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 CALLER SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x303 CALLVALUE PUSH2 0xC73 JUMP JUMPDEST CALLVALUE PUSH1 0x5 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x315 SWAP2 SWAP1 PUSH2 0x109F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x35EA6A75 PUSH32 0x0 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3EB SWAP2 SWAP1 PUSH2 0x1136 JUMP JUMPDEST PUSH2 0x180 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x409 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x42D SWAP2 SWAP1 PUSH2 0x1465 JUMP JUMPDEST PUSH1 0xE0 ADD MLOAD SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x46C SWAP2 SWAP1 PUSH2 0x1136 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x489 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4AD SWAP2 SWAP1 PUSH2 0x1493 JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x53C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x533 SWAP1 PUSH2 0x150C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP PUSH1 0x0 TIMESTAMP SWAP1 POP PUSH32 0x0 DUP3 PUSH2 0x5B3 SWAP2 SWAP1 PUSH2 0x109F JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x6D3 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x5 SLOAD PUSH2 0x60F SWAP2 SWAP1 PUSH2 0x152C JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH2 0x61E DUP4 PUSH2 0xD40 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x644 SWAP1 PUSH2 0x1591 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x681 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x686 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x6CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6C1 SWAP1 PUSH2 0x15F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP PUSH2 0xB02 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x64 DUP5 DUP5 PUSH2 0x704 SWAP2 SWAP1 PUSH2 0x152C JUMP JUMPDEST PUSH2 0x70E SWAP2 SWAP1 PUSH2 0x1612 JUMP JUMPDEST PUSH2 0x718 SWAP2 SWAP1 PUSH2 0x169B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x64 PUSH1 0x2 DUP4 PUSH1 0x64 PUSH2 0x72D SWAP2 SWAP1 PUSH2 0x152C JUMP JUMPDEST PUSH2 0x737 SWAP2 SWAP1 PUSH2 0x169B JUMP JUMPDEST DUP7 PUSH2 0x742 SWAP2 SWAP1 PUSH2 0x1612 JUMP JUMPDEST PUSH2 0x74C SWAP2 SWAP1 PUSH2 0x169B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x0 DUP7 PUSH1 0x5 SLOAD PUSH2 0x763 SWAP2 SWAP1 PUSH2 0x152C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x7E9 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x79F JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x985 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x817 JUMPI PUSH2 0x816 PUSH2 0x16CC JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x889 JUMPI PUSH2 0x888 PUSH2 0x16CC JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x8B5 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH2 0x971 JUMPI DUP6 PUSH2 0x2710 DUP3 PUSH2 0x8C9 SWAP2 SWAP1 PUSH2 0x1612 JUMP JUMPDEST PUSH2 0x8D3 SWAP2 SWAP1 PUSH2 0x169B JUMP JUMPDEST SWAP4 POP PUSH2 0x2710 DUP5 DUP10 PUSH2 0x8E4 SWAP2 SWAP1 PUSH2 0x1612 JUMP JUMPDEST PUSH2 0x8EE SWAP2 SWAP1 PUSH2 0x169B JUMP JUMPDEST SWAP3 POP DUP3 DUP8 PUSH2 0x8FC SWAP2 SWAP1 PUSH2 0x152C JUMP JUMPDEST SWAP7 POP DUP3 PUSH1 0x0 DUP1 DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x915 JUMPI PUSH2 0x914 PUSH2 0x16CC JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x969 SWAP2 SWAP1 PUSH2 0x109F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST POP DUP1 DUP1 PUSH2 0x97D SWAP1 PUSH2 0x16FB JUMP JUMPDEST SWAP2 POP POP PUSH2 0x7F6 JUMP JUMPDEST POP DUP5 DUP7 DUP12 PUSH2 0x993 SWAP2 SWAP1 PUSH2 0x152C JUMP JUMPDEST PUSH2 0x99D SWAP2 SWAP1 PUSH2 0x109F JUMP JUMPDEST SWAP10 POP DUP10 PUSH1 0x5 SLOAD PUSH2 0x9AD SWAP2 SWAP1 PUSH2 0x152C JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0xA03 DUP11 PUSH2 0xD40 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP12 PUSH1 0x40 MLOAD PUSH2 0xA29 SWAP1 PUSH2 0x1591 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xA66 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xA6B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xAAF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAA6 SWAP1 PUSH2 0x15F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP POP POP POP POP POP POP POP POP POP POP POP JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB94 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB8B SWAP1 PUSH2 0x17B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x5 SLOAD PUSH2 0xBA1 PUSH2 0x36D JUMP JUMPDEST PUSH2 0xBAB SWAP2 SWAP1 PUSH2 0x152C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0xBBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBC3 DUP2 PUSH2 0xD40 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0xBE9 SWAP1 PUSH2 0x1591 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xC26 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xC2B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xC6F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC66 SWAP1 PUSH2 0x15F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xC80 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC89 DUP2 PUSH2 0xF3B JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE8EDA9DF PUSH32 0x0 DUP4 ADDRESS PUSH1 0x0 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD0B SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1828 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD39 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x69328DEC PUSH32 0x0 DUP4 ADDRESS PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDBF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x186D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDDE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE02 SWAP2 SWAP1 PUSH2 0x1493 JUMP JUMPDEST POP PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 ADDRESS DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE60 SWAP3 SWAP2 SWAP1 PUSH2 0x18A4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE7F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEA3 SWAP2 SWAP1 PUSH2 0x1905 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0xF37 JUMPI PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x2E1A7D4D DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF04 SWAP2 SWAP1 PUSH2 0xFD8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF32 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD0E30DB0 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFB7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFD2 DUP2 PUSH2 0xFBF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFED PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xFC9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x596F75206D7573742073656E6420736F6D6520746F6B656E732E2E2E00000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x103A PUSH1 0x1C DUP4 PUSH2 0xFF3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1045 DUP3 PUSH2 0x1004 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1069 DUP2 PUSH2 0x102D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x10AA DUP3 PUSH2 0xFBF JUMP JUMPDEST SWAP2 POP PUSH2 0x10B5 DUP4 PUSH2 0xFBF JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x10EA JUMPI PUSH2 0x10E9 PUSH2 0x1070 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1120 DUP3 PUSH2 0x10F5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1130 DUP2 PUSH2 0x1115 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x114B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1127 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x11AE DUP3 PUSH2 0x1165 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x11CD JUMPI PUSH2 0x11CC PUSH2 0x1176 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11E0 PUSH2 0x1151 JUMP JUMPDEST SWAP1 POP PUSH2 0x11EC DUP3 DUP3 PUSH2 0x11A5 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11FA DUP2 PUSH2 0xFBF JUMP JUMPDEST DUP2 EQ PUSH2 0x1205 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1217 DUP2 PUSH2 0x11F1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1233 JUMPI PUSH2 0x1232 PUSH2 0x1160 JUMP JUMPDEST JUMPDEST PUSH2 0x123D PUSH1 0x20 PUSH2 0x11D6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x124D DUP5 DUP3 DUP6 ADD PUSH2 0x1208 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x127E DUP2 PUSH2 0x1259 JUMP JUMPDEST DUP2 EQ PUSH2 0x1289 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x129B DUP2 PUSH2 0x1275 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH5 0xFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12BB DUP2 PUSH2 0x12A1 JUMP JUMPDEST DUP2 EQ PUSH2 0x12C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x12D8 DUP2 PUSH2 0x12B2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x12E7 DUP2 PUSH2 0x1115 JUMP JUMPDEST DUP2 EQ PUSH2 0x12F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1304 DUP2 PUSH2 0x12DE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1320 DUP2 PUSH2 0x130A JUMP JUMPDEST DUP2 EQ PUSH2 0x132B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x133D DUP2 PUSH2 0x1317 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x180 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x135A JUMPI PUSH2 0x1359 PUSH2 0x1160 JUMP JUMPDEST JUMPDEST PUSH2 0x1365 PUSH2 0x180 PUSH2 0x11D6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1375 DUP5 DUP3 DUP6 ADD PUSH2 0x121D JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x1389 DUP5 DUP3 DUP6 ADD PUSH2 0x128C JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x139D DUP5 DUP3 DUP6 ADD PUSH2 0x128C JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 PUSH2 0x13B1 DUP5 DUP3 DUP6 ADD PUSH2 0x128C JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 PUSH2 0x13C5 DUP5 DUP3 DUP6 ADD PUSH2 0x128C JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP PUSH1 0xA0 PUSH2 0x13D9 DUP5 DUP3 DUP6 ADD PUSH2 0x128C JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MSTORE POP PUSH1 0xC0 PUSH2 0x13ED DUP5 DUP3 DUP6 ADD PUSH2 0x12C9 JUMP JUMPDEST PUSH1 0xC0 DUP4 ADD MSTORE POP PUSH1 0xE0 PUSH2 0x1401 DUP5 DUP3 DUP6 ADD PUSH2 0x12F5 JUMP JUMPDEST PUSH1 0xE0 DUP4 ADD MSTORE POP PUSH2 0x100 PUSH2 0x1416 DUP5 DUP3 DUP6 ADD PUSH2 0x12F5 JUMP JUMPDEST PUSH2 0x100 DUP4 ADD MSTORE POP PUSH2 0x120 PUSH2 0x142C DUP5 DUP3 DUP6 ADD PUSH2 0x12F5 JUMP JUMPDEST PUSH2 0x120 DUP4 ADD MSTORE POP PUSH2 0x140 PUSH2 0x1442 DUP5 DUP3 DUP6 ADD PUSH2 0x12F5 JUMP JUMPDEST PUSH2 0x140 DUP4 ADD MSTORE POP PUSH2 0x160 PUSH2 0x1458 DUP5 DUP3 DUP6 ADD PUSH2 0x132E JUMP JUMPDEST PUSH2 0x160 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x180 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x147C JUMPI PUSH2 0x147B PUSH2 0x115B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x148A DUP5 DUP3 DUP6 ADD PUSH2 0x1343 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14A9 JUMPI PUSH2 0x14A8 PUSH2 0x115B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x14B7 DUP5 DUP3 DUP6 ADD PUSH2 0x1208 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5573657220646F6E27742068617665206465706F736974656420455448000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14F6 PUSH1 0x1D DUP4 PUSH2 0xFF3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1501 DUP3 PUSH2 0x14C0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1525 DUP2 PUSH2 0x14E9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1537 DUP3 PUSH2 0xFBF JUMP JUMPDEST SWAP2 POP PUSH2 0x1542 DUP4 PUSH2 0xFBF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1555 JUMPI PUSH2 0x1554 PUSH2 0x1070 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x157B PUSH1 0x0 DUP4 PUSH2 0x1560 JUMP JUMPDEST SWAP2 POP PUSH2 0x1586 DUP3 PUSH2 0x156B JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x159C DUP3 PUSH2 0x156E JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5472616E73666572206661696C65642E00000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15DC PUSH1 0x10 DUP4 PUSH2 0xFF3 JUMP JUMPDEST SWAP2 POP PUSH2 0x15E7 DUP3 PUSH2 0x15A6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x160B DUP2 PUSH2 0x15CF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x161D DUP3 PUSH2 0xFBF JUMP JUMPDEST SWAP2 POP PUSH2 0x1628 DUP4 PUSH2 0xFBF JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1661 JUMPI PUSH2 0x1660 PUSH2 0x1070 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x16A6 DUP3 PUSH2 0xFBF JUMP JUMPDEST SWAP2 POP PUSH2 0x16B1 DUP4 PUSH2 0xFBF JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x16C1 JUMPI PUSH2 0x16C0 PUSH2 0x166C JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1706 DUP3 PUSH2 0xFBF JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1738 JUMPI PUSH2 0x1737 PUSH2 0x1070 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C79206F776E65722063616E2063616C6C20746869732066756E6374696F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x179F PUSH1 0x21 DUP4 PUSH2 0xFF3 JUMP JUMPDEST SWAP2 POP PUSH2 0x17AA DUP3 PUSH2 0x1743 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x17CE DUP2 PUSH2 0x1792 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1812 PUSH2 0x180D PUSH2 0x1808 DUP5 PUSH2 0x17D5 JUMP JUMPDEST PUSH2 0x17ED JUMP JUMPDEST PUSH2 0x17DF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1822 DUP2 PUSH2 0x17F7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x183D PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1127 JUMP JUMPDEST PUSH2 0x184A PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0xFC9 JUMP JUMPDEST PUSH2 0x1857 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1127 JUMP JUMPDEST PUSH2 0x1864 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1819 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1882 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1127 JUMP JUMPDEST PUSH2 0x188F PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xFC9 JUMP JUMPDEST PUSH2 0x189C PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1127 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x18B9 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1127 JUMP JUMPDEST PUSH2 0x18C6 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xFC9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18E2 DUP2 PUSH2 0x18CD JUMP JUMPDEST DUP2 EQ PUSH2 0x18ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x18FF DUP2 PUSH2 0x18D9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x191B JUMPI PUSH2 0x191A PUSH2 0x115B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1929 DUP5 DUP3 DUP6 ADD PUSH2 0x18F0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0xDD0C3A03BDEC3F0B558A5F28007CE7F2632448D8D47535FE64EC RETURNDATACOPY 0xEA CALLDATACOPY SWAP15 0xC0 PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ",
							"sourceMap": "606:6426:1:-:0;;;1090:440;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1145:10;1135:7;;:20;;;;;;;;;;;;;;;;;;1183:8;1166:25;;;;;;1215:42;1202:56;;;;;;;;;;1318:42;1269:8;;:93;;;;;;;;;;;;;;;;;;1401:8;;;;;;;;;;;:23;;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1373:12;;:54;;;;;;;;;;;;;;;;;;1456:1;1438:15;:19;;;;1468:4;;:12;;;1489;;;;;;;;;;;1504:17;1468:54;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1090:440;606:6426;;88:117:8;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:351::-;764:6;813:2;801:9;792:7;788:23;784:32;781:119;;;819:79;;:::i;:::-;781:119;939:1;964:64;1020:7;1011:6;1000:9;996:22;964:64;:::i;:::-;954:74;;910:128;694:351;;;;:::o;1051:126::-;1088:7;1128:42;1121:5;1117:54;1106:65;;1051:126;;;:::o;1183:96::-;1220:7;1249:24;1267:5;1249:24;:::i;:::-;1238:35;;1183:96;;;:::o;1285:122::-;1358:24;1376:5;1358:24;:::i;:::-;1351:5;1348:35;1338:63;;1397:1;1394;1387:12;1338:63;1285:122;:::o;1413:143::-;1470:5;1501:6;1495:13;1486:22;;1517:33;1544:5;1517:33;:::i;:::-;1413:143;;;;:::o;1562:351::-;1632:6;1681:2;1669:9;1660:7;1656:23;1652:32;1649:119;;;1687:79;;:::i;:::-;1649:119;1807:1;1832:64;1888:7;1879:6;1868:9;1864:22;1832:64;:::i;:::-;1822:74;;1778:128;1562:351;;;;:::o;1919:118::-;2006:24;2024:5;2006:24;:::i;:::-;2001:3;1994:37;1919:118;;:::o;2043:::-;2130:24;2148:5;2130:24;:::i;:::-;2125:3;2118:37;2043:118;;:::o;2167:332::-;2288:4;2326:2;2315:9;2311:18;2303:26;;2339:71;2407:1;2396:9;2392:17;2383:6;2339:71;:::i;:::-;2420:72;2488:2;2477:9;2473:18;2464:6;2420:72;:::i;:::-;2167:332;;;;;:::o;2505:90::-;2539:7;2582:5;2575:13;2568:21;2557:32;;2505:90;;;:::o;2601:116::-;2671:21;2686:5;2671:21;:::i;:::-;2664:5;2661:32;2651:60;;2707:1;2704;2697:12;2651:60;2601:116;:::o;2723:137::-;2777:5;2808:6;2802:13;2793:22;;2824:30;2848:5;2824:30;:::i;:::-;2723:137;;;;:::o;2866:345::-;2933:6;2982:2;2970:9;2961:7;2957:23;2953:32;2950:119;;;2988:79;;:::i;:::-;2950:119;3108:1;3133:61;3186:7;3177:6;3166:9;3162:22;3133:61;:::i;:::-;3123:71;;3079:125;2866:345;;;;:::o;606:6426:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_629": {
									"entryPoint": null,
									"id": 629,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_633": {
									"entryPoint": null,
									"id": 633,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@depositAave_625": {
									"entryPoint": 3187,
									"id": 625,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@depositETH_524": {
									"entryPoint": 3899,
									"id": 524,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@depositedAmount_79": {
									"entryPoint": 798,
									"id": 79,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getCurrentBalanceOfATokens_553": {
									"entryPoint": 877,
									"id": 553,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getMyEther_459": {
									"entryPoint": 1203,
									"id": 459,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getUserData_151": {
									"entryPoint": 804,
									"id": 151,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@sendEther_216": {
									"entryPoint": 257,
									"id": 216,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sendKajmakToOwner_498": {
									"entryPoint": 2820,
									"id": 498,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdrawWETH_593": {
									"entryPoint": 3392,
									"id": 593,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 4853,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 6384,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_struct$_ReserveConfigurationMap_$1394_memory_ptr_fromMemory": {
									"entryPoint": 4637,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_struct$_ReserveData_$1391_memory_ptr_fromMemory": {
									"entryPoint": 4931,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint128_fromMemory": {
									"entryPoint": 4748,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 4616,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint40_fromMemory": {
									"entryPoint": 4809,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint8_fromMemory": {
									"entryPoint": 4910,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 6405,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_struct$_ReserveData_$1391_memory_ptr_fromMemory": {
									"entryPoint": 5221,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 5267,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4391,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_rational_0_by_1_to_t_uint16_fromStack": {
									"entryPoint": 6169,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6034,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_bad8a69a64d4eb54d6c3bd935b58cb9af8aa4fbfad1377dd6f3891b890280daf_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4141,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 5486,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c81948f77ae7b56f1759fc612b6b373d090eebe7124f74c528fff8e0a139fe69_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5583,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_cd3f2efd2471e6a0a5c018719572f02b194bf693339d22d7875056148557fcee_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5353,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4041,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 5521,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4406,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 6308,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 6253,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_address_t_rational_0_by_1__to_t_address_t_uint256_t_address_t_uint16__fromStack_reversed": {
									"entryPoint": 6184,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6069,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_bad8a69a64d4eb54d6c3bd935b58cb9af8aa4fbfad1377dd6f3891b890280daf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4176,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c81948f77ae7b56f1759fc612b6b373d090eebe7124f74c528fff8e0a139fe69__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5618,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cd3f2efd2471e6a0a5c018719572f02b194bf693339d22d7875056148557fcee__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5388,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4056,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 4566,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 4433,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 5472,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4083,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4255,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 5787,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 5650,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 5420,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4373,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6349,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_0_by_1": {
									"entryPoint": 6101,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint128": {
									"entryPoint": 4697,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint16": {
									"entryPoint": 6111,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4341,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4031,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint40": {
									"entryPoint": 4769,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 4874,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_0_by_1_to_t_uint16": {
									"entryPoint": 6135,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 4517,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 6125,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 5883,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4208,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 5740,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 5836,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 4470,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f": {
									"entryPoint": 4448,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4443,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 4453,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef": {
									"entryPoint": 5955,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_bad8a69a64d4eb54d6c3bd935b58cb9af8aa4fbfad1377dd6f3891b890280daf": {
									"entryPoint": 4100,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
									"entryPoint": 5483,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c81948f77ae7b56f1759fc612b6b373d090eebe7124f74c528fff8e0a139fe69": {
									"entryPoint": 5542,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_cd3f2efd2471e6a0a5c018719572f02b194bf693339d22d7875056148557fcee": {
									"entryPoint": 5312,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4830,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 6361,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint128": {
									"entryPoint": 4725,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4593,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint40": {
									"entryPoint": 4786,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint8": {
									"entryPoint": 4887,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:17564:8",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:32:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:16:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "73:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:8",
														"type": ""
													}
												],
												"src": "7:77:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "155:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:37:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "165:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "143:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "150:3:8",
														"type": ""
													}
												],
												"src": "90:118:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "312:124:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "322:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "345:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "330:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "426:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "358:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "358:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "284:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "296:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "307:4:8",
														"type": ""
													}
												],
												"src": "214:222:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "538:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "555:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "560:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "548:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "548:19:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "548:19:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "576:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "595:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "600:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "591:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "591:14:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "576:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "510:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "515:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "526:11:8",
														"type": ""
													}
												],
												"src": "442:169:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "723:72:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "745:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "753:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "741:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "741:14:8"
																	},
																	{
																		"hexValue": "596f75206d7573742073656e6420736f6d6520746f6b656e732e2e2e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "757:30:8",
																		"type": "",
																		"value": "You must send some tokens..."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "734:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "734:54:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "734:54:8"
														}
													]
												},
												"name": "store_literal_in_memory_bad8a69a64d4eb54d6c3bd935b58cb9af8aa4fbfad1377dd6f3891b890280daf",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "715:6:8",
														"type": ""
													}
												],
												"src": "617:178:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "947:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "957:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1023:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1028:2:8",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "964:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "964:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "957:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1129:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_bad8a69a64d4eb54d6c3bd935b58cb9af8aa4fbfad1377dd6f3891b890280daf",
																	"nodeType": "YulIdentifier",
																	"src": "1040:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1040:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1040:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1142:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1153:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1158:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1149:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1149:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1142:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_bad8a69a64d4eb54d6c3bd935b58cb9af8aa4fbfad1377dd6f3891b890280daf_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "935:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "943:3:8",
														"type": ""
													}
												],
												"src": "801:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1344:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1354:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1366:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1377:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1362:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1362:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1354:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1401:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1412:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1397:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1397:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1420:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1426:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1416:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1416:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1390:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1390:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1390:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1446:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1580:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_bad8a69a64d4eb54d6c3bd935b58cb9af8aa4fbfad1377dd6f3891b890280daf_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1454:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1454:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1446:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bad8a69a64d4eb54d6c3bd935b58cb9af8aa4fbfad1377dd6f3891b890280daf__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1324:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1339:4:8",
														"type": ""
													}
												],
												"src": "1173:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1626:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1643:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1646:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1636:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1636:88:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1636:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1740:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1743:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1733:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1733:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1733:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1764:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1767:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1757:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1757:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1757:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "1598:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1828:261:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1838:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1861:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1843:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1843:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "1838:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1872:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1895:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1877:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1877:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "1872:1:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2035:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2037:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2037:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2037:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1956:1:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1963:66:8",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2031:1:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1959:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1959:74:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1953:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1953:81:8"
															},
															"nodeType": "YulIf",
															"src": "1950:107:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2067:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2078:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2081:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2074:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2074:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "2067:3:8"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1815:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1818:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "1824:3:8",
														"type": ""
													}
												],
												"src": "1784:305:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2140:81:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2150:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2165:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2172:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2161:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2161:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2150:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2122:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2132:7:8",
														"type": ""
													}
												],
												"src": "2095:126:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2272:51:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2282:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2311:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2293:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2293:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2282:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2254:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2264:7:8",
														"type": ""
													}
												],
												"src": "2227:96:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2394:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2411:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2434:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2416:17:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2416:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2404:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2404:37:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2404:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2382:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2389:3:8",
														"type": ""
													}
												],
												"src": "2329:118:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2551:124:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2561:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2573:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2584:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2569:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2569:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2561:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2641:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2654:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2665:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2650:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2650:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2597:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2597:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2597:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2523:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2535:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2546:4:8",
														"type": ""
													}
												],
												"src": "2453:222:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2721:35:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2731:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2747:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2741:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2741:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "2731:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2714:6:8",
														"type": ""
													}
												],
												"src": "2681:75:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2851:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2868:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2871:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2861:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2861:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2861:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "2762:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2974:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2991:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2994:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2984:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2984:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2984:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "2885:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3097:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3114:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3117:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3107:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3107:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3107:12:8"
														}
													]
												},
												"name": "revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f",
												"nodeType": "YulFunctionDefinition",
												"src": "3008:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3179:54:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3189:38:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3207:5:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3214:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3203:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3203:14:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3223:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "3219:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3219:7:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3199:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3199:28:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "3189:6:8"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3162:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "3172:6:8",
														"type": ""
													}
												],
												"src": "3131:102:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3267:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3284:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3287:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3277:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3277:88:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3277:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3381:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3384:4:8",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3374:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3374:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3374:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3405:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3408:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3398:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3398:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3398:15:8"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "3239:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3468:238:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3478:58:8",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3500:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "3530:4:8"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "3508:21:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3508:27:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3496:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3496:40:8"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "3482:10:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3647:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3649:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3649:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3649:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3590:10:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3602:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3587:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3587:34:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3626:10:8"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3638:6:8"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "3623:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3623:22:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "3584:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3584:62:8"
															},
															"nodeType": "YulIf",
															"src": "3581:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3685:2:8",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "3689:10:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3678:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3678:22:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3678:22:8"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3454:6:8",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "3462:4:8",
														"type": ""
													}
												],
												"src": "3425:281:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3753:88:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3763:30:8",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "3773:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3773:20:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "3763:6:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3822:6:8"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "3830:4:8"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "3802:19:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3802:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3802:33:8"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "3737:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3746:6:8",
														"type": ""
													}
												],
												"src": "3712:129:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3936:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3953:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3956:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3946:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3946:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3946:12:8"
														}
													]
												},
												"name": "revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421",
												"nodeType": "YulFunctionDefinition",
												"src": "3847:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4013:79:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4070:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4079:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4082:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4072:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4072:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4072:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4036:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4061:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "4043:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4043:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4033:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4033:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4026:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4026:43:8"
															},
															"nodeType": "YulIf",
															"src": "4023:63:8"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4006:5:8",
														"type": ""
													}
												],
												"src": "3970:122:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4161:80:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4171:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4186:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4180:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4180:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4171:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4229:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4202:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4202:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4202:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4139:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4147:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4155:5:8",
														"type": ""
													}
												],
												"src": "4098:143:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4402:344:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4446:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f",
																				"nodeType": "YulIdentifier",
																				"src": "4448:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4448:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4448:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "4423:3:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4428:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4419:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4419:19:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4440:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4415:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4415:30:8"
															},
															"nodeType": "YulIf",
															"src": "4412:117:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4538:30:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4563:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "4547:15:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4547:21:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4538:5:8"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4578:161:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4613:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4627:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4617:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4653:5:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4660:4:8",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4649:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4649:16:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "4703:9:8"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "4714:6:8"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "4699:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4699:22:8"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "4723:3:8"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_uint256_fromMemory",
																					"nodeType": "YulIdentifier",
																					"src": "4667:31:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4667:60:8"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "4642:6:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4642:86:8"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "4642:86:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_struct$_ReserveConfigurationMap_$1394_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4377:9:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4388:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4396:5:8",
														"type": ""
													}
												],
												"src": "4295:451:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4797:73:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4807:57:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4822:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4829:34:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4818:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4818:46:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4807:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint128",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4779:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4789:7:8",
														"type": ""
													}
												],
												"src": "4752:118:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4919:79:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4976:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4985:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4988:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4978:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4978:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4978:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4942:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4967:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint128",
																					"nodeType": "YulIdentifier",
																					"src": "4949:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4949:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4939:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4939:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4932:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4932:43:8"
															},
															"nodeType": "YulIf",
															"src": "4929:63:8"
														}
													]
												},
												"name": "validator_revert_t_uint128",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4912:5:8",
														"type": ""
													}
												],
												"src": "4876:122:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5067:80:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5077:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5092:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5086:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5086:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "5077:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5135:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint128",
																	"nodeType": "YulIdentifier",
																	"src": "5108:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5108:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5108:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint128_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5045:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5053:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5061:5:8",
														"type": ""
													}
												],
												"src": "5004:143:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5197:51:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5207:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5222:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5229:12:8",
																		"type": "",
																		"value": "0xffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5218:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5218:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5207:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint40",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5179:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5189:7:8",
														"type": ""
													}
												],
												"src": "5153:95:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5296:78:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5352:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5361:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5364:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5354:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5354:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5354:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5319:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5343:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint40",
																					"nodeType": "YulIdentifier",
																					"src": "5326:16:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5326:23:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5316:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5316:34:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5309:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5309:42:8"
															},
															"nodeType": "YulIf",
															"src": "5306:62:8"
														}
													]
												},
												"name": "validator_revert_t_uint40",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5289:5:8",
														"type": ""
													}
												],
												"src": "5254:120:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5442:79:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5452:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5467:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5461:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5461:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "5452:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5509:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint40",
																	"nodeType": "YulIdentifier",
																	"src": "5483:25:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5483:32:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5483:32:8"
														}
													]
												},
												"name": "abi_decode_t_uint40_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5420:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5428:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5436:5:8",
														"type": ""
													}
												],
												"src": "5380:141:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5570:79:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5627:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5636:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5639:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5629:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5629:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5629:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5593:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5618:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "5600:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5600:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5590:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5590:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5583:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5583:43:8"
															},
															"nodeType": "YulIf",
															"src": "5580:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5563:5:8",
														"type": ""
													}
												],
												"src": "5527:122:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5718:80:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5728:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5743:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5737:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5737:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "5728:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5786:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "5759:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5759:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5759:33:8"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5696:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5704:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5712:5:8",
														"type": ""
													}
												],
												"src": "5655:143:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5847:43:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5857:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5872:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5879:4:8",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5868:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5868:16:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5857:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5829:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5839:7:8",
														"type": ""
													}
												],
												"src": "5804:86:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5937:77:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5992:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6001:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6004:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5994:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5994:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5994:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5960:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5983:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint8",
																					"nodeType": "YulIdentifier",
																					"src": "5967:15:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5967:22:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5957:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5957:33:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5950:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5950:41:8"
															},
															"nodeType": "YulIf",
															"src": "5947:61:8"
														}
													]
												},
												"name": "validator_revert_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5930:5:8",
														"type": ""
													}
												],
												"src": "5896:118:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6081:78:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6091:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6106:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6100:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6100:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "6091:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6147:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "6122:24:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6122:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6122:31:8"
														}
													]
												},
												"name": "abi_decode_t_uint8_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6059:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6067:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6075:5:8",
														"type": ""
													}
												],
												"src": "6020:139:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6296:2467:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6342:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f",
																				"nodeType": "YulIdentifier",
																				"src": "6344:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6344:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6344:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "6317:3:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6322:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6313:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6313:19:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6334:6:8",
																		"type": "",
																		"value": "0x0180"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6309:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6309:32:8"
															},
															"nodeType": "YulIf",
															"src": "6306:119:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6434:32:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6459:6:8",
																		"type": "",
																		"value": "0x0180"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "6443:15:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6443:23:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "6434:5:8"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6476:211:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6520:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6534:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6524:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6560:5:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6567:4:8",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6556:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6556:16:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "6651:9:8"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "6662:6:8"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "6647:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6647:22:8"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "6671:3:8"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_struct$_ReserveConfigurationMap_$1394_memory_ptr_fromMemory",
																					"nodeType": "YulIdentifier",
																					"src": "6574:72:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6574:101:8"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "6549:6:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6549:127:8"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "6549:127:8"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6697:172:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6742:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6756:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6746:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6783:5:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6790:4:8",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6779:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6779:16:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "6833:9:8"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "6844:6:8"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "6829:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6829:22:8"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "6853:3:8"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_uint128_fromMemory",
																					"nodeType": "YulIdentifier",
																					"src": "6797:31:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6797:60:8"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "6772:6:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6772:86:8"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "6772:86:8"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6879:177:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6929:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6943:2:8",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6933:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6970:5:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6977:4:8",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6966:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6966:16:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "7020:9:8"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "7031:6:8"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "7016:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7016:22:8"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "7040:3:8"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_uint128_fromMemory",
																					"nodeType": "YulIdentifier",
																					"src": "6984:31:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6984:60:8"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "6959:6:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6959:86:8"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "6959:86:8"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7066:178:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7117:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7131:2:8",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7121:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7158:5:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7165:4:8",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7154:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7154:16:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "7208:9:8"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "7219:6:8"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "7204:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7204:22:8"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "7228:3:8"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_uint128_fromMemory",
																					"nodeType": "YulIdentifier",
																					"src": "7172:31:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7172:60:8"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "7147:6:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7147:86:8"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "7147:86:8"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7254:184:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7310:17:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7324:3:8",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7314:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7352:5:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7359:4:8",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7348:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7348:16:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "7402:9:8"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "7413:6:8"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "7398:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7398:22:8"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "7422:3:8"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_uint128_fromMemory",
																					"nodeType": "YulIdentifier",
																					"src": "7366:31:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7366:60:8"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "7341:6:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7341:86:8"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "7341:86:8"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7448:182:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7502:17:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7516:3:8",
																		"type": "",
																		"value": "160"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7506:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7544:5:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7551:4:8",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7540:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7540:16:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "7594:9:8"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "7605:6:8"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "7590:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7590:22:8"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "7614:3:8"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_uint128_fromMemory",
																					"nodeType": "YulIdentifier",
																					"src": "7558:31:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7558:60:8"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "7533:6:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7533:86:8"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "7533:86:8"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7640:177:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7690:17:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7704:3:8",
																		"type": "",
																		"value": "192"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7694:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7732:5:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7739:4:8",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7728:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7728:16:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "7781:9:8"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "7792:6:8"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "7777:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7777:22:8"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "7801:3:8"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_uint40_fromMemory",
																					"nodeType": "YulIdentifier",
																					"src": "7746:30:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7746:59:8"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "7721:6:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7721:85:8"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "7721:85:8"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7827:172:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7871:17:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7885:3:8",
																		"type": "",
																		"value": "224"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7875:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7913:5:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7920:4:8",
																						"type": "",
																						"value": "0xe0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7909:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7909:16:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "7963:9:8"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "7974:6:8"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "7959:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7959:22:8"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "7983:3:8"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_address_fromMemory",
																					"nodeType": "YulIdentifier",
																					"src": "7927:31:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7927:60:8"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "7902:6:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7902:86:8"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "7902:86:8"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "8009:183:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8062:17:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8076:3:8",
																		"type": "",
																		"value": "256"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8066:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "8104:5:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8111:6:8",
																						"type": "",
																						"value": "0x0100"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8100:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8100:18:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "8156:9:8"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "8167:6:8"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "8152:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8152:22:8"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "8176:3:8"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_address_fromMemory",
																					"nodeType": "YulIdentifier",
																					"src": "8120:31:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8120:60:8"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "8093:6:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8093:88:8"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "8093:88:8"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "8202:185:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8257:17:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8271:3:8",
																		"type": "",
																		"value": "288"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8261:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "8299:5:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8306:6:8",
																						"type": "",
																						"value": "0x0120"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8295:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8295:18:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "8351:9:8"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "8362:6:8"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "8347:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8347:22:8"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "8371:3:8"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_address_fromMemory",
																					"nodeType": "YulIdentifier",
																					"src": "8315:31:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8315:60:8"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "8288:6:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8288:88:8"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "8288:88:8"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "8397:188:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8455:17:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8469:3:8",
																		"type": "",
																		"value": "320"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8459:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "8497:5:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8504:6:8",
																						"type": "",
																						"value": "0x0140"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8493:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8493:18:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "8549:9:8"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "8560:6:8"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "8545:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8545:22:8"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "8569:3:8"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_address_fromMemory",
																					"nodeType": "YulIdentifier",
																					"src": "8513:31:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8513:60:8"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "8486:6:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8486:88:8"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "8486:88:8"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "8595:161:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8628:17:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8642:3:8",
																		"type": "",
																		"value": "352"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8632:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "8670:5:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8677:6:8",
																						"type": "",
																						"value": "0x0160"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8666:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8666:18:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "8720:9:8"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "8731:6:8"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "8716:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8716:22:8"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "8740:3:8"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_uint8_fromMemory",
																					"nodeType": "YulIdentifier",
																					"src": "8686:29:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8686:58:8"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "8659:6:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8659:86:8"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "8659:86:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_struct$_ReserveData_$1391_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6271:9:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6282:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6290:5:8",
														"type": ""
													}
												],
												"src": "6201:2562:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8875:304:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8922:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "8924:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8924:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8924:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8896:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8905:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8892:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8892:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8917:3:8",
																		"type": "",
																		"value": "384"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8888:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8888:33:8"
															},
															"nodeType": "YulIf",
															"src": "8885:120:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "9015:157:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9030:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9044:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9034:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9059:103:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9134:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9145:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9130:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9130:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9154:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_struct$_ReserveData_$1391_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "9069:60:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9069:93:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "9059:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_struct$_ReserveData_$1391_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8845:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8856:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8868:6:8",
														"type": ""
													}
												],
												"src": "8769:410:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9262:274:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9308:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "9310:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9310:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9310:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9283:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9292:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9279:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9279:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9304:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9275:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9275:32:8"
															},
															"nodeType": "YulIf",
															"src": "9272:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "9401:128:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9416:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9430:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9420:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9445:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9491:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9502:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9487:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9487:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9511:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "9455:31:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9455:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "9445:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9232:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9243:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9255:6:8",
														"type": ""
													}
												],
												"src": "9185:351:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9648:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9670:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9678:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9666:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9666:14:8"
																	},
																	{
																		"hexValue": "5573657220646f6e27742068617665206465706f736974656420455448",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9682:31:8",
																		"type": "",
																		"value": "User don't have deposited ETH"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9659:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9659:55:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9659:55:8"
														}
													]
												},
												"name": "store_literal_in_memory_cd3f2efd2471e6a0a5c018719572f02b194bf693339d22d7875056148557fcee",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9640:6:8",
														"type": ""
													}
												],
												"src": "9542:179:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9873:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9883:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9949:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9954:2:8",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9890:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9890:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9883:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10055:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_cd3f2efd2471e6a0a5c018719572f02b194bf693339d22d7875056148557fcee",
																	"nodeType": "YulIdentifier",
																	"src": "9966:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9966:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9966:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10068:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10079:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10084:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10075:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10075:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10068:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_cd3f2efd2471e6a0a5c018719572f02b194bf693339d22d7875056148557fcee_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9861:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9869:3:8",
														"type": ""
													}
												],
												"src": "9727:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10270:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10280:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10292:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10303:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10288:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10288:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10280:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10327:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10338:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10323:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10323:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10346:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10352:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10342:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10342:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10316:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10316:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10316:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10372:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10506:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_cd3f2efd2471e6a0a5c018719572f02b194bf693339d22d7875056148557fcee_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10380:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10380:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10372:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cd3f2efd2471e6a0a5c018719572f02b194bf693339d22d7875056148557fcee__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10250:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10265:4:8",
														"type": ""
													}
												],
												"src": "10099:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10569:146:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10579:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10602:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10584:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10584:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "10579:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10613:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10636:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10618:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10618:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "10613:1:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10660:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10662:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10662:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10662:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10654:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10657:1:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "10651:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10651:8:8"
															},
															"nodeType": "YulIf",
															"src": "10648:34:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10692:17:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10704:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10707:1:8"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "10700:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10700:9:8"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "10692:4:8"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10555:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10558:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "10564:4:8",
														"type": ""
													}
												],
												"src": "10524:191:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10834:34:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10844:18:8",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "10859:3:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "10844:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10806:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10811:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "10822:11:8",
														"type": ""
													}
												],
												"src": "10721:147:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10980:8:8",
													"statements": []
												},
												"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10972:6:8",
														"type": ""
													}
												],
												"src": "10874:114:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11157:235:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11167:90:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11250:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11255:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11174:75:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11174:83:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11167:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11355:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"nodeType": "YulIdentifier",
																	"src": "11266:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11266:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11266:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11368:18:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11379:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11384:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11375:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11375:11:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11368:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11145:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11153:3:8",
														"type": ""
													}
												],
												"src": "10994:398:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11586:191:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11597:154:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11747:3:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11604:141:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11604:147:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11597:3:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11761:10:8",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "11768:3:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11761:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11573:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11582:3:8",
														"type": ""
													}
												],
												"src": "11398:379:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11889:60:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11911:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11919:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11907:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11907:14:8"
																	},
																	{
																		"hexValue": "5472616e73666572206661696c65642e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11923:18:8",
																		"type": "",
																		"value": "Transfer failed."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11900:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11900:42:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11900:42:8"
														}
													]
												},
												"name": "store_literal_in_memory_c81948f77ae7b56f1759fc612b6b373d090eebe7124f74c528fff8e0a139fe69",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11881:6:8",
														"type": ""
													}
												],
												"src": "11783:166:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12101:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12111:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12177:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12182:2:8",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12118:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12118:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12111:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12283:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c81948f77ae7b56f1759fc612b6b373d090eebe7124f74c528fff8e0a139fe69",
																	"nodeType": "YulIdentifier",
																	"src": "12194:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12194:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12194:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12296:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12307:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12312:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12303:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12303:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12296:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c81948f77ae7b56f1759fc612b6b373d090eebe7124f74c528fff8e0a139fe69_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12089:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12097:3:8",
														"type": ""
													}
												],
												"src": "11955:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12498:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12508:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12520:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12531:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12516:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12516:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12508:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12555:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12566:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12551:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12551:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12574:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12580:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12570:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12570:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12544:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12544:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12544:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12600:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12734:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c81948f77ae7b56f1759fc612b6b373d090eebe7124f74c528fff8e0a139fe69_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12608:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12608:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12600:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c81948f77ae7b56f1759fc612b6b373d090eebe7124f74c528fff8e0a139fe69__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12478:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12493:4:8",
														"type": ""
													}
												],
												"src": "12327:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12800:300:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12810:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12833:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12815:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12815:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "12810:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12844:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12867:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12849:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12849:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "12844:1:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13042:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "13044:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13044:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13044:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "12954:1:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "12947:6:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12947:9:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "12940:6:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12940:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "12962:1:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12969:66:8",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "13037:1:8"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "12965:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12965:74:8"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "12959:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12959:81:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "12936:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12936:105:8"
															},
															"nodeType": "YulIf",
															"src": "12933:131:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13074:20:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13089:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13092:1:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "13085:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13085:9:8"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "13074:7:8"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12783:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12786:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "12792:7:8",
														"type": ""
													}
												],
												"src": "12752:348:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13134:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13151:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13154:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13144:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13144:88:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13144:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13248:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13251:4:8",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13241:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13241:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13241:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13272:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13275:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13265:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13265:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13265:15:8"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "13106:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13334:143:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13344:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13367:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13349:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13349:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "13344:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13378:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13401:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13383:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13383:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "13378:1:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13425:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "13427:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13427:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13427:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13422:1:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13415:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13415:9:8"
															},
															"nodeType": "YulIf",
															"src": "13412:35:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13457:14:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13466:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13469:1:8"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "13462:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13462:9:8"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "13457:1:8"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "13323:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "13326:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "13332:1:8",
														"type": ""
													}
												],
												"src": "13292:185:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13511:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13528:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13531:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13521:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13521:88:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13521:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13625:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13628:4:8",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13618:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13618:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13618:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13649:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13652:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13642:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13642:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13642:15:8"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "13483:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13712:190:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13722:33:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13749:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13731:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13731:24:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "13722:5:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13845:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "13847:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13847:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13847:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13770:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13777:66:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "13767:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13767:77:8"
															},
															"nodeType": "YulIf",
															"src": "13764:103:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13876:20:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13887:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13894:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13883:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13883:13:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "13876:3:8"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13698:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "13708:3:8",
														"type": ""
													}
												],
												"src": "13669:233:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14014:114:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14036:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14044:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14032:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14032:14:8"
																	},
																	{
																		"hexValue": "4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14048:34:8",
																		"type": "",
																		"value": "Only owner can call this functio"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14025:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14025:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14025:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14104:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14112:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14100:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14100:15:8"
																	},
																	{
																		"hexValue": "6e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14117:3:8",
																		"type": "",
																		"value": "n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14093:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14093:28:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14093:28:8"
														}
													]
												},
												"name": "store_literal_in_memory_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14006:6:8",
														"type": ""
													}
												],
												"src": "13908:220:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14280:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14290:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14356:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14361:2:8",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14297:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14297:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14290:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14462:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef",
																	"nodeType": "YulIdentifier",
																	"src": "14373:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14373:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14373:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14475:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14486:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14491:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14482:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14482:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14475:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14268:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14276:3:8",
														"type": ""
													}
												],
												"src": "14134:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14677:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14687:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14699:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14710:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14695:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14695:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14687:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14734:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14745:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14730:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14730:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14753:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14759:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14749:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14749:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14723:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14723:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14723:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14779:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14913:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14787:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14787:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14779:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14657:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14672:4:8",
														"type": ""
													}
												],
												"src": "14506:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14984:32:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14994:16:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "15005:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "14994:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_0_by_1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14966:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "14976:7:8",
														"type": ""
													}
												],
												"src": "14931:85:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15066:45:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15076:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15091:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15098:6:8",
																		"type": "",
																		"value": "0xffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "15087:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15087:18:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "15076:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15048:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "15058:7:8",
														"type": ""
													}
												],
												"src": "15022:89:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15149:28:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15159:12:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "15166:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "15159:3:8"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15135:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "15145:3:8",
														"type": ""
													}
												],
												"src": "15117:60:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15250:89:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15260:73:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "15325:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_0_by_1",
																					"nodeType": "YulIdentifier",
																					"src": "15299:25:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15299:32:8"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "15290:8:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15290:42:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint16",
																	"nodeType": "YulIdentifier",
																	"src": "15273:16:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15273:60:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "15260:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_0_by_1_to_t_uint16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15230:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "15240:9:8",
														"type": ""
													}
												],
												"src": "15183:156:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15417:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15434:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "15477:5:8"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_0_by_1_to_t_uint16",
																			"nodeType": "YulIdentifier",
																			"src": "15439:37:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15439:44:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15427:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15427:57:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15427:57:8"
														}
													]
												},
												"name": "abi_encode_t_rational_0_by_1_to_t_uint16_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15405:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15412:3:8",
														"type": ""
													}
												],
												"src": "15345:145:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15685:378:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15695:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15707:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15718:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15703:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15703:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15695:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "15776:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15789:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15800:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15785:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15785:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15732:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15732:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15732:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "15857:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15870:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15881:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15866:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15866:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15813:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15813:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15813:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "15939:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15952:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15963:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15948:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15948:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15895:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15895:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15895:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "16028:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16041:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16052:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16037:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16037:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_0_by_1_to_t_uint16_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15977:50:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15977:79:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15977:79:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_address_t_rational_0_by_1__to_t_address_t_uint256_t_address_t_uint16__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15633:9:8",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "15645:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "15653:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "15661:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15669:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15680:4:8",
														"type": ""
													}
												],
												"src": "15496:567:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16223:288:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16233:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16245:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16256:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16241:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16241:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16233:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "16313:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16326:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16337:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16322:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16322:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16269:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16269:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16269:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "16394:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16407:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16418:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16403:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16403:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16350:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16350:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16350:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "16476:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16489:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16500:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16485:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16485:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16432:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16432:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16432:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16179:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "16191:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "16199:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16207:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16218:4:8",
														"type": ""
													}
												],
												"src": "16069:442:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16643:206:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16653:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16665:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16676:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16661:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16661:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16653:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "16733:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16746:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16757:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16742:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16742:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16689:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16689:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16689:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "16814:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16827:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16838:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16823:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16823:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16770:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16770:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16770:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16607:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "16619:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16627:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16638:4:8",
														"type": ""
													}
												],
												"src": "16517:332:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16897:48:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16907:32:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "16932:5:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "16925:6:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16925:13:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "16918:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16918:21:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "16907:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16879:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "16889:7:8",
														"type": ""
													}
												],
												"src": "16855:90:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16991:76:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17045:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17054:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17057:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "17047:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17047:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17047:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "17014:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "17036:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "17021:14:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17021:21:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "17011:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17011:32:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "17004:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17004:40:8"
															},
															"nodeType": "YulIf",
															"src": "17001:60:8"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16984:5:8",
														"type": ""
													}
												],
												"src": "16951:116:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17133:77:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17143:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "17158:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "17152:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17152:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "17143:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "17198:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "17174:23:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17174:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17174:30:8"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "17111:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "17119:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17127:5:8",
														"type": ""
													}
												],
												"src": "17073:137:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17290:271:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17336:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "17338:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17338:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17338:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "17311:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17320:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17307:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17307:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17332:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "17303:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17303:32:8"
															},
															"nodeType": "YulIf",
															"src": "17300:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "17429:125:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "17444:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17458:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "17448:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "17473:71:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "17516:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "17527:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "17512:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17512:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "17536:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "17483:28:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17483:61:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "17473:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17260:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "17271:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "17283:6:8",
														"type": ""
													}
												],
												"src": "17216:345:8"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_bad8a69a64d4eb54d6c3bd935b58cb9af8aa4fbfad1377dd6f3891b890280daf(memPtr) {\n\n        mstore(add(memPtr, 0), \"You must send some tokens...\")\n\n    }\n\n    function abi_encode_t_stringliteral_bad8a69a64d4eb54d6c3bd935b58cb9af8aa4fbfad1377dd6f3891b890280daf_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_bad8a69a64d4eb54d6c3bd935b58cb9af8aa4fbfad1377dd6f3891b890280daf(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_bad8a69a64d4eb54d6c3bd935b58cb9af8aa4fbfad1377dd6f3891b890280daf__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_bad8a69a64d4eb54d6c3bd935b58cb9af8aa4fbfad1377dd6f3891b890280daf_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    // struct DataTypes.ReserveConfigurationMap\n    function abi_decode_t_struct$_ReserveConfigurationMap_$1394_memory_ptr_fromMemory(headStart, end) -> value {\n        if slt(sub(end, headStart), 0x20) { revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() }\n        value := allocate_memory(0x20)\n\n        {\n            // data\n\n            let offset := 0\n\n            mstore(add(value, 0x00), abi_decode_t_uint256_fromMemory(add(headStart, offset), end))\n\n        }\n\n    }\n\n    function cleanup_t_uint128(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_uint128(value) {\n        if iszero(eq(value, cleanup_t_uint128(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint128_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint128(value)\n    }\n\n    function cleanup_t_uint40(value) -> cleaned {\n        cleaned := and(value, 0xffffffffff)\n    }\n\n    function validator_revert_t_uint40(value) {\n        if iszero(eq(value, cleanup_t_uint40(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint40_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint40(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    // struct DataTypes.ReserveData\n    function abi_decode_t_struct$_ReserveData_$1391_memory_ptr_fromMemory(headStart, end) -> value {\n        if slt(sub(end, headStart), 0x0180) { revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() }\n        value := allocate_memory(0x0180)\n\n        {\n            // configuration\n\n            let offset := 0\n\n            mstore(add(value, 0x00), abi_decode_t_struct$_ReserveConfigurationMap_$1394_memory_ptr_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // liquidityIndex\n\n            let offset := 32\n\n            mstore(add(value, 0x20), abi_decode_t_uint128_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // variableBorrowIndex\n\n            let offset := 64\n\n            mstore(add(value, 0x40), abi_decode_t_uint128_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // currentLiquidityRate\n\n            let offset := 96\n\n            mstore(add(value, 0x60), abi_decode_t_uint128_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // currentVariableBorrowRate\n\n            let offset := 128\n\n            mstore(add(value, 0x80), abi_decode_t_uint128_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // currentStableBorrowRate\n\n            let offset := 160\n\n            mstore(add(value, 0xa0), abi_decode_t_uint128_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // lastUpdateTimestamp\n\n            let offset := 192\n\n            mstore(add(value, 0xc0), abi_decode_t_uint40_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // aTokenAddress\n\n            let offset := 224\n\n            mstore(add(value, 0xe0), abi_decode_t_address_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // stableDebtTokenAddress\n\n            let offset := 256\n\n            mstore(add(value, 0x0100), abi_decode_t_address_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // variableDebtTokenAddress\n\n            let offset := 288\n\n            mstore(add(value, 0x0120), abi_decode_t_address_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // interestRateStrategyAddress\n\n            let offset := 320\n\n            mstore(add(value, 0x0140), abi_decode_t_address_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // id\n\n            let offset := 352\n\n            mstore(add(value, 0x0160), abi_decode_t_uint8_fromMemory(add(headStart, offset), end))\n\n        }\n\n    }\n\n    function abi_decode_tuple_t_struct$_ReserveData_$1391_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 384) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_struct$_ReserveData_$1391_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_cd3f2efd2471e6a0a5c018719572f02b194bf693339d22d7875056148557fcee(memPtr) {\n\n        mstore(add(memPtr, 0), \"User don't have deposited ETH\")\n\n    }\n\n    function abi_encode_t_stringliteral_cd3f2efd2471e6a0a5c018719572f02b194bf693339d22d7875056148557fcee_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_cd3f2efd2471e6a0a5c018719572f02b194bf693339d22d7875056148557fcee(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cd3f2efd2471e6a0a5c018719572f02b194bf693339d22d7875056148557fcee__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cd3f2efd2471e6a0a5c018719572f02b194bf693339d22d7875056148557fcee_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_c81948f77ae7b56f1759fc612b6b373d090eebe7124f74c528fff8e0a139fe69(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfer failed.\")\n\n    }\n\n    function abi_encode_t_stringliteral_c81948f77ae7b56f1759fc612b6b373d090eebe7124f74c528fff8e0a139fe69_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_c81948f77ae7b56f1759fc612b6b373d090eebe7124f74c528fff8e0a139fe69(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c81948f77ae7b56f1759fc612b6b373d090eebe7124f74c528fff8e0a139fe69__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c81948f77ae7b56f1759fc612b6b373d090eebe7124f74c528fff8e0a139fe69_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function store_literal_in_memory_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only owner can call this functio\")\n\n        mstore(add(memPtr, 32), \"n\")\n\n    }\n\n    function abi_encode_t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_rational_0_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint16(value) -> cleaned {\n        cleaned := and(value, 0xffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_rational_0_by_1_to_t_uint16(value) -> converted {\n        converted := cleanup_t_uint16(identity(cleanup_t_rational_0_by_1(value)))\n    }\n\n    function abi_encode_t_rational_0_by_1_to_t_uint16_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_0_by_1_to_t_uint16(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address_t_rational_0_by_1__to_t_address_t_uint256_t_address_t_uint16__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_rational_0_by_1_to_t_uint16_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"68": [
									{
										"length": 32,
										"start": 1417
									},
									{
										"length": 32,
										"start": 1751
									}
								],
								"71": [
									{
										"length": 32,
										"start": 944
									},
									{
										"length": 32,
										"start": 3273
									},
									{
										"length": 32,
										"start": 3456
									},
									{
										"length": 32,
										"start": 3591
									},
									{
										"length": 32,
										"start": 3757
									},
									{
										"length": 32,
										"start": 3901
									}
								]
							},
							"linkReferences": {},
							"object": "6080604052600436106100595760003560e01c80630e29df22146100625780631d01364c1461006c57806322e8c87d14610097578063c3d40853146100c2578063db88031a146100ed578063e2ec0c2d146100f757610060565b3661006057005b005b61006a610101565b005b34801561007857600080fd5b5061008161031e565b60405161008e9190610fd8565b60405180910390f35b3480156100a357600080fd5b506100ac610324565b6040516100b99190610fd8565b60405180910390f35b3480156100ce57600080fd5b506100d761036d565b6040516100e49190610fd8565b60405180910390f35b6100f56104b3565b005b6100ff610b04565b005b60003411610144576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161013b90611050565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000016000828254610195919061109f565b92505081905550426000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010181905550600015156000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff161515036102fa5760016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160006101000a81548160ff0219169083151502179055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b61030334610c73565b3460056000828254610315919061109f565b92505081905550565b60055481565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154905090565b600080600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166335ea6a757f00000000000000000000000000000000000000000000000000000000000000006040518263ffffffff1660e01b81526004016103eb9190611136565b61018060405180830381865afa158015610409573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042d9190611465565b60e0015190508073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161046c9190611136565b602060405180830381865afa158015610489573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ad9190611493565b91505090565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015490506000811161053c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105339061150c565b60405180910390fd5b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154905060004290507f0000000000000000000000000000000000000000000000000000000000000000826105b3919061109f565b8111156106d35760008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055508260055461060f919061152c565b60058190555061061e83610d40565b60003373ffffffffffffffffffffffffffffffffffffffff168460405161064490611591565b60006040518083038185875af1925050503d8060008114610681576040519150601f19603f3d011682016040523d82523d6000602084013e610686565b606091505b50509050806106ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c1906115f2565b60405180910390fd5b50505050610b02565b60007f000000000000000000000000000000000000000000000000000000000000000060648484610704919061152c565b61070e9190611612565b610718919061169b565b905060006064600283606461072d919061152c565b610737919061169b565b866107429190611612565b61074c919061169b565b90506000819050600086600554610763919061152c565b9050600060018054806020026020016040519081016040528092919081815260200182805480156107e957602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161079f575b5050505050905060008060005b8351811015610985576000806000868481518110610817576108166116cc565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015490503373ffffffffffffffffffffffffffffffffffffffff16858381518110610889576108886116cc565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff16141580156108b55750600081115b156109715785612710826108c99190611612565b6108d3919061169b565b935061271084896108e49190611612565b6108ee919061169b565b925082876108fc919061152c565b965082600080878581518110610915576109146116cc565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000016000828254610969919061109f565b925050819055505b50808061097d906116fb565b9150506107f6565b5084868b610993919061152c565b61099d919061109f565b9950896005546109ad919061152c565b60058190555060008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000181905550610a038a610d40565b60003373ffffffffffffffffffffffffffffffffffffffff168b604051610a2990611591565b60006040518083038185875af1925050503d8060008114610a66576040519150601f19603f3d011682016040523d82523d6000602084013e610a6b565b606091505b5050905080610aaf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aa6906115f2565b60405180910390fd5b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555050505050505050505050505b565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b94576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b8b906117b5565b60405180910390fd5b6000600554610ba161036d565b610bab919061152c565b905060008111610bba57600080fd5b610bc381610d40565b60003373ffffffffffffffffffffffffffffffffffffffff1682604051610be990611591565b60006040518083038185875af1925050503d8060008114610c26576040519150601f19603f3d011682016040523d82523d6000602084013e610c2b565b606091505b5050905080610c6f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c66906115f2565b60405180910390fd5b5050565b60008111610c8057600080fd5b610c8981610f3b565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e8eda9df7f0000000000000000000000000000000000000000000000000000000000000000833060006040518563ffffffff1660e01b8152600401610d0b9493929190611828565b600060405180830381600087803b158015610d2557600080fd5b505af1158015610d39573d6000803e3d6000fd5b5050505050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166369328dec7f000000000000000000000000000000000000000000000000000000000000000083306040518463ffffffff1660e01b8152600401610dbf9392919061186d565b6020604051808303816000875af1158015610dde573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e029190611493565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663095ea7b330846040518363ffffffff1660e01b8152600401610e609291906118a4565b6020604051808303816000875af1158015610e7f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ea39190611905565b90508015610f37577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16632e1a7d4d836040518263ffffffff1660e01b8152600401610f049190610fd8565b600060405180830381600087803b158015610f1e57600080fd5b505af1158015610f32573d6000803e3d6000fd5b505050505b5050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b158015610fa357600080fd5b505af1158015610fb7573d6000803e3d6000fd5b505050505050565b6000819050919050565b610fd281610fbf565b82525050565b6000602082019050610fed6000830184610fc9565b92915050565b600082825260208201905092915050565b7f596f75206d7573742073656e6420736f6d6520746f6b656e732e2e2e00000000600082015250565b600061103a601c83610ff3565b915061104582611004565b602082019050919050565b600060208201905081810360008301526110698161102d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006110aa82610fbf565b91506110b583610fbf565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156110ea576110e9611070565b5b828201905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611120826110f5565b9050919050565b61113081611115565b82525050565b600060208201905061114b6000830184611127565b92915050565b6000604051905090565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6111ae82611165565b810181811067ffffffffffffffff821117156111cd576111cc611176565b5b80604052505050565b60006111e0611151565b90506111ec82826111a5565b919050565b6111fa81610fbf565b811461120557600080fd5b50565b600081519050611217816111f1565b92915050565b60006020828403121561123357611232611160565b5b61123d60206111d6565b9050600061124d84828501611208565b60008301525092915050565b60006fffffffffffffffffffffffffffffffff82169050919050565b61127e81611259565b811461128957600080fd5b50565b60008151905061129b81611275565b92915050565b600064ffffffffff82169050919050565b6112bb816112a1565b81146112c657600080fd5b50565b6000815190506112d8816112b2565b92915050565b6112e781611115565b81146112f257600080fd5b50565b600081519050611304816112de565b92915050565b600060ff82169050919050565b6113208161130a565b811461132b57600080fd5b50565b60008151905061133d81611317565b92915050565b6000610180828403121561135a57611359611160565b5b6113656101806111d6565b905060006113758482850161121d565b60008301525060206113898482850161128c565b602083015250604061139d8482850161128c565b60408301525060606113b18482850161128c565b60608301525060806113c58482850161128c565b60808301525060a06113d98482850161128c565b60a08301525060c06113ed848285016112c9565b60c08301525060e0611401848285016112f5565b60e083015250610100611416848285016112f5565b6101008301525061012061142c848285016112f5565b61012083015250610140611442848285016112f5565b610140830152506101606114588482850161132e565b6101608301525092915050565b6000610180828403121561147c5761147b61115b565b5b600061148a84828501611343565b91505092915050565b6000602082840312156114a9576114a861115b565b5b60006114b784828501611208565b91505092915050565b7f5573657220646f6e27742068617665206465706f736974656420455448000000600082015250565b60006114f6601d83610ff3565b9150611501826114c0565b602082019050919050565b60006020820190508181036000830152611525816114e9565b9050919050565b600061153782610fbf565b915061154283610fbf565b92508282101561155557611554611070565b5b828203905092915050565b600081905092915050565b50565b600061157b600083611560565b91506115868261156b565b600082019050919050565b600061159c8261156e565b9150819050919050565b7f5472616e73666572206661696c65642e00000000000000000000000000000000600082015250565b60006115dc601083610ff3565b91506115e7826115a6565b602082019050919050565b6000602082019050818103600083015261160b816115cf565b9050919050565b600061161d82610fbf565b915061162883610fbf565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561166157611660611070565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006116a682610fbf565b91506116b183610fbf565b9250826116c1576116c061166c565b5b828204905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600061170682610fbf565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361173857611737611070565b5b600182019050919050565b7f4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f60008201527f6e00000000000000000000000000000000000000000000000000000000000000602082015250565b600061179f602183610ff3565b91506117aa82611743565b604082019050919050565b600060208201905081810360008301526117ce81611792565b9050919050565b6000819050919050565b600061ffff82169050919050565b6000819050919050565b600061181261180d611808846117d5565b6117ed565b6117df565b9050919050565b611822816117f7565b82525050565b600060808201905061183d6000830187611127565b61184a6020830186610fc9565b6118576040830185611127565b6118646060830184611819565b95945050505050565b60006060820190506118826000830186611127565b61188f6020830185610fc9565b61189c6040830184611127565b949350505050565b60006040820190506118b96000830185611127565b6118c66020830184610fc9565b9392505050565b60008115159050919050565b6118e2816118cd565b81146118ed57600080fd5b50565b6000815190506118ff816118d9565b92915050565b60006020828403121561191b5761191a61115b565b5b6000611929848285016118f0565b9150509291505056fea264697066735822122079dd0c3a03bdec3f0b558a5f28007ce7f2632448d8d47535fe64ec3eea379ec064736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x59 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xE29DF22 EQ PUSH2 0x62 JUMPI DUP1 PUSH4 0x1D01364C EQ PUSH2 0x6C JUMPI DUP1 PUSH4 0x22E8C87D EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0xC3D40853 EQ PUSH2 0xC2 JUMPI DUP1 PUSH4 0xDB88031A EQ PUSH2 0xED JUMPI DUP1 PUSH4 0xE2EC0C2D EQ PUSH2 0xF7 JUMPI PUSH2 0x60 JUMP JUMPDEST CALLDATASIZE PUSH2 0x60 JUMPI STOP JUMPDEST STOP JUMPDEST PUSH2 0x6A PUSH2 0x101 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x78 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x81 PUSH2 0x31E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8E SWAP2 SWAP1 PUSH2 0xFD8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAC PUSH2 0x324 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB9 SWAP2 SWAP1 PUSH2 0xFD8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD7 PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE4 SWAP2 SWAP1 PUSH2 0xFD8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF5 PUSH2 0x4B3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xFF PUSH2 0xB04 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 CALLVALUE GT PUSH2 0x144 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13B SWAP1 PUSH2 0x1050 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x195 SWAP2 SWAP1 PUSH2 0x109F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 ISZERO ISZERO PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO SUB PUSH2 0x2FA JUMPI PUSH1 0x1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 CALLER SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x303 CALLVALUE PUSH2 0xC73 JUMP JUMPDEST CALLVALUE PUSH1 0x5 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x315 SWAP2 SWAP1 PUSH2 0x109F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x35EA6A75 PUSH32 0x0 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3EB SWAP2 SWAP1 PUSH2 0x1136 JUMP JUMPDEST PUSH2 0x180 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x409 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x42D SWAP2 SWAP1 PUSH2 0x1465 JUMP JUMPDEST PUSH1 0xE0 ADD MLOAD SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x46C SWAP2 SWAP1 PUSH2 0x1136 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x489 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4AD SWAP2 SWAP1 PUSH2 0x1493 JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x53C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x533 SWAP1 PUSH2 0x150C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP PUSH1 0x0 TIMESTAMP SWAP1 POP PUSH32 0x0 DUP3 PUSH2 0x5B3 SWAP2 SWAP1 PUSH2 0x109F JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x6D3 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x5 SLOAD PUSH2 0x60F SWAP2 SWAP1 PUSH2 0x152C JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH2 0x61E DUP4 PUSH2 0xD40 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x644 SWAP1 PUSH2 0x1591 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x681 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x686 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x6CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6C1 SWAP1 PUSH2 0x15F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP PUSH2 0xB02 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x64 DUP5 DUP5 PUSH2 0x704 SWAP2 SWAP1 PUSH2 0x152C JUMP JUMPDEST PUSH2 0x70E SWAP2 SWAP1 PUSH2 0x1612 JUMP JUMPDEST PUSH2 0x718 SWAP2 SWAP1 PUSH2 0x169B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x64 PUSH1 0x2 DUP4 PUSH1 0x64 PUSH2 0x72D SWAP2 SWAP1 PUSH2 0x152C JUMP JUMPDEST PUSH2 0x737 SWAP2 SWAP1 PUSH2 0x169B JUMP JUMPDEST DUP7 PUSH2 0x742 SWAP2 SWAP1 PUSH2 0x1612 JUMP JUMPDEST PUSH2 0x74C SWAP2 SWAP1 PUSH2 0x169B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x0 DUP7 PUSH1 0x5 SLOAD PUSH2 0x763 SWAP2 SWAP1 PUSH2 0x152C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x7E9 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x79F JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x985 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x817 JUMPI PUSH2 0x816 PUSH2 0x16CC JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x889 JUMPI PUSH2 0x888 PUSH2 0x16CC JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x8B5 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH2 0x971 JUMPI DUP6 PUSH2 0x2710 DUP3 PUSH2 0x8C9 SWAP2 SWAP1 PUSH2 0x1612 JUMP JUMPDEST PUSH2 0x8D3 SWAP2 SWAP1 PUSH2 0x169B JUMP JUMPDEST SWAP4 POP PUSH2 0x2710 DUP5 DUP10 PUSH2 0x8E4 SWAP2 SWAP1 PUSH2 0x1612 JUMP JUMPDEST PUSH2 0x8EE SWAP2 SWAP1 PUSH2 0x169B JUMP JUMPDEST SWAP3 POP DUP3 DUP8 PUSH2 0x8FC SWAP2 SWAP1 PUSH2 0x152C JUMP JUMPDEST SWAP7 POP DUP3 PUSH1 0x0 DUP1 DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x915 JUMPI PUSH2 0x914 PUSH2 0x16CC JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x969 SWAP2 SWAP1 PUSH2 0x109F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST POP DUP1 DUP1 PUSH2 0x97D SWAP1 PUSH2 0x16FB JUMP JUMPDEST SWAP2 POP POP PUSH2 0x7F6 JUMP JUMPDEST POP DUP5 DUP7 DUP12 PUSH2 0x993 SWAP2 SWAP1 PUSH2 0x152C JUMP JUMPDEST PUSH2 0x99D SWAP2 SWAP1 PUSH2 0x109F JUMP JUMPDEST SWAP10 POP DUP10 PUSH1 0x5 SLOAD PUSH2 0x9AD SWAP2 SWAP1 PUSH2 0x152C JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0xA03 DUP11 PUSH2 0xD40 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP12 PUSH1 0x40 MLOAD PUSH2 0xA29 SWAP1 PUSH2 0x1591 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xA66 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xA6B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xAAF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAA6 SWAP1 PUSH2 0x15F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP POP POP POP POP POP POP POP POP POP POP POP JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB94 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB8B SWAP1 PUSH2 0x17B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x5 SLOAD PUSH2 0xBA1 PUSH2 0x36D JUMP JUMPDEST PUSH2 0xBAB SWAP2 SWAP1 PUSH2 0x152C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0xBBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBC3 DUP2 PUSH2 0xD40 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0xBE9 SWAP1 PUSH2 0x1591 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xC26 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xC2B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xC6F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC66 SWAP1 PUSH2 0x15F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xC80 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC89 DUP2 PUSH2 0xF3B JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE8EDA9DF PUSH32 0x0 DUP4 ADDRESS PUSH1 0x0 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD0B SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1828 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD39 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x69328DEC PUSH32 0x0 DUP4 ADDRESS PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDBF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x186D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDDE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE02 SWAP2 SWAP1 PUSH2 0x1493 JUMP JUMPDEST POP PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 ADDRESS DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE60 SWAP3 SWAP2 SWAP1 PUSH2 0x18A4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE7F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEA3 SWAP2 SWAP1 PUSH2 0x1905 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0xF37 JUMPI PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x2E1A7D4D DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF04 SWAP2 SWAP1 PUSH2 0xFD8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF32 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD0E30DB0 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFB7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFD2 DUP2 PUSH2 0xFBF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFED PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xFC9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x596F75206D7573742073656E6420736F6D6520746F6B656E732E2E2E00000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x103A PUSH1 0x1C DUP4 PUSH2 0xFF3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1045 DUP3 PUSH2 0x1004 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1069 DUP2 PUSH2 0x102D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x10AA DUP3 PUSH2 0xFBF JUMP JUMPDEST SWAP2 POP PUSH2 0x10B5 DUP4 PUSH2 0xFBF JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x10EA JUMPI PUSH2 0x10E9 PUSH2 0x1070 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1120 DUP3 PUSH2 0x10F5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1130 DUP2 PUSH2 0x1115 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x114B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1127 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x11AE DUP3 PUSH2 0x1165 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x11CD JUMPI PUSH2 0x11CC PUSH2 0x1176 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11E0 PUSH2 0x1151 JUMP JUMPDEST SWAP1 POP PUSH2 0x11EC DUP3 DUP3 PUSH2 0x11A5 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11FA DUP2 PUSH2 0xFBF JUMP JUMPDEST DUP2 EQ PUSH2 0x1205 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1217 DUP2 PUSH2 0x11F1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1233 JUMPI PUSH2 0x1232 PUSH2 0x1160 JUMP JUMPDEST JUMPDEST PUSH2 0x123D PUSH1 0x20 PUSH2 0x11D6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x124D DUP5 DUP3 DUP6 ADD PUSH2 0x1208 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x127E DUP2 PUSH2 0x1259 JUMP JUMPDEST DUP2 EQ PUSH2 0x1289 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x129B DUP2 PUSH2 0x1275 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH5 0xFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12BB DUP2 PUSH2 0x12A1 JUMP JUMPDEST DUP2 EQ PUSH2 0x12C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x12D8 DUP2 PUSH2 0x12B2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x12E7 DUP2 PUSH2 0x1115 JUMP JUMPDEST DUP2 EQ PUSH2 0x12F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1304 DUP2 PUSH2 0x12DE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1320 DUP2 PUSH2 0x130A JUMP JUMPDEST DUP2 EQ PUSH2 0x132B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x133D DUP2 PUSH2 0x1317 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x180 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x135A JUMPI PUSH2 0x1359 PUSH2 0x1160 JUMP JUMPDEST JUMPDEST PUSH2 0x1365 PUSH2 0x180 PUSH2 0x11D6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1375 DUP5 DUP3 DUP6 ADD PUSH2 0x121D JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x1389 DUP5 DUP3 DUP6 ADD PUSH2 0x128C JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x139D DUP5 DUP3 DUP6 ADD PUSH2 0x128C JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 PUSH2 0x13B1 DUP5 DUP3 DUP6 ADD PUSH2 0x128C JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 PUSH2 0x13C5 DUP5 DUP3 DUP6 ADD PUSH2 0x128C JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP PUSH1 0xA0 PUSH2 0x13D9 DUP5 DUP3 DUP6 ADD PUSH2 0x128C JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MSTORE POP PUSH1 0xC0 PUSH2 0x13ED DUP5 DUP3 DUP6 ADD PUSH2 0x12C9 JUMP JUMPDEST PUSH1 0xC0 DUP4 ADD MSTORE POP PUSH1 0xE0 PUSH2 0x1401 DUP5 DUP3 DUP6 ADD PUSH2 0x12F5 JUMP JUMPDEST PUSH1 0xE0 DUP4 ADD MSTORE POP PUSH2 0x100 PUSH2 0x1416 DUP5 DUP3 DUP6 ADD PUSH2 0x12F5 JUMP JUMPDEST PUSH2 0x100 DUP4 ADD MSTORE POP PUSH2 0x120 PUSH2 0x142C DUP5 DUP3 DUP6 ADD PUSH2 0x12F5 JUMP JUMPDEST PUSH2 0x120 DUP4 ADD MSTORE POP PUSH2 0x140 PUSH2 0x1442 DUP5 DUP3 DUP6 ADD PUSH2 0x12F5 JUMP JUMPDEST PUSH2 0x140 DUP4 ADD MSTORE POP PUSH2 0x160 PUSH2 0x1458 DUP5 DUP3 DUP6 ADD PUSH2 0x132E JUMP JUMPDEST PUSH2 0x160 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x180 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x147C JUMPI PUSH2 0x147B PUSH2 0x115B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x148A DUP5 DUP3 DUP6 ADD PUSH2 0x1343 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14A9 JUMPI PUSH2 0x14A8 PUSH2 0x115B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x14B7 DUP5 DUP3 DUP6 ADD PUSH2 0x1208 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5573657220646F6E27742068617665206465706F736974656420455448000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14F6 PUSH1 0x1D DUP4 PUSH2 0xFF3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1501 DUP3 PUSH2 0x14C0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1525 DUP2 PUSH2 0x14E9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1537 DUP3 PUSH2 0xFBF JUMP JUMPDEST SWAP2 POP PUSH2 0x1542 DUP4 PUSH2 0xFBF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1555 JUMPI PUSH2 0x1554 PUSH2 0x1070 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x157B PUSH1 0x0 DUP4 PUSH2 0x1560 JUMP JUMPDEST SWAP2 POP PUSH2 0x1586 DUP3 PUSH2 0x156B JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x159C DUP3 PUSH2 0x156E JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5472616E73666572206661696C65642E00000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15DC PUSH1 0x10 DUP4 PUSH2 0xFF3 JUMP JUMPDEST SWAP2 POP PUSH2 0x15E7 DUP3 PUSH2 0x15A6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x160B DUP2 PUSH2 0x15CF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x161D DUP3 PUSH2 0xFBF JUMP JUMPDEST SWAP2 POP PUSH2 0x1628 DUP4 PUSH2 0xFBF JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1661 JUMPI PUSH2 0x1660 PUSH2 0x1070 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x16A6 DUP3 PUSH2 0xFBF JUMP JUMPDEST SWAP2 POP PUSH2 0x16B1 DUP4 PUSH2 0xFBF JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x16C1 JUMPI PUSH2 0x16C0 PUSH2 0x166C JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1706 DUP3 PUSH2 0xFBF JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1738 JUMPI PUSH2 0x1737 PUSH2 0x1070 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C79206F776E65722063616E2063616C6C20746869732066756E6374696F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x179F PUSH1 0x21 DUP4 PUSH2 0xFF3 JUMP JUMPDEST SWAP2 POP PUSH2 0x17AA DUP3 PUSH2 0x1743 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x17CE DUP2 PUSH2 0x1792 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1812 PUSH2 0x180D PUSH2 0x1808 DUP5 PUSH2 0x17D5 JUMP JUMPDEST PUSH2 0x17ED JUMP JUMPDEST PUSH2 0x17DF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1822 DUP2 PUSH2 0x17F7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x183D PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1127 JUMP JUMPDEST PUSH2 0x184A PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0xFC9 JUMP JUMPDEST PUSH2 0x1857 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1127 JUMP JUMPDEST PUSH2 0x1864 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1819 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1882 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1127 JUMP JUMPDEST PUSH2 0x188F PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xFC9 JUMP JUMPDEST PUSH2 0x189C PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1127 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x18B9 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1127 JUMP JUMPDEST PUSH2 0x18C6 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xFC9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18E2 DUP2 PUSH2 0x18CD JUMP JUMPDEST DUP2 EQ PUSH2 0x18ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x18FF DUP2 PUSH2 0x18D9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x191B JUMPI PUSH2 0x191A PUSH2 0x115B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1929 DUP5 DUP3 DUP6 ADD PUSH2 0x18F0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0xDD0C3A03BDEC3F0B558A5F28007CE7F2632448D8D47535FE64EC RETURNDATACOPY 0xEA CALLDATACOPY SWAP15 0xC0 PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ",
							"sourceMap": "606:6426:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1821:449;;;:::i;:::-;;1016:27;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1627:108;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6084:219;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2483:2754;;;:::i;:::-;;5371:321;;;:::i;:::-;;1821:449;1893:1;1881:9;:13;1873:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;1968:9;1938:8;:20;1947:10;1938:20;;;;;;;;;;;;;;;:26;;;:39;;;;;;;:::i;:::-;;;;;;;;2020:15;1988:8;:20;1997:10;1988:20;;;;;;;;;;;;;;;:29;;:47;;;;2078:5;2049:34;;:8;:20;2058:10;2049:20;;;;;;;;;;;;;;;:25;;;;;;;;;;;;:34;;;2046:148;;2137:4;2109:8;:20;2118:10;2109:20;;;;;;;;;;;;;;;:25;;;:32;;;;;;;;;;;;;;;;;;2156:9;2171:10;2156:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2046:148;2203:22;2215:9;2203:11;:22::i;:::-;2253:9;2235:15;;:27;;;;;;;:::i;:::-;;;;;;;;1821:449::o;1016:27::-;;;;:::o;1627:108::-;1670:6;1701:8;:20;1710:10;1701:20;;;;;;;;;;;;;;;:26;;;1694:33;;1627:108;:::o;6084:219::-;6142:6;6166:13;6190:12;;;;;;;;;;;:27;;;6226:4;6190:42;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:56;;;6166:81;;6265:5;:15;;;6289:4;6265:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6258:37;;;6084:219;:::o;2483:2754::-;2536:23;2562:8;:20;2571:10;2562:20;;;;;;;;;;;;;;;:26;;;2536:52;;2628:1;2607:18;:22;2599:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;2674:19;2696:8;:20;2705:10;2696:20;;;;;;;;;;;;;;;:29;;;2674:51;;2736:21;2760:15;2736:39;;2825:14;2808;:31;;;;:::i;:::-;2789:16;:50;2786:553;;;3063:1;3034:8;:20;3043:10;3034:20;;;;;;;;;;;;;;;:26;;:30;;;;3115:18;3097:15;;:36;;;;:::i;:::-;3079:15;:54;;;;3148:32;3161:18;3148:12;:32::i;:::-;3196:9;3211:10;:15;;3235:18;3211:47;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3195:63;;;3281:4;3273:33;;;;;;;;;;;;:::i;:::-;;;;;;;;;3321:7;;;;;;2786:553;3664:14;3722;3716:3;3700:14;3683:16;:31;;;;:::i;:::-;3682:37;;;;:::i;:::-;3681:56;;;;:::i;:::-;3664:73;;3777:14;3840:3;3835:1;3824:9;3818:3;:15;;;;:::i;:::-;3817:19;;;;:::i;:::-;3795:18;:42;;;;:::i;:::-;3794:49;;;;:::i;:::-;3777:66;;3877:6;3886:9;3877:18;;4018:10;4050:18;4031:15;;:37;;;;:::i;:::-;4018:50;;4142:29;4174:9;4142:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4194:9;4215:10;4241:6;4236:609;4257:10;:17;4253:1;:21;4236:609;;;4305:27;4335:8;:23;4344:10;4355:1;4344:13;;;;;;;;:::i;:::-;;;;;;;;4335:23;;;;;;;;;;;;;;;:29;;;4305:59;;4397:10;4382:25;;:10;4393:1;4382:13;;;;;;;;:::i;:::-;;;;;;;;:25;;;;:56;;;;;4437:1;4412:22;:26;4382:56;4379:455;;;4669:5;1076;4631:22;:34;;;;:::i;:::-;4630:44;;;;:::i;:::-;4623:51;;1076:5;4713:4;4703:9;:14;;;;:::i;:::-;4702:28;;;;:::i;:::-;4694:36;;4757:5;4753:1;:9;;;;:::i;:::-;4749:13;;4813:5;4781:8;:23;4790:10;4801:1;4790:13;;;;;;;;:::i;:::-;;;;;;;;4781:23;;;;;;;;;;;;;;;:29;;;:37;;;;;;;:::i;:::-;;;;;;;;4379:455;4290:555;4276:3;;;;;:::i;:::-;;;;4236:609;;;;4911:1;4899:9;4878:18;:30;;;;:::i;:::-;:34;;;;:::i;:::-;4857:55;;4960:18;4942:15;;:36;;;;:::i;:::-;4924:15;:54;;;;5018:1;4989:8;:20;4998:10;4989:20;;;;;;;;;;;;;;;:26;;:30;;;;5030:32;5043:18;5030:12;:32::i;:::-;5074:12;5092:10;:15;;5116:18;5092:47;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5073:66;;;5158:7;5150:36;;;;;;;;;;;;:::i;:::-;;;;;;;;;5226:1;5197:8;:20;5206:10;5197:20;;;;;;;;;;;;;;;:26;;:30;;;;2525:2712;;;;;;;;;;;2483:2754;:::o;5371:321::-;5758:7;;;;;;;;;;;5744:21;;:10;:21;;;5736:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;5443:11:::1;5488:15;;5457:28;:26;:28::i;:::-;:46;;;;:::i;:::-;5443:60;;5533:1;5524:6;:10;5516:19;;;::::0;::::1;;5548:20;5561:6;5548:12;:20::i;:::-;5582:12;5600:10;:15;;5624:6;5600:35;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5581:54;;;5656:7;5648:36;;;;;;;;;;;;:::i;:::-;;;;;;;;;5430:262;;5371:321::o:0;6782:169::-;6851:1;6845:3;:7;6837:16;;;;;;6862:15;6873:3;6862:10;:15::i;:::-;6886:12;;;;;;;;;;;:20;;;6915:4;6921:3;6934:4;6941:1;6886:57;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6782:169;:::o;6467:230::-;6527:12;;;;;;;;;;;:21;;;6557:4;6563:3;6576:4;6527:55;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6593:9;6605:4;:12;;;6626:4;6634:3;6605:33;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6593:45;;6652:4;6649:40;;;6671:4;:13;;;6685:3;6671:18;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6649:40;6516:181;6467:230;:::o;5900:91::-;5956:4;:12;;;5977:3;5956:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5900:91;:::o;7:77:8:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:169::-;526:11;560:6;555:3;548:19;600:4;595:3;591:14;576:29;;442:169;;;;:::o;617:178::-;757:30;753:1;745:6;741:14;734:54;617:178;:::o;801:366::-;943:3;964:67;1028:2;1023:3;964:67;:::i;:::-;957:74;;1040:93;1129:3;1040:93;:::i;:::-;1158:2;1153:3;1149:12;1142:19;;801:366;;;:::o;1173:419::-;1339:4;1377:2;1366:9;1362:18;1354:26;;1426:9;1420:4;1416:20;1412:1;1401:9;1397:17;1390:47;1454:131;1580:4;1454:131;:::i;:::-;1446:139;;1173:419;;;:::o;1598:180::-;1646:77;1643:1;1636:88;1743:4;1740:1;1733:15;1767:4;1764:1;1757:15;1784:305;1824:3;1843:20;1861:1;1843:20;:::i;:::-;1838:25;;1877:20;1895:1;1877:20;:::i;:::-;1872:25;;2031:1;1963:66;1959:74;1956:1;1953:81;1950:107;;;2037:18;;:::i;:::-;1950:107;2081:1;2078;2074:9;2067:16;;1784:305;;;;:::o;2095:126::-;2132:7;2172:42;2165:5;2161:54;2150:65;;2095:126;;;:::o;2227:96::-;2264:7;2293:24;2311:5;2293:24;:::i;:::-;2282:35;;2227:96;;;:::o;2329:118::-;2416:24;2434:5;2416:24;:::i;:::-;2411:3;2404:37;2329:118;;:::o;2453:222::-;2546:4;2584:2;2573:9;2569:18;2561:26;;2597:71;2665:1;2654:9;2650:17;2641:6;2597:71;:::i;:::-;2453:222;;;;:::o;2681:75::-;2714:6;2747:2;2741:9;2731:19;;2681:75;:::o;2762:117::-;2871:1;2868;2861:12;3008:117;3117:1;3114;3107:12;3131:102;3172:6;3223:2;3219:7;3214:2;3207:5;3203:14;3199:28;3189:38;;3131:102;;;:::o;3239:180::-;3287:77;3284:1;3277:88;3384:4;3381:1;3374:15;3408:4;3405:1;3398:15;3425:281;3508:27;3530:4;3508:27;:::i;:::-;3500:6;3496:40;3638:6;3626:10;3623:22;3602:18;3590:10;3587:34;3584:62;3581:88;;;3649:18;;:::i;:::-;3581:88;3689:10;3685:2;3678:22;3468:238;3425:281;;:::o;3712:129::-;3746:6;3773:20;;:::i;:::-;3763:30;;3802:33;3830:4;3822:6;3802:33;:::i;:::-;3712:129;;;:::o;3970:122::-;4043:24;4061:5;4043:24;:::i;:::-;4036:5;4033:35;4023:63;;4082:1;4079;4072:12;4023:63;3970:122;:::o;4098:143::-;4155:5;4186:6;4180:13;4171:22;;4202:33;4229:5;4202:33;:::i;:::-;4098:143;;;;:::o;4295:451::-;4396:5;4440:4;4428:9;4423:3;4419:19;4415:30;4412:117;;;4448:79;;:::i;:::-;4412:117;4547:21;4563:4;4547:21;:::i;:::-;4538:30;;4627:1;4667:60;4723:3;4714:6;4703:9;4699:22;4667:60;:::i;:::-;4660:4;4653:5;4649:16;4642:86;4578:161;4295:451;;;;:::o;4752:118::-;4789:7;4829:34;4822:5;4818:46;4807:57;;4752:118;;;:::o;4876:122::-;4949:24;4967:5;4949:24;:::i;:::-;4942:5;4939:35;4929:63;;4988:1;4985;4978:12;4929:63;4876:122;:::o;5004:143::-;5061:5;5092:6;5086:13;5077:22;;5108:33;5135:5;5108:33;:::i;:::-;5004:143;;;;:::o;5153:95::-;5189:7;5229:12;5222:5;5218:24;5207:35;;5153:95;;;:::o;5254:120::-;5326:23;5343:5;5326:23;:::i;:::-;5319:5;5316:34;5306:62;;5364:1;5361;5354:12;5306:62;5254:120;:::o;5380:141::-;5436:5;5467:6;5461:13;5452:22;;5483:32;5509:5;5483:32;:::i;:::-;5380:141;;;;:::o;5527:122::-;5600:24;5618:5;5600:24;:::i;:::-;5593:5;5590:35;5580:63;;5639:1;5636;5629:12;5580:63;5527:122;:::o;5655:143::-;5712:5;5743:6;5737:13;5728:22;;5759:33;5786:5;5759:33;:::i;:::-;5655:143;;;;:::o;5804:86::-;5839:7;5879:4;5872:5;5868:16;5857:27;;5804:86;;;:::o;5896:118::-;5967:22;5983:5;5967:22;:::i;:::-;5960:5;5957:33;5947:61;;6004:1;6001;5994:12;5947:61;5896:118;:::o;6020:139::-;6075:5;6106:6;6100:13;6091:22;;6122:31;6147:5;6122:31;:::i;:::-;6020:139;;;;:::o;6201:2562::-;6290:5;6334:6;6322:9;6317:3;6313:19;6309:32;6306:119;;;6344:79;;:::i;:::-;6306:119;6443:23;6459:6;6443:23;:::i;:::-;6434:32;;6534:1;6574:101;6671:3;6662:6;6651:9;6647:22;6574:101;:::i;:::-;6567:4;6560:5;6556:16;6549:127;6476:211;6756:2;6797:60;6853:3;6844:6;6833:9;6829:22;6797:60;:::i;:::-;6790:4;6783:5;6779:16;6772:86;6697:172;6943:2;6984:60;7040:3;7031:6;7020:9;7016:22;6984:60;:::i;:::-;6977:4;6970:5;6966:16;6959:86;6879:177;7131:2;7172:60;7228:3;7219:6;7208:9;7204:22;7172:60;:::i;:::-;7165:4;7158:5;7154:16;7147:86;7066:178;7324:3;7366:60;7422:3;7413:6;7402:9;7398:22;7366:60;:::i;:::-;7359:4;7352:5;7348:16;7341:86;7254:184;7516:3;7558:60;7614:3;7605:6;7594:9;7590:22;7558:60;:::i;:::-;7551:4;7544:5;7540:16;7533:86;7448:182;7704:3;7746:59;7801:3;7792:6;7781:9;7777:22;7746:59;:::i;:::-;7739:4;7732:5;7728:16;7721:85;7640:177;7885:3;7927:60;7983:3;7974:6;7963:9;7959:22;7927:60;:::i;:::-;7920:4;7913:5;7909:16;7902:86;7827:172;8076:3;8120:60;8176:3;8167:6;8156:9;8152:22;8120:60;:::i;:::-;8111:6;8104:5;8100:18;8093:88;8009:183;8271:3;8315:60;8371:3;8362:6;8351:9;8347:22;8315:60;:::i;:::-;8306:6;8299:5;8295:18;8288:88;8202:185;8469:3;8513:60;8569:3;8560:6;8549:9;8545:22;8513:60;:::i;:::-;8504:6;8497:5;8493:18;8486:88;8397:188;8642:3;8686:58;8740:3;8731:6;8720:9;8716:22;8686:58;:::i;:::-;8677:6;8670:5;8666:18;8659:86;8595:161;6201:2562;;;;:::o;8769:410::-;8868:6;8917:3;8905:9;8896:7;8892:23;8888:33;8885:120;;;8924:79;;:::i;:::-;8885:120;9044:1;9069:93;9154:7;9145:6;9134:9;9130:22;9069:93;:::i;:::-;9059:103;;9015:157;8769:410;;;;:::o;9185:351::-;9255:6;9304:2;9292:9;9283:7;9279:23;9275:32;9272:119;;;9310:79;;:::i;:::-;9272:119;9430:1;9455:64;9511:7;9502:6;9491:9;9487:22;9455:64;:::i;:::-;9445:74;;9401:128;9185:351;;;;:::o;9542:179::-;9682:31;9678:1;9670:6;9666:14;9659:55;9542:179;:::o;9727:366::-;9869:3;9890:67;9954:2;9949:3;9890:67;:::i;:::-;9883:74;;9966:93;10055:3;9966:93;:::i;:::-;10084:2;10079:3;10075:12;10068:19;;9727:366;;;:::o;10099:419::-;10265:4;10303:2;10292:9;10288:18;10280:26;;10352:9;10346:4;10342:20;10338:1;10327:9;10323:17;10316:47;10380:131;10506:4;10380:131;:::i;:::-;10372:139;;10099:419;;;:::o;10524:191::-;10564:4;10584:20;10602:1;10584:20;:::i;:::-;10579:25;;10618:20;10636:1;10618:20;:::i;:::-;10613:25;;10657:1;10654;10651:8;10648:34;;;10662:18;;:::i;:::-;10648:34;10707:1;10704;10700:9;10692:17;;10524:191;;;;:::o;10721:147::-;10822:11;10859:3;10844:18;;10721:147;;;;:::o;10874:114::-;;:::o;10994:398::-;11153:3;11174:83;11255:1;11250:3;11174:83;:::i;:::-;11167:90;;11266:93;11355:3;11266:93;:::i;:::-;11384:1;11379:3;11375:11;11368:18;;10994:398;;;:::o;11398:379::-;11582:3;11604:147;11747:3;11604:147;:::i;:::-;11597:154;;11768:3;11761:10;;11398:379;;;:::o;11783:166::-;11923:18;11919:1;11911:6;11907:14;11900:42;11783:166;:::o;11955:366::-;12097:3;12118:67;12182:2;12177:3;12118:67;:::i;:::-;12111:74;;12194:93;12283:3;12194:93;:::i;:::-;12312:2;12307:3;12303:12;12296:19;;11955:366;;;:::o;12327:419::-;12493:4;12531:2;12520:9;12516:18;12508:26;;12580:9;12574:4;12570:20;12566:1;12555:9;12551:17;12544:47;12608:131;12734:4;12608:131;:::i;:::-;12600:139;;12327:419;;;:::o;12752:348::-;12792:7;12815:20;12833:1;12815:20;:::i;:::-;12810:25;;12849:20;12867:1;12849:20;:::i;:::-;12844:25;;13037:1;12969:66;12965:74;12962:1;12959:81;12954:1;12947:9;12940:17;12936:105;12933:131;;;13044:18;;:::i;:::-;12933:131;13092:1;13089;13085:9;13074:20;;12752:348;;;;:::o;13106:180::-;13154:77;13151:1;13144:88;13251:4;13248:1;13241:15;13275:4;13272:1;13265:15;13292:185;13332:1;13349:20;13367:1;13349:20;:::i;:::-;13344:25;;13383:20;13401:1;13383:20;:::i;:::-;13378:25;;13422:1;13412:35;;13427:18;;:::i;:::-;13412:35;13469:1;13466;13462:9;13457:14;;13292:185;;;;:::o;13483:180::-;13531:77;13528:1;13521:88;13628:4;13625:1;13618:15;13652:4;13649:1;13642:15;13669:233;13708:3;13731:24;13749:5;13731:24;:::i;:::-;13722:33;;13777:66;13770:5;13767:77;13764:103;;13847:18;;:::i;:::-;13764:103;13894:1;13887:5;13883:13;13876:20;;13669:233;;;:::o;13908:220::-;14048:34;14044:1;14036:6;14032:14;14025:58;14117:3;14112:2;14104:6;14100:15;14093:28;13908:220;:::o;14134:366::-;14276:3;14297:67;14361:2;14356:3;14297:67;:::i;:::-;14290:74;;14373:93;14462:3;14373:93;:::i;:::-;14491:2;14486:3;14482:12;14475:19;;14134:366;;;:::o;14506:419::-;14672:4;14710:2;14699:9;14695:18;14687:26;;14759:9;14753:4;14749:20;14745:1;14734:9;14730:17;14723:47;14787:131;14913:4;14787:131;:::i;:::-;14779:139;;14506:419;;;:::o;14931:85::-;14976:7;15005:5;14994:16;;14931:85;;;:::o;15022:89::-;15058:7;15098:6;15091:5;15087:18;15076:29;;15022:89;;;:::o;15117:60::-;15145:3;15166:5;15159:12;;15117:60;;;:::o;15183:156::-;15240:9;15273:60;15290:42;15299:32;15325:5;15299:32;:::i;:::-;15290:42;:::i;:::-;15273:60;:::i;:::-;15260:73;;15183:156;;;:::o;15345:145::-;15439:44;15477:5;15439:44;:::i;:::-;15434:3;15427:57;15345:145;;:::o;15496:567::-;15680:4;15718:3;15707:9;15703:19;15695:27;;15732:71;15800:1;15789:9;15785:17;15776:6;15732:71;:::i;:::-;15813:72;15881:2;15870:9;15866:18;15857:6;15813:72;:::i;:::-;15895;15963:2;15952:9;15948:18;15939:6;15895:72;:::i;:::-;15977:79;16052:2;16041:9;16037:18;16028:6;15977:79;:::i;:::-;15496:567;;;;;;;:::o;16069:442::-;16218:4;16256:2;16245:9;16241:18;16233:26;;16269:71;16337:1;16326:9;16322:17;16313:6;16269:71;:::i;:::-;16350:72;16418:2;16407:9;16403:18;16394:6;16350:72;:::i;:::-;16432;16500:2;16489:9;16485:18;16476:6;16432:72;:::i;:::-;16069:442;;;;;;:::o;16517:332::-;16638:4;16676:2;16665:9;16661:18;16653:26;;16689:71;16757:1;16746:9;16742:17;16733:6;16689:71;:::i;:::-;16770:72;16838:2;16827:9;16823:18;16814:6;16770:72;:::i;:::-;16517:332;;;;;:::o;16855:90::-;16889:7;16932:5;16925:13;16918:21;16907:32;;16855:90;;;:::o;16951:116::-;17021:21;17036:5;17021:21;:::i;:::-;17014:5;17011:32;17001:60;;17057:1;17054;17047:12;17001:60;16951:116;:::o;17073:137::-;17127:5;17158:6;17152:13;17143:22;;17174:30;17198:5;17174:30;:::i;:::-;17073:137;;;;:::o;17216:345::-;17283:6;17332:2;17320:9;17311:7;17307:23;17303:32;17300:119;;;17338:79;;:::i;:::-;17300:119;17458:1;17483:61;17536:7;17527:6;17516:9;17512:22;17483:61;:::i;:::-;17473:71;;17429:125;17216:345;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1300800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "195",
								"depositedAmount()": "2429",
								"getCurrentBalanceOfATokens()": "infinite",
								"getMyEther()": "infinite",
								"getUserData()": "2554",
								"sendEther()": "infinite",
								"sendKajmakToOwner()": "infinite"
							},
							"internal": {
								"depositAave(uint256)": "infinite",
								"depositETH(uint256)": "infinite",
								"withdrawWETH(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 606,
									"end": 7032,
									"name": "PUSH",
									"source": 1,
									"value": "C0"
								},
								{
									"begin": 606,
									"end": 7032,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 606,
									"end": 7032,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1090,
									"end": 1530,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 1090,
									"end": 1530,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1090,
									"end": 1530,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1090,
									"end": 1530,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1090,
									"end": 1530,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1090,
									"end": 1530,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1090,
									"end": 1530,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1090,
									"end": 1530,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1090,
									"end": 1530,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1090,
									"end": 1530,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1090,
									"end": 1530,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1090,
									"end": 1530,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1090,
									"end": 1530,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1090,
									"end": 1530,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 1090,
									"end": 1530,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 1090,
									"end": 1530,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1090,
									"end": 1530,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1090,
									"end": 1530,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 1090,
									"end": 1530,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1090,
									"end": 1530,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 1090,
									"end": 1530,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1090,
									"end": 1530,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1090,
									"end": 1530,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1090,
									"end": 1530,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1090,
									"end": 1530,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1090,
									"end": 1530,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1090,
									"end": 1530,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1090,
									"end": 1530,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1090,
									"end": 1530,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1090,
									"end": 1530,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1090,
									"end": 1530,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1090,
									"end": 1530,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1090,
									"end": 1530,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1090,
									"end": 1530,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1090,
									"end": 1530,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1145,
									"end": 1155,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 1135,
									"end": 1142,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1135,
									"end": 1142,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1135,
									"end": 1155,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 1135,
									"end": 1155,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 1135,
									"end": 1155,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1135,
									"end": 1155,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1135,
									"end": 1155,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1135,
									"end": 1155,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1135,
									"end": 1155,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 1135,
									"end": 1155,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 1135,
									"end": 1155,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1135,
									"end": 1155,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1135,
									"end": 1155,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1135,
									"end": 1155,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1135,
									"end": 1155,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1135,
									"end": 1155,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 1135,
									"end": 1155,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 1135,
									"end": 1155,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1135,
									"end": 1155,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1135,
									"end": 1155,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1183,
									"end": 1191,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1166,
									"end": 1191,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 1166,
									"end": 1191,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1166,
									"end": 1191,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1166,
									"end": 1191,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1166,
									"end": 1191,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1166,
									"end": 1191,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1215,
									"end": 1257,
									"name": "PUSH",
									"source": 1,
									"value": "D0A1E359811322D97991E03F863A0C30C2CF029C"
								},
								{
									"begin": 1202,
									"end": 1258,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1202,
									"end": 1258,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1202,
									"end": 1258,
									"name": "PUSH",
									"source": 1,
									"value": "A0"
								},
								{
									"begin": 1202,
									"end": 1258,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1202,
									"end": 1258,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1202,
									"end": 1258,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1202,
									"end": 1258,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1202,
									"end": 1258,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1202,
									"end": 1258,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1202,
									"end": 1258,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1318,
									"end": 1360,
									"name": "PUSH",
									"source": 1,
									"value": "88757F2F99175387AB4C6A4B3067C77A695B0349"
								},
								{
									"begin": 1269,
									"end": 1277,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1269,
									"end": 1277,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1269,
									"end": 1362,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 1269,
									"end": 1362,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 1269,
									"end": 1362,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1269,
									"end": 1362,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1269,
									"end": 1362,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1269,
									"end": 1362,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1269,
									"end": 1362,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 1269,
									"end": 1362,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 1269,
									"end": 1362,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1269,
									"end": 1362,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1269,
									"end": 1362,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1269,
									"end": 1362,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1269,
									"end": 1362,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1269,
									"end": 1362,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 1269,
									"end": 1362,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 1269,
									"end": 1362,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1269,
									"end": 1362,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1269,
									"end": 1362,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 1409,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1401,
									"end": 1409,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1401,
									"end": 1409,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 1409,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 1409,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 1409,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 1401,
									"end": 1409,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 1409,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 1409,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 1409,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1401,
									"end": 1409,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 1424,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1401,
									"end": 1424,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 1424,
									"name": "PUSH",
									"source": 1,
									"value": "261BF8B"
								},
								{
									"begin": 1401,
									"end": 1426,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1401,
									"end": 1426,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 1426,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 1426,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFF"
								},
								{
									"begin": 1401,
									"end": 1426,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 1426,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 1401,
									"end": 1426,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 1426,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 1426,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 1426,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1401,
									"end": 1426,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 1426,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1401,
									"end": 1426,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1401,
									"end": 1426,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 1426,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 1426,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 1426,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 1426,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 1426,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 1426,
									"name": "GAS",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 1426,
									"name": "STATICCALL",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 1426,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 1426,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 1426,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 1426,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1401,
									"end": 1426,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 1426,
									"name": "RETURNDATASIZE",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 1426,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1401,
									"end": 1426,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 1426,
									"name": "RETURNDATACOPY",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 1426,
									"name": "RETURNDATASIZE",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 1426,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1401,
									"end": 1426,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 1426,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1401,
									"end": 1426,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 1426,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 1426,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 1426,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 1426,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 1426,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1401,
									"end": 1426,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 1426,
									"name": "RETURNDATASIZE",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 1426,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1401,
									"end": 1426,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 1426,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1401,
									"end": 1426,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 1426,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 1426,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 1426,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 1426,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 1426,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 1426,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1401,
									"end": 1426,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 1426,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 1426,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 1426,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 1426,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 1426,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1401,
									"end": 1426,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 1426,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 1426,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1401,
									"end": 1426,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 1426,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1401,
									"end": 1426,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1385,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1373,
									"end": 1385,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1373,
									"end": 1427,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 1373,
									"end": 1427,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1427,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1427,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1427,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1427,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1373,
									"end": 1427,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1427,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1427,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1427,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1427,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1427,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1373,
									"end": 1427,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1427,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1427,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1427,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1427,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1427,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1456,
									"end": 1457,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1438,
									"end": 1453,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1438,
									"end": 1457,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1438,
									"end": 1457,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1438,
									"end": 1457,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1438,
									"end": 1457,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1468,
									"end": 1472,
									"name": "PUSH",
									"source": 1,
									"value": "A0"
								},
								{
									"begin": 1468,
									"end": 1472,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1468,
									"end": 1480,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1468,
									"end": 1480,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1468,
									"end": 1480,
									"name": "PUSH",
									"source": 1,
									"value": "95EA7B3"
								},
								{
									"begin": 1489,
									"end": 1501,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1489,
									"end": 1501,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1489,
									"end": 1501,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1489,
									"end": 1501,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1489,
									"end": 1501,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1489,
									"end": 1501,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 1489,
									"end": 1501,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 1489,
									"end": 1501,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1489,
									"end": 1501,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 1489,
									"end": 1501,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1489,
									"end": 1501,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1504,
									"end": 1521,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1468,
									"end": 1522,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1468,
									"end": 1522,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1468,
									"end": 1522,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1468,
									"end": 1522,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFF"
								},
								{
									"begin": 1468,
									"end": 1522,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1468,
									"end": 1522,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 1468,
									"end": 1522,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1468,
									"end": 1522,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1468,
									"end": 1522,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1468,
									"end": 1522,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1468,
									"end": 1522,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1468,
									"end": 1522,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1468,
									"end": 1522,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1468,
									"end": 1522,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1468,
									"end": 1522,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1468,
									"end": 1522,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1468,
									"end": 1522,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1468,
									"end": 1522,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1468,
									"end": 1522,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1468,
									"end": 1522,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1468,
									"end": 1522,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1468,
									"end": 1522,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1468,
									"end": 1522,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1468,
									"end": 1522,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1468,
									"end": 1522,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1468,
									"end": 1522,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1468,
									"end": 1522,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1468,
									"end": 1522,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 1468,
									"end": 1522,
									"name": "GAS",
									"source": 1
								},
								{
									"begin": 1468,
									"end": 1522,
									"name": "CALL",
									"source": 1
								},
								{
									"begin": 1468,
									"end": 1522,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1468,
									"end": 1522,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1468,
									"end": 1522,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1468,
									"end": 1522,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1468,
									"end": 1522,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1468,
									"end": 1522,
									"name": "RETURNDATASIZE",
									"source": 1
								},
								{
									"begin": 1468,
									"end": 1522,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1468,
									"end": 1522,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1468,
									"end": 1522,
									"name": "RETURNDATACOPY",
									"source": 1
								},
								{
									"begin": 1468,
									"end": 1522,
									"name": "RETURNDATASIZE",
									"source": 1
								},
								{
									"begin": 1468,
									"end": 1522,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1468,
									"end": 1522,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1468,
									"end": 1522,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1468,
									"end": 1522,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1468,
									"end": 1522,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1468,
									"end": 1522,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1468,
									"end": 1522,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1468,
									"end": 1522,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1468,
									"end": 1522,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1468,
									"end": 1522,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1468,
									"end": 1522,
									"name": "RETURNDATASIZE",
									"source": 1
								},
								{
									"begin": 1468,
									"end": 1522,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1468,
									"end": 1522,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 1468,
									"end": 1522,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1468,
									"end": 1522,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1468,
									"end": 1522,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1468,
									"end": 1522,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1468,
									"end": 1522,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1468,
									"end": 1522,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1468,
									"end": 1522,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1468,
									"end": 1522,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1468,
									"end": 1522,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1468,
									"end": 1522,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1468,
									"end": 1522,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1468,
									"end": 1522,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1468,
									"end": 1522,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1468,
									"end": 1522,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 1468,
									"end": 1522,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1468,
									"end": 1522,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1468,
									"end": 1522,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 1468,
									"end": 1522,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1468,
									"end": 1522,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 1468,
									"end": 1522,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1468,
									"end": 1522,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1090,
									"end": 1530,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 606,
									"end": 7032,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 606,
									"end": 7032,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 8,
									"value": "18"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 334,
									"end": 411,
									"name": "tag",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 334,
									"end": 411,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 400,
									"end": 405,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 389,
									"end": 405,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 389,
									"end": 405,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 334,
									"end": 411,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 334,
									"end": 411,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 417,
									"end": 539,
									"name": "tag",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 417,
									"end": 539,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 508,
									"end": 513,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 490,
									"end": 514,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 490,
									"end": 514,
									"name": "tag",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 490,
									"end": 514,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 483,
									"end": 488,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 480,
									"end": 515,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 470,
									"end": 533,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 529,
									"end": 530,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 526,
									"end": 527,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 519,
									"end": 531,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 470,
									"end": 533,
									"name": "tag",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 417,
									"end": 539,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 417,
									"end": 539,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 545,
									"end": 688,
									"name": "tag",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 545,
									"end": 688,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 602,
									"end": 607,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 633,
									"end": 639,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 627,
									"end": 640,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 618,
									"end": 640,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 618,
									"end": 640,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 676,
									"end": 681,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 649,
									"end": 682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 649,
									"end": 682,
									"name": "tag",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 649,
									"end": 682,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 545,
									"end": 688,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "tag",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 764,
									"end": 770,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 813,
									"end": 815,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 801,
									"end": 810,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 792,
									"end": 799,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 788,
									"end": 811,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 784,
									"end": 816,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 781,
									"end": 900,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 781,
									"end": 900,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 781,
									"end": 900,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 819,
									"end": 898,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 819,
									"end": 898,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "18"
								},
								{
									"begin": 819,
									"end": 898,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 819,
									"end": 898,
									"name": "tag",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 819,
									"end": 898,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 781,
									"end": 900,
									"name": "tag",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 781,
									"end": 900,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 939,
									"end": 940,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 1020,
									"end": 1027,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1011,
									"end": 1017,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1000,
									"end": 1009,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 996,
									"end": 1018,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 964,
									"end": 1028,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "tag",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 954,
									"end": 1028,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 954,
									"end": 1028,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 910,
									"end": 1038,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 694,
									"end": 1045,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1051,
									"end": 1177,
									"name": "tag",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 1051,
									"end": 1177,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1088,
									"end": 1095,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1128,
									"end": 1170,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1121,
									"end": 1126,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1117,
									"end": 1171,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1106,
									"end": 1171,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1106,
									"end": 1171,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1051,
									"end": 1177,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1051,
									"end": 1177,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1051,
									"end": 1177,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1051,
									"end": 1177,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1183,
									"end": 1279,
									"name": "tag",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 1183,
									"end": 1279,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1220,
									"end": 1227,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1249,
									"end": 1273,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "48"
								},
								{
									"begin": 1267,
									"end": 1272,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1249,
									"end": 1273,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 1249,
									"end": 1273,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1249,
									"end": 1273,
									"name": "tag",
									"source": 8,
									"value": "48"
								},
								{
									"begin": 1249,
									"end": 1273,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1238,
									"end": 1273,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1238,
									"end": 1273,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1183,
									"end": 1279,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1183,
									"end": 1279,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1183,
									"end": 1279,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1183,
									"end": 1279,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1285,
									"end": 1407,
									"name": "tag",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 1285,
									"end": 1407,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1358,
									"end": 1382,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "50"
								},
								{
									"begin": 1376,
									"end": 1381,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1358,
									"end": 1382,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 1358,
									"end": 1382,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1358,
									"end": 1382,
									"name": "tag",
									"source": 8,
									"value": "50"
								},
								{
									"begin": 1358,
									"end": 1382,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1351,
									"end": 1356,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1348,
									"end": 1383,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 1338,
									"end": 1401,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "51"
								},
								{
									"begin": 1338,
									"end": 1401,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1397,
									"end": 1398,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1394,
									"end": 1395,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1387,
									"end": 1399,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1338,
									"end": 1401,
									"name": "tag",
									"source": 8,
									"value": "51"
								},
								{
									"begin": 1338,
									"end": 1401,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1285,
									"end": 1407,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1285,
									"end": 1407,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1413,
									"end": 1556,
									"name": "tag",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 1413,
									"end": 1556,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1470,
									"end": 1475,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1501,
									"end": 1507,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1495,
									"end": 1508,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1486,
									"end": 1508,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1486,
									"end": 1508,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1517,
									"end": 1550,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "53"
								},
								{
									"begin": 1544,
									"end": 1549,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1517,
									"end": 1550,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 1517,
									"end": 1550,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1517,
									"end": 1550,
									"name": "tag",
									"source": 8,
									"value": "53"
								},
								{
									"begin": 1517,
									"end": 1550,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1413,
									"end": 1556,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1413,
									"end": 1556,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1413,
									"end": 1556,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1413,
									"end": 1556,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1413,
									"end": 1556,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1562,
									"end": 1913,
									"name": "tag",
									"source": 8,
									"value": "9"
								},
								{
									"begin": 1562,
									"end": 1913,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1632,
									"end": 1638,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1681,
									"end": 1683,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1669,
									"end": 1678,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1660,
									"end": 1667,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1656,
									"end": 1679,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 1652,
									"end": 1684,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 1649,
									"end": 1768,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1649,
									"end": 1768,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "55"
								},
								{
									"begin": 1649,
									"end": 1768,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1687,
									"end": 1766,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "56"
								},
								{
									"begin": 1687,
									"end": 1766,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "18"
								},
								{
									"begin": 1687,
									"end": 1766,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1687,
									"end": 1766,
									"name": "tag",
									"source": 8,
									"value": "56"
								},
								{
									"begin": 1687,
									"end": 1766,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1649,
									"end": 1768,
									"name": "tag",
									"source": 8,
									"value": "55"
								},
								{
									"begin": 1649,
									"end": 1768,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1807,
									"end": 1808,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1832,
									"end": 1896,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "57"
								},
								{
									"begin": 1888,
									"end": 1895,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1879,
									"end": 1885,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1868,
									"end": 1877,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1864,
									"end": 1886,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1832,
									"end": 1896,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 1832,
									"end": 1896,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1832,
									"end": 1896,
									"name": "tag",
									"source": 8,
									"value": "57"
								},
								{
									"begin": 1832,
									"end": 1896,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1822,
									"end": 1896,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1822,
									"end": 1896,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1778,
									"end": 1906,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1562,
									"end": 1913,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1562,
									"end": 1913,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1562,
									"end": 1913,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1562,
									"end": 1913,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1562,
									"end": 1913,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1919,
									"end": 2037,
									"name": "tag",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 1919,
									"end": 2037,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2006,
									"end": 2030,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "59"
								},
								{
									"begin": 2024,
									"end": 2029,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2006,
									"end": 2030,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 2006,
									"end": 2030,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2006,
									"end": 2030,
									"name": "tag",
									"source": 8,
									"value": "59"
								},
								{
									"begin": 2006,
									"end": 2030,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2001,
									"end": 2004,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1994,
									"end": 2031,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1919,
									"end": 2037,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1919,
									"end": 2037,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1919,
									"end": 2037,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2043,
									"end": 2161,
									"name": "tag",
									"source": 8,
									"value": "28"
								},
								{
									"begin": 2043,
									"end": 2161,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2130,
									"end": 2154,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "61"
								},
								{
									"begin": 2148,
									"end": 2153,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2130,
									"end": 2154,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2130,
									"end": 2154,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2130,
									"end": 2154,
									"name": "tag",
									"source": 8,
									"value": "61"
								},
								{
									"begin": 2130,
									"end": 2154,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2125,
									"end": 2128,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2118,
									"end": 2155,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2043,
									"end": 2161,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2043,
									"end": 2161,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2043,
									"end": 2161,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2167,
									"end": 2499,
									"name": "tag",
									"source": 8,
									"value": "11"
								},
								{
									"begin": 2167,
									"end": 2499,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2288,
									"end": 2292,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2326,
									"end": 2328,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 2315,
									"end": 2324,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2311,
									"end": 2329,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2303,
									"end": 2329,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2303,
									"end": 2329,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2339,
									"end": 2410,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "63"
								},
								{
									"begin": 2407,
									"end": 2408,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2396,
									"end": 2405,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2392,
									"end": 2409,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2383,
									"end": 2389,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 2339,
									"end": 2410,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 2339,
									"end": 2410,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2339,
									"end": 2410,
									"name": "tag",
									"source": 8,
									"value": "63"
								},
								{
									"begin": 2339,
									"end": 2410,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2420,
									"end": 2492,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 2488,
									"end": 2490,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2477,
									"end": 2486,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2473,
									"end": 2491,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2464,
									"end": 2470,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2420,
									"end": 2492,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "28"
								},
								{
									"begin": 2420,
									"end": 2492,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2420,
									"end": 2492,
									"name": "tag",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 2420,
									"end": 2492,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2167,
									"end": 2499,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 2167,
									"end": 2499,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 2167,
									"end": 2499,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2167,
									"end": 2499,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2167,
									"end": 2499,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2167,
									"end": 2499,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2505,
									"end": 2595,
									"name": "tag",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 2505,
									"end": 2595,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2539,
									"end": 2546,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2582,
									"end": 2587,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2575,
									"end": 2588,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2568,
									"end": 2589,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2557,
									"end": 2589,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2557,
									"end": 2589,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2505,
									"end": 2595,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2505,
									"end": 2595,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2505,
									"end": 2595,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2505,
									"end": 2595,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2601,
									"end": 2717,
									"name": "tag",
									"source": 8,
									"value": "30"
								},
								{
									"begin": 2601,
									"end": 2717,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2671,
									"end": 2692,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "67"
								},
								{
									"begin": 2686,
									"end": 2691,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2671,
									"end": 2692,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 2671,
									"end": 2692,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2671,
									"end": 2692,
									"name": "tag",
									"source": 8,
									"value": "67"
								},
								{
									"begin": 2671,
									"end": 2692,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2664,
									"end": 2669,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2661,
									"end": 2693,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 2651,
									"end": 2711,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "68"
								},
								{
									"begin": 2651,
									"end": 2711,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2707,
									"end": 2708,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2704,
									"end": 2705,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2697,
									"end": 2709,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 2651,
									"end": 2711,
									"name": "tag",
									"source": 8,
									"value": "68"
								},
								{
									"begin": 2651,
									"end": 2711,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2601,
									"end": 2717,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2601,
									"end": 2717,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2723,
									"end": 2860,
									"name": "tag",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 2723,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2777,
									"end": 2782,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2808,
									"end": 2814,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2802,
									"end": 2815,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 2793,
									"end": 2815,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2793,
									"end": 2815,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2824,
									"end": 2854,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "70"
								},
								{
									"begin": 2848,
									"end": 2853,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2824,
									"end": 2854,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "30"
								},
								{
									"begin": 2824,
									"end": 2854,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2824,
									"end": 2854,
									"name": "tag",
									"source": 8,
									"value": "70"
								},
								{
									"begin": 2824,
									"end": 2854,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2723,
									"end": 2860,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 2723,
									"end": 2860,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2723,
									"end": 2860,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2723,
									"end": 2860,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2723,
									"end": 2860,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2866,
									"end": 3211,
									"name": "tag",
									"source": 8,
									"value": "15"
								},
								{
									"begin": 2866,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2933,
									"end": 2939,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2982,
									"end": 2984,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2970,
									"end": 2979,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2961,
									"end": 2968,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2957,
									"end": 2980,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 2953,
									"end": 2985,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 2950,
									"end": 3069,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2950,
									"end": 3069,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "72"
								},
								{
									"begin": 2950,
									"end": 3069,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2988,
									"end": 3067,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 2988,
									"end": 3067,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "18"
								},
								{
									"begin": 2988,
									"end": 3067,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2988,
									"end": 3067,
									"name": "tag",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 2988,
									"end": 3067,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2950,
									"end": 3069,
									"name": "tag",
									"source": 8,
									"value": "72"
								},
								{
									"begin": 2950,
									"end": 3069,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3108,
									"end": 3109,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3133,
									"end": 3194,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "74"
								},
								{
									"begin": 3186,
									"end": 3193,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3177,
									"end": 3183,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3166,
									"end": 3175,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 3162,
									"end": 3184,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3133,
									"end": 3194,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 3133,
									"end": 3194,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3133,
									"end": 3194,
									"name": "tag",
									"source": 8,
									"value": "74"
								},
								{
									"begin": 3133,
									"end": 3194,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3123,
									"end": 3194,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3123,
									"end": 3194,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3079,
									"end": 3204,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2866,
									"end": 3211,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 2866,
									"end": 3211,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2866,
									"end": 3211,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2866,
									"end": 3211,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2866,
									"end": 3211,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 606,
									"end": 7032,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 606,
									"end": 7032,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 606,
									"end": 7032,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 606,
									"end": 7032,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 606,
									"end": 7032,
									"name": "PUSH",
									"source": 1,
									"value": "A0"
								},
								{
									"begin": 606,
									"end": 7032,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 606,
									"end": 7032,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 606,
									"end": 7032,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 606,
									"end": 7032,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 606,
									"end": 7032,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 606,
									"end": 7032,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 606,
									"end": 7032,
									"name": "ASSIGNIMMUTABLE",
									"source": 1,
									"value": "71"
								},
								{
									"begin": 606,
									"end": 7032,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 606,
									"end": 7032,
									"name": "ASSIGNIMMUTABLE",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 606,
									"end": 7032,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 606,
									"end": 7032,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 606,
									"end": 7032,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122079dd0c3a03bdec3f0b558a5f28007ce7f2632448d8d47535fe64ec3eea379ec064736f6c634300080f0033",
									".code": [
										{
											"begin": 606,
											"end": 7032,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 606,
											"end": 7032,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 606,
											"end": 7032,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 606,
											"end": 7032,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 606,
											"end": 7032,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 606,
											"end": 7032,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 606,
											"end": 7032,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 606,
											"end": 7032,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 606,
											"end": 7032,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 606,
											"end": 7032,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 606,
											"end": 7032,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 606,
											"end": 7032,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 606,
											"end": 7032,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 606,
											"end": 7032,
											"name": "PUSH",
											"source": 1,
											"value": "E29DF22"
										},
										{
											"begin": 606,
											"end": 7032,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 606,
											"end": 7032,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 606,
											"end": 7032,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 606,
											"end": 7032,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 606,
											"end": 7032,
											"name": "PUSH",
											"source": 1,
											"value": "1D01364C"
										},
										{
											"begin": 606,
											"end": 7032,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 606,
											"end": 7032,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 606,
											"end": 7032,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 606,
											"end": 7032,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 606,
											"end": 7032,
											"name": "PUSH",
											"source": 1,
											"value": "22E8C87D"
										},
										{
											"begin": 606,
											"end": 7032,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 606,
											"end": 7032,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 606,
											"end": 7032,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 606,
											"end": 7032,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 606,
											"end": 7032,
											"name": "PUSH",
											"source": 1,
											"value": "C3D40853"
										},
										{
											"begin": 606,
											"end": 7032,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 606,
											"end": 7032,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 606,
											"end": 7032,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 606,
											"end": 7032,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 606,
											"end": 7032,
											"name": "PUSH",
											"source": 1,
											"value": "DB88031A"
										},
										{
											"begin": 606,
											"end": 7032,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 606,
											"end": 7032,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 606,
											"end": 7032,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 606,
											"end": 7032,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 606,
											"end": 7032,
											"name": "PUSH",
											"source": 1,
											"value": "E2EC0C2D"
										},
										{
											"begin": 606,
											"end": 7032,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 606,
											"end": 7032,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 606,
											"end": 7032,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 606,
											"end": 7032,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 606,
											"end": 7032,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 606,
											"end": 7032,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 606,
											"end": 7032,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 606,
											"end": 7032,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 606,
											"end": 7032,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 606,
											"end": 7032,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 606,
											"end": 7032,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 606,
											"end": 7032,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 606,
											"end": 7032,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 606,
											"end": 7032,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1821,
											"end": 2270,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1821,
											"end": 2270,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1821,
											"end": 2270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1821,
											"end": 2270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1821,
											"end": 2270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1821,
											"end": 2270,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1821,
											"end": 2270,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1821,
											"end": 2270,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1043,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1016,
											"end": 1043,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1043,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1043,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1043,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1043,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1016,
											"end": 1043,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1043,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1043,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1043,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1043,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1016,
											"end": 1043,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1043,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1043,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1016,
											"end": 1043,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1016,
											"end": 1043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1043,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1016,
											"end": 1043,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1043,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1016,
											"end": 1043,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1043,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1016,
											"end": 1043,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1043,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1043,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1016,
											"end": 1043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1043,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1016,
											"end": 1043,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1043,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1016,
											"end": 1043,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1043,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1043,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1043,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1043,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1043,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1627,
											"end": 1735,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1627,
											"end": 1735,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1627,
											"end": 1735,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1627,
											"end": 1735,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1627,
											"end": 1735,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1627,
											"end": 1735,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1627,
											"end": 1735,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1627,
											"end": 1735,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1627,
											"end": 1735,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1627,
											"end": 1735,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1627,
											"end": 1735,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1627,
											"end": 1735,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1627,
											"end": 1735,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1627,
											"end": 1735,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1627,
											"end": 1735,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1627,
											"end": 1735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1627,
											"end": 1735,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1627,
											"end": 1735,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1627,
											"end": 1735,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1627,
											"end": 1735,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1627,
											"end": 1735,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1627,
											"end": 1735,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1627,
											"end": 1735,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1627,
											"end": 1735,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1627,
											"end": 1735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1627,
											"end": 1735,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1627,
											"end": 1735,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1627,
											"end": 1735,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1627,
											"end": 1735,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1627,
											"end": 1735,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1627,
											"end": 1735,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1627,
											"end": 1735,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1627,
											"end": 1735,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1627,
											"end": 1735,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 6084,
											"end": 6303,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 6084,
											"end": 6303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6084,
											"end": 6303,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 6084,
											"end": 6303,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6084,
											"end": 6303,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6084,
											"end": 6303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6084,
											"end": 6303,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6084,
											"end": 6303,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6084,
											"end": 6303,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6084,
											"end": 6303,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6084,
											"end": 6303,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6084,
											"end": 6303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6084,
											"end": 6303,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6084,
											"end": 6303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 6084,
											"end": 6303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 6084,
											"end": 6303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6084,
											"end": 6303,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 6084,
											"end": 6303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6084,
											"end": 6303,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6084,
											"end": 6303,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6084,
											"end": 6303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 6084,
											"end": 6303,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6084,
											"end": 6303,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6084,
											"end": 6303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 6084,
											"end": 6303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6084,
											"end": 6303,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 6084,
											"end": 6303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6084,
											"end": 6303,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6084,
											"end": 6303,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6084,
											"end": 6303,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6084,
											"end": 6303,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6084,
											"end": 6303,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6084,
											"end": 6303,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6084,
											"end": 6303,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 5237,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 2483,
											"end": 5237,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 5237,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 2483,
											"end": 5237,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2483,
											"end": 5237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 5237,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 2483,
											"end": 5237,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 5237,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 5371,
											"end": 5692,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5371,
											"end": 5692,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5371,
											"end": 5692,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 5371,
											"end": 5692,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 5371,
											"end": 5692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5371,
											"end": 5692,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 5371,
											"end": 5692,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5371,
											"end": 5692,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1821,
											"end": 2270,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1821,
											"end": 2270,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1893,
											"end": 1894,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1881,
											"end": 1890,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1881,
											"end": 1894,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1873,
											"end": 1927,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1873,
											"end": 1927,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1873,
											"end": 1927,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1873,
											"end": 1927,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1873,
											"end": 1927,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1873,
											"end": 1927,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1873,
											"end": 1927,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1873,
											"end": 1927,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1873,
											"end": 1927,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1873,
											"end": 1927,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1873,
											"end": 1927,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1873,
											"end": 1927,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1873,
											"end": 1927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1873,
											"end": 1927,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1873,
											"end": 1927,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1873,
											"end": 1927,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1873,
											"end": 1927,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1873,
											"end": 1927,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1873,
											"end": 1927,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1873,
											"end": 1927,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1873,
											"end": 1927,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1873,
											"end": 1927,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1873,
											"end": 1927,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1873,
											"end": 1927,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1968,
											"end": 1977,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1938,
											"end": 1946,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1938,
											"end": 1958,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1947,
											"end": 1957,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1938,
											"end": 1958,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1938,
											"end": 1958,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1938,
											"end": 1958,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1938,
											"end": 1958,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1938,
											"end": 1958,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1938,
											"end": 1958,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1938,
											"end": 1958,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1938,
											"end": 1958,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1938,
											"end": 1958,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1938,
											"end": 1958,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1938,
											"end": 1958,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1938,
											"end": 1958,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1938,
											"end": 1958,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1938,
											"end": 1958,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1938,
											"end": 1958,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1938,
											"end": 1964,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1938,
											"end": 1964,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1938,
											"end": 1964,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1938,
											"end": 1977,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1938,
											"end": 1977,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1938,
											"end": 1977,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1938,
											"end": 1977,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1938,
											"end": 1977,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1938,
											"end": 1977,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1938,
											"end": 1977,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1938,
											"end": 1977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1938,
											"end": 1977,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1938,
											"end": 1977,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1938,
											"end": 1977,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1938,
											"end": 1977,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1938,
											"end": 1977,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1938,
											"end": 1977,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1938,
											"end": 1977,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1938,
											"end": 1977,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1938,
											"end": 1977,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2035,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 1988,
											"end": 1996,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1988,
											"end": 2008,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1997,
											"end": 2007,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1988,
											"end": 2008,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1988,
											"end": 2008,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1988,
											"end": 2008,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1988,
											"end": 2008,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1988,
											"end": 2008,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1988,
											"end": 2008,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1988,
											"end": 2008,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1988,
											"end": 2008,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1988,
											"end": 2008,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1988,
											"end": 2008,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1988,
											"end": 2008,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1988,
											"end": 2008,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1988,
											"end": 2008,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1988,
											"end": 2008,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1988,
											"end": 2008,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1988,
											"end": 2017,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1988,
											"end": 2017,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1988,
											"end": 2035,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1988,
											"end": 2035,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1988,
											"end": 2035,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1988,
											"end": 2035,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2078,
											"end": 2083,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2049,
											"end": 2083,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2049,
											"end": 2083,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2049,
											"end": 2057,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2049,
											"end": 2069,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2058,
											"end": 2068,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 2049,
											"end": 2069,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2049,
											"end": 2069,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2049,
											"end": 2069,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2049,
											"end": 2069,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2049,
											"end": 2069,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2049,
											"end": 2069,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2049,
											"end": 2069,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2049,
											"end": 2069,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2049,
											"end": 2069,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2049,
											"end": 2069,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2049,
											"end": 2069,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2049,
											"end": 2069,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2049,
											"end": 2069,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2049,
											"end": 2069,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2049,
											"end": 2069,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2049,
											"end": 2074,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2049,
											"end": 2074,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2049,
											"end": 2074,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2049,
											"end": 2074,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2049,
											"end": 2074,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2049,
											"end": 2074,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2049,
											"end": 2074,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2049,
											"end": 2074,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2049,
											"end": 2074,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2049,
											"end": 2074,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2049,
											"end": 2074,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 2049,
											"end": 2074,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2049,
											"end": 2083,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2049,
											"end": 2083,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2049,
											"end": 2083,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2046,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2046,
											"end": 2194,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2137,
											"end": 2141,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2109,
											"end": 2117,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2109,
											"end": 2129,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2128,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2129,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2109,
											"end": 2129,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2129,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2109,
											"end": 2129,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2129,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2129,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2129,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2109,
											"end": 2129,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2129,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2129,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2129,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2129,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2109,
											"end": 2129,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2129,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2109,
											"end": 2129,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2134,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2109,
											"end": 2134,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2134,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2109,
											"end": 2141,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2109,
											"end": 2141,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2141,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2141,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2141,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2141,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 2109,
											"end": 2141,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2141,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2141,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2141,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2141,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2141,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2141,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2141,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2141,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2141,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2141,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2141,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2165,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2171,
											"end": 2181,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2182,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2156,
											"end": 2182,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2182,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2182,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2182,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2182,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2182,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2182,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2182,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2182,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2156,
											"end": 2182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2182,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2182,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2156,
											"end": 2182,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2182,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2156,
											"end": 2182,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2156,
											"end": 2182,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2182,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2182,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2156,
											"end": 2182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2182,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2182,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2182,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2182,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2156,
											"end": 2182,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2182,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2182,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2182,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2182,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2156,
											"end": 2182,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2182,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2182,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2182,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2182,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2156,
											"end": 2182,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2182,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2182,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2182,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2182,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2046,
											"end": 2194,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2046,
											"end": 2194,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2203,
											"end": 2225,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2215,
											"end": 2224,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2203,
											"end": 2214,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2203,
											"end": 2225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2203,
											"end": 2225,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2203,
											"end": 2225,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2253,
											"end": 2262,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2250,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2235,
											"end": 2250,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2235,
											"end": 2262,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2262,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2262,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2262,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 2235,
											"end": 2262,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2262,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2262,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 2235,
											"end": 2262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2262,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 2235,
											"end": 2262,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2262,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2262,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2262,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2262,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2262,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2262,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2262,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1821,
											"end": 2270,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1043,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1016,
											"end": 1043,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1043,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1016,
											"end": 1043,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1043,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1043,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1627,
											"end": 1735,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1627,
											"end": 1735,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1670,
											"end": 1676,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1701,
											"end": 1709,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1701,
											"end": 1721,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1720,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1701,
											"end": 1721,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1701,
											"end": 1721,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1701,
											"end": 1721,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1701,
											"end": 1721,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1701,
											"end": 1721,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1701,
											"end": 1721,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1701,
											"end": 1721,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1701,
											"end": 1721,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1701,
											"end": 1721,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1701,
											"end": 1721,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1701,
											"end": 1721,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1701,
											"end": 1721,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1701,
											"end": 1721,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1701,
											"end": 1721,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1701,
											"end": 1721,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1701,
											"end": 1727,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1701,
											"end": 1727,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1701,
											"end": 1727,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1694,
											"end": 1727,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1694,
											"end": 1727,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1627,
											"end": 1735,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1627,
											"end": 1735,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6084,
											"end": 6303,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 6084,
											"end": 6303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6142,
											"end": 6148,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6166,
											"end": 6179,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6190,
											"end": 6202,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6190,
											"end": 6202,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6190,
											"end": 6202,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6190,
											"end": 6202,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6190,
											"end": 6202,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6190,
											"end": 6202,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 6190,
											"end": 6202,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 6190,
											"end": 6202,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6190,
											"end": 6202,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 6190,
											"end": 6202,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6190,
											"end": 6202,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6190,
											"end": 6217,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6190,
											"end": 6217,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6190,
											"end": 6217,
											"name": "PUSH",
											"source": 1,
											"value": "35EA6A75"
										},
										{
											"begin": 6226,
											"end": 6230,
											"name": "PUSHIMMUTABLE",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 6190,
											"end": 6232,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6190,
											"end": 6232,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6190,
											"end": 6232,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6190,
											"end": 6232,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6190,
											"end": 6232,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6190,
											"end": 6232,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 6190,
											"end": 6232,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 6190,
											"end": 6232,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6190,
											"end": 6232,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6190,
											"end": 6232,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6190,
											"end": 6232,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6190,
											"end": 6232,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 6190,
											"end": 6232,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6190,
											"end": 6232,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6190,
											"end": 6232,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 6190,
											"end": 6232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6190,
											"end": 6232,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 6190,
											"end": 6232,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6190,
											"end": 6232,
											"name": "PUSH",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 6190,
											"end": 6232,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6190,
											"end": 6232,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6190,
											"end": 6232,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6190,
											"end": 6232,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6190,
											"end": 6232,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6190,
											"end": 6232,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6190,
											"end": 6232,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6190,
											"end": 6232,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 6190,
											"end": 6232,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 6190,
											"end": 6232,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6190,
											"end": 6232,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6190,
											"end": 6232,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6190,
											"end": 6232,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 6190,
											"end": 6232,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6190,
											"end": 6232,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 6190,
											"end": 6232,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6190,
											"end": 6232,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6190,
											"end": 6232,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 6190,
											"end": 6232,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 6190,
											"end": 6232,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6190,
											"end": 6232,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6190,
											"end": 6232,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 6190,
											"end": 6232,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6190,
											"end": 6232,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6190,
											"end": 6232,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6190,
											"end": 6232,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6190,
											"end": 6232,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6190,
											"end": 6232,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6190,
											"end": 6232,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6190,
											"end": 6232,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 6190,
											"end": 6232,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 6190,
											"end": 6232,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 6190,
											"end": 6232,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 6190,
											"end": 6232,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6190,
											"end": 6232,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6190,
											"end": 6232,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6190,
											"end": 6232,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6190,
											"end": 6232,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6190,
											"end": 6232,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6190,
											"end": 6232,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6190,
											"end": 6232,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6190,
											"end": 6232,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6190,
											"end": 6232,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6190,
											"end": 6232,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6190,
											"end": 6232,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6190,
											"end": 6232,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 6190,
											"end": 6232,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6190,
											"end": 6232,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6190,
											"end": 6232,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 6190,
											"end": 6232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6190,
											"end": 6232,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 6190,
											"end": 6232,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6190,
											"end": 6246,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 6190,
											"end": 6246,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6190,
											"end": 6246,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6166,
											"end": 6247,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6166,
											"end": 6247,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6265,
											"end": 6270,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6265,
											"end": 6280,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6265,
											"end": 6280,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6265,
											"end": 6280,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 6289,
											"end": 6293,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 6265,
											"end": 6295,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6265,
											"end": 6295,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6265,
											"end": 6295,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6265,
											"end": 6295,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6265,
											"end": 6295,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6265,
											"end": 6295,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 6265,
											"end": 6295,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 6265,
											"end": 6295,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6265,
											"end": 6295,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6265,
											"end": 6295,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6265,
											"end": 6295,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6265,
											"end": 6295,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 6265,
											"end": 6295,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6265,
											"end": 6295,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6265,
											"end": 6295,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 6265,
											"end": 6295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6265,
											"end": 6295,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 6265,
											"end": 6295,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6265,
											"end": 6295,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6265,
											"end": 6295,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6265,
											"end": 6295,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6265,
											"end": 6295,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6265,
											"end": 6295,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6265,
											"end": 6295,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6265,
											"end": 6295,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6265,
											"end": 6295,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6265,
											"end": 6295,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 6265,
											"end": 6295,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 6265,
											"end": 6295,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6265,
											"end": 6295,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6265,
											"end": 6295,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6265,
											"end": 6295,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 6265,
											"end": 6295,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6265,
											"end": 6295,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 6265,
											"end": 6295,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6265,
											"end": 6295,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6265,
											"end": 6295,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 6265,
											"end": 6295,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 6265,
											"end": 6295,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6265,
											"end": 6295,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6265,
											"end": 6295,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 6265,
											"end": 6295,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6265,
											"end": 6295,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6265,
											"end": 6295,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6265,
											"end": 6295,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6265,
											"end": 6295,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6265,
											"end": 6295,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6265,
											"end": 6295,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6265,
											"end": 6295,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 6265,
											"end": 6295,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 6265,
											"end": 6295,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 6265,
											"end": 6295,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 6265,
											"end": 6295,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6265,
											"end": 6295,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6265,
											"end": 6295,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6265,
											"end": 6295,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6265,
											"end": 6295,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6265,
											"end": 6295,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6265,
											"end": 6295,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6265,
											"end": 6295,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6265,
											"end": 6295,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6265,
											"end": 6295,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6265,
											"end": 6295,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6265,
											"end": 6295,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6265,
											"end": 6295,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 6265,
											"end": 6295,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6265,
											"end": 6295,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6265,
											"end": 6295,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 6265,
											"end": 6295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6265,
											"end": 6295,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 6265,
											"end": 6295,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6258,
											"end": 6295,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6258,
											"end": 6295,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6258,
											"end": 6295,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6084,
											"end": 6303,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6084,
											"end": 6303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 5237,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2483,
											"end": 5237,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 2559,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2562,
											"end": 2570,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2562,
											"end": 2582,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2571,
											"end": 2581,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 2562,
											"end": 2582,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2562,
											"end": 2582,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2562,
											"end": 2582,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2562,
											"end": 2582,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2562,
											"end": 2582,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2562,
											"end": 2582,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2562,
											"end": 2582,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2562,
											"end": 2582,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2562,
											"end": 2582,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2562,
											"end": 2582,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2562,
											"end": 2582,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2562,
											"end": 2582,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2562,
											"end": 2582,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2562,
											"end": 2582,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2562,
											"end": 2582,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2562,
											"end": 2588,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2562,
											"end": 2588,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2562,
											"end": 2588,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 2588,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 2588,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2628,
											"end": 2629,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2607,
											"end": 2625,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2607,
											"end": 2629,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2599,
											"end": 2663,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 2599,
											"end": 2663,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2599,
											"end": 2663,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2599,
											"end": 2663,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2599,
											"end": 2663,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2599,
											"end": 2663,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2599,
											"end": 2663,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2599,
											"end": 2663,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2599,
											"end": 2663,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2599,
											"end": 2663,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 2599,
											"end": 2663,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2599,
											"end": 2663,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 2599,
											"end": 2663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2599,
											"end": 2663,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 2599,
											"end": 2663,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2599,
											"end": 2663,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2599,
											"end": 2663,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2599,
											"end": 2663,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2599,
											"end": 2663,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2599,
											"end": 2663,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2599,
											"end": 2663,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2599,
											"end": 2663,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2599,
											"end": 2663,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 2599,
											"end": 2663,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2674,
											"end": 2693,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2696,
											"end": 2704,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2696,
											"end": 2716,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2705,
											"end": 2715,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 2696,
											"end": 2716,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2696,
											"end": 2716,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2696,
											"end": 2716,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2696,
											"end": 2716,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2696,
											"end": 2716,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2696,
											"end": 2716,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2696,
											"end": 2716,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2696,
											"end": 2716,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2696,
											"end": 2716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2696,
											"end": 2716,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2696,
											"end": 2716,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2696,
											"end": 2716,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2696,
											"end": 2716,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2696,
											"end": 2716,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2696,
											"end": 2716,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2696,
											"end": 2725,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2696,
											"end": 2725,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2696,
											"end": 2725,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2674,
											"end": 2725,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2674,
											"end": 2725,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2736,
											"end": 2757,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2760,
											"end": 2775,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 2736,
											"end": 2775,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2736,
											"end": 2775,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2825,
											"end": 2839,
											"name": "PUSHIMMUTABLE",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2808,
											"end": 2822,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2808,
											"end": 2839,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2808,
											"end": 2839,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2808,
											"end": 2839,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2808,
											"end": 2839,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 2808,
											"end": 2839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2808,
											"end": 2839,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2808,
											"end": 2839,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2789,
											"end": 2805,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2789,
											"end": 2839,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2786,
											"end": 3339,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2786,
											"end": 3339,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 2786,
											"end": 3339,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3063,
											"end": 3064,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3034,
											"end": 3042,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3034,
											"end": 3054,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3043,
											"end": 3053,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 3034,
											"end": 3054,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3034,
											"end": 3054,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3034,
											"end": 3054,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3034,
											"end": 3054,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3034,
											"end": 3054,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3034,
											"end": 3054,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3034,
											"end": 3054,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3034,
											"end": 3054,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3034,
											"end": 3054,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3034,
											"end": 3054,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3034,
											"end": 3054,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3034,
											"end": 3054,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3034,
											"end": 3054,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3034,
											"end": 3054,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3034,
											"end": 3054,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3034,
											"end": 3060,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3034,
											"end": 3060,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3034,
											"end": 3064,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3034,
											"end": 3064,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3034,
											"end": 3064,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3034,
											"end": 3064,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3115,
											"end": 3133,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3097,
											"end": 3112,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3097,
											"end": 3112,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3097,
											"end": 3133,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 3097,
											"end": 3133,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3097,
											"end": 3133,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3097,
											"end": 3133,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 3097,
											"end": 3133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3097,
											"end": 3133,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 3097,
											"end": 3133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3094,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3079,
											"end": 3133,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3133,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3133,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3133,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3148,
											"end": 3180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3161,
											"end": 3179,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3148,
											"end": 3160,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 3148,
											"end": 3180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3148,
											"end": 3180,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3148,
											"end": 3180,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3196,
											"end": 3205,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3211,
											"end": 3221,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 3211,
											"end": 3226,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3211,
											"end": 3226,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3235,
											"end": 3253,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3211,
											"end": 3258,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3211,
											"end": 3258,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3211,
											"end": 3258,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 3211,
											"end": 3258,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3211,
											"end": 3258,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 3211,
											"end": 3258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3211,
											"end": 3258,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 3211,
											"end": 3258,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3211,
											"end": 3258,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3211,
											"end": 3258,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3211,
											"end": 3258,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3211,
											"end": 3258,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3211,
											"end": 3258,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3211,
											"end": 3258,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3211,
											"end": 3258,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3211,
											"end": 3258,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3211,
											"end": 3258,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 3211,
											"end": 3258,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 3211,
											"end": 3258,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 3211,
											"end": 3258,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3211,
											"end": 3258,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3211,
											"end": 3258,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3211,
											"end": 3258,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3211,
											"end": 3258,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3211,
											"end": 3258,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3211,
											"end": 3258,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3211,
											"end": 3258,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3211,
											"end": 3258,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3211,
											"end": 3258,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 3211,
											"end": 3258,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3211,
											"end": 3258,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3211,
											"end": 3258,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3211,
											"end": 3258,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3211,
											"end": 3258,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3211,
											"end": 3258,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3211,
											"end": 3258,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 3211,
											"end": 3258,
											"name": "PUSH",
											"source": 1,
											"value": "3F"
										},
										{
											"begin": 3211,
											"end": 3258,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3211,
											"end": 3258,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3211,
											"end": 3258,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3211,
											"end": 3258,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3211,
											"end": 3258,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3211,
											"end": 3258,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3211,
											"end": 3258,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3211,
											"end": 3258,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3211,
											"end": 3258,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3211,
											"end": 3258,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3211,
											"end": 3258,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3211,
											"end": 3258,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3211,
											"end": 3258,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3211,
											"end": 3258,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3211,
											"end": 3258,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3211,
											"end": 3258,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 3211,
											"end": 3258,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 3211,
											"end": 3258,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3211,
											"end": 3258,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 3211,
											"end": 3258,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3211,
											"end": 3258,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3211,
											"end": 3258,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3211,
											"end": 3258,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3211,
											"end": 3258,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 3211,
											"end": 3258,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3211,
											"end": 3258,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3195,
											"end": 3258,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3195,
											"end": 3258,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3195,
											"end": 3258,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3281,
											"end": 3285,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3273,
											"end": 3306,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 3273,
											"end": 3306,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3273,
											"end": 3306,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3273,
											"end": 3306,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3273,
											"end": 3306,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3273,
											"end": 3306,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3273,
											"end": 3306,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3273,
											"end": 3306,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3273,
											"end": 3306,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3273,
											"end": 3306,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 3273,
											"end": 3306,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3273,
											"end": 3306,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 3273,
											"end": 3306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3273,
											"end": 3306,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 3273,
											"end": 3306,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3273,
											"end": 3306,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3273,
											"end": 3306,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3273,
											"end": 3306,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3273,
											"end": 3306,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3273,
											"end": 3306,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3273,
											"end": 3306,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3273,
											"end": 3306,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3273,
											"end": 3306,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 3273,
											"end": 3306,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3321,
											"end": 3328,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3321,
											"end": 3328,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3321,
											"end": 3328,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3321,
											"end": 3328,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3321,
											"end": 3328,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3321,
											"end": 3328,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2786,
											"end": 3339,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 2786,
											"end": 3339,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3664,
											"end": 3678,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3722,
											"end": 3736,
											"name": "PUSHIMMUTABLE",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 3716,
											"end": 3719,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3700,
											"end": 3714,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3683,
											"end": 3699,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3683,
											"end": 3714,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 3683,
											"end": 3714,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3683,
											"end": 3714,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3683,
											"end": 3714,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 3683,
											"end": 3714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3683,
											"end": 3714,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 3683,
											"end": 3714,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3682,
											"end": 3719,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 3682,
											"end": 3719,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3682,
											"end": 3719,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3682,
											"end": 3719,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 3682,
											"end": 3719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3682,
											"end": 3719,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 3682,
											"end": 3719,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3681,
											"end": 3737,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 3681,
											"end": 3737,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3681,
											"end": 3737,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3681,
											"end": 3737,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 3681,
											"end": 3737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3681,
											"end": 3737,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 3681,
											"end": 3737,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3664,
											"end": 3737,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3664,
											"end": 3737,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3777,
											"end": 3791,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3840,
											"end": 3843,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3835,
											"end": 3836,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3824,
											"end": 3833,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3821,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3818,
											"end": 3833,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 3818,
											"end": 3833,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3833,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3833,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 3818,
											"end": 3833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3833,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 3818,
											"end": 3833,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3817,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 3817,
											"end": 3836,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3817,
											"end": 3836,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3817,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 3817,
											"end": 3836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3817,
											"end": 3836,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 3817,
											"end": 3836,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3795,
											"end": 3813,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3795,
											"end": 3837,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 3795,
											"end": 3837,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3795,
											"end": 3837,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3795,
											"end": 3837,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 3795,
											"end": 3837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3795,
											"end": 3837,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 3795,
											"end": 3837,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3794,
											"end": 3843,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 3794,
											"end": 3843,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3794,
											"end": 3843,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3794,
											"end": 3843,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 3794,
											"end": 3843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3794,
											"end": 3843,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 3794,
											"end": 3843,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3777,
											"end": 3843,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3777,
											"end": 3843,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3877,
											"end": 3883,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3886,
											"end": 3895,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3877,
											"end": 3895,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3877,
											"end": 3895,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4018,
											"end": 4028,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4050,
											"end": 4068,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4031,
											"end": 4046,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 4031,
											"end": 4046,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4031,
											"end": 4068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 4031,
											"end": 4068,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4031,
											"end": 4068,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4031,
											"end": 4068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 4031,
											"end": 4068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4031,
											"end": 4068,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 4031,
											"end": 4068,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4018,
											"end": 4068,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4018,
											"end": 4068,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4171,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4174,
											"end": 4183,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4142,
											"end": 4183,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4183,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4183,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4183,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4142,
											"end": 4183,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4183,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4142,
											"end": 4183,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4183,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4142,
											"end": 4183,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4183,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4183,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4183,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4183,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4142,
											"end": 4183,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4183,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4183,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4183,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4183,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4183,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4183,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4183,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4183,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4142,
											"end": 4183,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4183,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4183,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4183,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4183,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4183,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4183,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4142,
											"end": 4183,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4183,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4142,
											"end": 4183,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4183,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4183,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4183,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4183,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4183,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4142,
											"end": 4183,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4183,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4142,
											"end": 4183,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4142,
											"end": 4183,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4183,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4183,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 4142,
											"end": 4183,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4183,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4183,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4142,
											"end": 4183,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4183,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4183,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4183,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4142,
											"end": 4183,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4183,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4183,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4183,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4142,
											"end": 4183,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4183,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4142,
											"end": 4183,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4183,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4183,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4183,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4142,
											"end": 4183,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4183,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4183,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4142,
											"end": 4183,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4183,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4183,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4183,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4183,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4183,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 4142,
											"end": 4183,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4183,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4142,
											"end": 4183,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4183,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4183,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4183,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4183,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4183,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4183,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4183,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4194,
											"end": 4203,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4215,
											"end": 4225,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4241,
											"end": 4247,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4236,
											"end": 4845,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 4236,
											"end": 4845,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4257,
											"end": 4267,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4257,
											"end": 4274,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4253,
											"end": 4254,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4253,
											"end": 4274,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4236,
											"end": 4845,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4236,
											"end": 4845,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 4236,
											"end": 4845,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4305,
											"end": 4332,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4335,
											"end": 4343,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4335,
											"end": 4358,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4344,
											"end": 4354,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4355,
											"end": 4356,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4344,
											"end": 4357,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4344,
											"end": 4357,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4344,
											"end": 4357,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4344,
											"end": 4357,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4344,
											"end": 4357,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 4344,
											"end": 4357,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4344,
											"end": 4357,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 4344,
											"end": 4357,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 4344,
											"end": 4357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4344,
											"end": 4357,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 4344,
											"end": 4357,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4344,
											"end": 4357,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 4344,
											"end": 4357,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4344,
											"end": 4357,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4344,
											"end": 4357,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4344,
											"end": 4357,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4344,
											"end": 4357,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4344,
											"end": 4357,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4344,
											"end": 4357,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4335,
											"end": 4358,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4335,
											"end": 4358,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4335,
											"end": 4358,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4335,
											"end": 4358,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4335,
											"end": 4358,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4335,
											"end": 4358,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4335,
											"end": 4358,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4335,
											"end": 4358,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4335,
											"end": 4358,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4335,
											"end": 4358,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4335,
											"end": 4358,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4335,
											"end": 4358,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4335,
											"end": 4358,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4335,
											"end": 4358,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4335,
											"end": 4358,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4335,
											"end": 4364,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4335,
											"end": 4364,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4335,
											"end": 4364,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4305,
											"end": 4364,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4305,
											"end": 4364,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4397,
											"end": 4407,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 4382,
											"end": 4407,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4382,
											"end": 4407,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4382,
											"end": 4392,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4393,
											"end": 4394,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4382,
											"end": 4395,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4382,
											"end": 4395,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4382,
											"end": 4395,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4382,
											"end": 4395,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4382,
											"end": 4395,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 4382,
											"end": 4395,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4382,
											"end": 4395,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 4382,
											"end": 4395,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 4382,
											"end": 4395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4382,
											"end": 4395,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 4382,
											"end": 4395,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4382,
											"end": 4395,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 4382,
											"end": 4395,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4382,
											"end": 4395,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4382,
											"end": 4395,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4382,
											"end": 4395,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4382,
											"end": 4395,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4382,
											"end": 4395,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4382,
											"end": 4395,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4382,
											"end": 4407,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4382,
											"end": 4407,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4382,
											"end": 4407,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4382,
											"end": 4407,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4382,
											"end": 4438,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4382,
											"end": 4438,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4382,
											"end": 4438,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 4382,
											"end": 4438,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4382,
											"end": 4438,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4437,
											"end": 4438,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4412,
											"end": 4434,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4412,
											"end": 4438,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4382,
											"end": 4438,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 4382,
											"end": 4438,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4379,
											"end": 4834,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4379,
											"end": 4834,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 4379,
											"end": 4834,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4669,
											"end": 4674,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1076,
											"end": 1081,
											"name": "PUSH",
											"source": 1,
											"value": "2710"
										},
										{
											"begin": 4631,
											"end": 4653,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4631,
											"end": 4665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 4631,
											"end": 4665,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4631,
											"end": 4665,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4631,
											"end": 4665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 4631,
											"end": 4665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4631,
											"end": 4665,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 4631,
											"end": 4665,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4630,
											"end": 4674,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 4630,
											"end": 4674,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4630,
											"end": 4674,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4630,
											"end": 4674,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 4630,
											"end": 4674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4630,
											"end": 4674,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 4630,
											"end": 4674,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4674,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4674,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1076,
											"end": 1081,
											"name": "PUSH",
											"source": 1,
											"value": "2710"
										},
										{
											"begin": 4713,
											"end": 4717,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4703,
											"end": 4712,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 4703,
											"end": 4717,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 4703,
											"end": 4717,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4703,
											"end": 4717,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4703,
											"end": 4717,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 4703,
											"end": 4717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4703,
											"end": 4717,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 4703,
											"end": 4717,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4702,
											"end": 4730,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 4702,
											"end": 4730,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4702,
											"end": 4730,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4702,
											"end": 4730,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 4702,
											"end": 4730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4702,
											"end": 4730,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 4702,
											"end": 4730,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4694,
											"end": 4730,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4694,
											"end": 4730,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 4762,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4753,
											"end": 4754,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4753,
											"end": 4762,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4753,
											"end": 4762,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4753,
											"end": 4762,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4753,
											"end": 4762,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 4753,
											"end": 4762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4753,
											"end": 4762,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4753,
											"end": 4762,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4749,
											"end": 4762,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 4749,
											"end": 4762,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4813,
											"end": 4818,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4781,
											"end": 4789,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4781,
											"end": 4804,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4800,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4801,
											"end": 4802,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4803,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4803,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4803,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4803,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4803,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 4790,
											"end": 4803,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4803,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 4790,
											"end": 4803,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 4790,
											"end": 4803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4803,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 4790,
											"end": 4803,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4803,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 4790,
											"end": 4803,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4803,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4790,
											"end": 4803,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4803,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4790,
											"end": 4803,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4803,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4803,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4781,
											"end": 4804,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4781,
											"end": 4804,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4781,
											"end": 4804,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4781,
											"end": 4804,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4781,
											"end": 4804,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4781,
											"end": 4804,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4781,
											"end": 4804,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4781,
											"end": 4804,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4781,
											"end": 4804,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4781,
											"end": 4804,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4781,
											"end": 4804,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4781,
											"end": 4804,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4781,
											"end": 4804,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4781,
											"end": 4804,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4781,
											"end": 4804,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4781,
											"end": 4810,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4781,
											"end": 4810,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4781,
											"end": 4810,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4781,
											"end": 4818,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4781,
											"end": 4818,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4781,
											"end": 4818,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4781,
											"end": 4818,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 4781,
											"end": 4818,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4781,
											"end": 4818,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4781,
											"end": 4818,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 4781,
											"end": 4818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4781,
											"end": 4818,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 4781,
											"end": 4818,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4781,
											"end": 4818,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4781,
											"end": 4818,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4781,
											"end": 4818,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4781,
											"end": 4818,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4781,
											"end": 4818,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4781,
											"end": 4818,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4781,
											"end": 4818,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4379,
											"end": 4834,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 4379,
											"end": 4834,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4290,
											"end": 4845,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4279,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4279,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4279,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 4276,
											"end": 4279,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4279,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 4276,
											"end": 4279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4279,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 4276,
											"end": 4279,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4279,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4279,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4279,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4236,
											"end": 4845,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 4236,
											"end": 4845,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4236,
											"end": 4845,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 4236,
											"end": 4845,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4236,
											"end": 4845,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4911,
											"end": 4912,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4899,
											"end": 4908,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4878,
											"end": 4896,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 4878,
											"end": 4908,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 4878,
											"end": 4908,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4878,
											"end": 4908,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4878,
											"end": 4908,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 4878,
											"end": 4908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4878,
											"end": 4908,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 4878,
											"end": 4908,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4878,
											"end": 4912,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 4878,
											"end": 4912,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4878,
											"end": 4912,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4878,
											"end": 4912,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 4878,
											"end": 4912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4878,
											"end": 4912,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 4878,
											"end": 4912,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4857,
											"end": 4912,
											"name": "SWAP10",
											"source": 1
										},
										{
											"begin": 4857,
											"end": 4912,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4960,
											"end": 4978,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 4942,
											"end": 4957,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 4942,
											"end": 4957,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4942,
											"end": 4978,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 4942,
											"end": 4978,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4942,
											"end": 4978,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4942,
											"end": 4978,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 4942,
											"end": 4978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4942,
											"end": 4978,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 4942,
											"end": 4978,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4924,
											"end": 4939,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 4924,
											"end": 4978,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4924,
											"end": 4978,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4924,
											"end": 4978,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4924,
											"end": 4978,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5018,
											"end": 5019,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4989,
											"end": 4997,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4989,
											"end": 5009,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4998,
											"end": 5008,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 4989,
											"end": 5009,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4989,
											"end": 5009,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4989,
											"end": 5009,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4989,
											"end": 5009,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4989,
											"end": 5009,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4989,
											"end": 5009,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4989,
											"end": 5009,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4989,
											"end": 5009,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4989,
											"end": 5009,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4989,
											"end": 5009,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4989,
											"end": 5009,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4989,
											"end": 5009,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4989,
											"end": 5009,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4989,
											"end": 5009,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4989,
											"end": 5009,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4989,
											"end": 5015,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4989,
											"end": 5015,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4989,
											"end": 5019,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4989,
											"end": 5019,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4989,
											"end": 5019,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4989,
											"end": 5019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5062,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 5043,
											"end": 5061,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 5030,
											"end": 5062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5062,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 5030,
											"end": 5062,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5074,
											"end": 5086,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5092,
											"end": 5102,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5107,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5092,
											"end": 5107,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5116,
											"end": 5134,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5139,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5092,
											"end": 5139,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5139,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 5092,
											"end": 5139,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5139,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 5092,
											"end": 5139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5139,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 5092,
											"end": 5139,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5139,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5092,
											"end": 5139,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5092,
											"end": 5139,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5139,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5139,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5139,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5139,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5139,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5139,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5139,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5139,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5139,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5139,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5139,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5139,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5139,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5139,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5139,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5092,
											"end": 5139,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5139,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5139,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 5092,
											"end": 5139,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5139,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5092,
											"end": 5139,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5139,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5139,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5139,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 5092,
											"end": 5139,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5139,
											"name": "PUSH",
											"source": 1,
											"value": "3F"
										},
										{
											"begin": 5092,
											"end": 5139,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5139,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5139,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5139,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5139,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5139,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5092,
											"end": 5139,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5139,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5139,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5139,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5139,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5139,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5092,
											"end": 5139,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5092,
											"end": 5139,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5139,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5139,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5139,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 5092,
											"end": 5139,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5139,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 5092,
											"end": 5139,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5139,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5092,
											"end": 5139,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5139,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5139,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 5092,
											"end": 5139,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5139,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5073,
											"end": 5139,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5073,
											"end": 5139,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5073,
											"end": 5139,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5158,
											"end": 5165,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5150,
											"end": 5186,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 5150,
											"end": 5186,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5150,
											"end": 5186,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5150,
											"end": 5186,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5150,
											"end": 5186,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5150,
											"end": 5186,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5150,
											"end": 5186,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5150,
											"end": 5186,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5150,
											"end": 5186,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5150,
											"end": 5186,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 5150,
											"end": 5186,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5150,
											"end": 5186,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 5150,
											"end": 5186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5150,
											"end": 5186,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 5150,
											"end": 5186,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5150,
											"end": 5186,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5150,
											"end": 5186,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5150,
											"end": 5186,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5150,
											"end": 5186,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5150,
											"end": 5186,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5150,
											"end": 5186,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5150,
											"end": 5186,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5150,
											"end": 5186,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 5150,
											"end": 5186,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5226,
											"end": 5227,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5197,
											"end": 5205,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5197,
											"end": 5217,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5206,
											"end": 5216,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 5197,
											"end": 5217,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5197,
											"end": 5217,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5197,
											"end": 5217,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5197,
											"end": 5217,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5197,
											"end": 5217,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5197,
											"end": 5217,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5197,
											"end": 5217,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5197,
											"end": 5217,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5197,
											"end": 5217,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5197,
											"end": 5217,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5197,
											"end": 5217,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5197,
											"end": 5217,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5197,
											"end": 5217,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5197,
											"end": 5217,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5197,
											"end": 5217,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5197,
											"end": 5223,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5197,
											"end": 5223,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5197,
											"end": 5227,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5197,
											"end": 5227,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5197,
											"end": 5227,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5197,
											"end": 5227,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2525,
											"end": 5237,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2525,
											"end": 5237,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2525,
											"end": 5237,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2525,
											"end": 5237,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2525,
											"end": 5237,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2525,
											"end": 5237,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2525,
											"end": 5237,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2525,
											"end": 5237,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2525,
											"end": 5237,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2525,
											"end": 5237,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2525,
											"end": 5237,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 5237,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 2483,
											"end": 5237,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 5237,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5371,
											"end": 5692,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 5371,
											"end": 5692,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5758,
											"end": 5765,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 5758,
											"end": 5765,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5758,
											"end": 5765,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5758,
											"end": 5765,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5758,
											"end": 5765,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5758,
											"end": 5765,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5758,
											"end": 5765,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 5758,
											"end": 5765,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5758,
											"end": 5765,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 5758,
											"end": 5765,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5758,
											"end": 5765,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5744,
											"end": 5765,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5744,
											"end": 5765,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5744,
											"end": 5754,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 5744,
											"end": 5765,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5744,
											"end": 5765,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5744,
											"end": 5765,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5736,
											"end": 5804,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 5736,
											"end": 5804,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5736,
											"end": 5804,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5736,
											"end": 5804,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5736,
											"end": 5804,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5736,
											"end": 5804,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5736,
											"end": 5804,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5736,
											"end": 5804,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5736,
											"end": 5804,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5736,
											"end": 5804,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 5736,
											"end": 5804,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5736,
											"end": 5804,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 5736,
											"end": 5804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5736,
											"end": 5804,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 5736,
											"end": 5804,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5736,
											"end": 5804,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5736,
											"end": 5804,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5736,
											"end": 5804,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5736,
											"end": 5804,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5736,
											"end": 5804,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5736,
											"end": 5804,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5736,
											"end": 5804,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5736,
											"end": 5804,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 5736,
											"end": 5804,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5443,
											"end": 5454,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5488,
											"end": 5503,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 5488,
											"end": 5503,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5457,
											"end": 5485,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 5457,
											"end": 5483,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 5457,
											"end": 5485,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5457,
											"end": 5485,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 5457,
											"end": 5485,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5457,
											"end": 5503,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 5457,
											"end": 5503,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5457,
											"end": 5503,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5457,
											"end": 5503,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 5457,
											"end": 5503,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5457,
											"end": 5503,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 5457,
											"end": 5503,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5443,
											"end": 5503,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5443,
											"end": 5503,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5533,
											"end": 5534,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5524,
											"end": 5530,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5524,
											"end": 5534,
											"modifierDepth": 1,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5516,
											"end": 5535,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 5516,
											"end": 5535,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5516,
											"end": 5535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5516,
											"end": 5535,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5516,
											"end": 5535,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5516,
											"end": 5535,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 5516,
											"end": 5535,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5548,
											"end": 5568,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 5561,
											"end": 5567,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5548,
											"end": 5560,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 5548,
											"end": 5568,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5548,
											"end": 5568,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 5548,
											"end": 5568,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5582,
											"end": 5594,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5600,
											"end": 5610,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 5600,
											"end": 5615,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5600,
											"end": 5615,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5624,
											"end": 5630,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5600,
											"end": 5635,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5600,
											"end": 5635,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5600,
											"end": 5635,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 5600,
											"end": 5635,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5600,
											"end": 5635,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 5600,
											"end": 5635,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5600,
											"end": 5635,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 5600,
											"end": 5635,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5600,
											"end": 5635,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5600,
											"end": 5635,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5600,
											"end": 5635,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5600,
											"end": 5635,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5600,
											"end": 5635,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5600,
											"end": 5635,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5600,
											"end": 5635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5600,
											"end": 5635,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5600,
											"end": 5635,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5600,
											"end": 5635,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 5600,
											"end": 5635,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 5600,
											"end": 5635,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5600,
											"end": 5635,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5600,
											"end": 5635,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5600,
											"end": 5635,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5600,
											"end": 5635,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 5600,
											"end": 5635,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5600,
											"end": 5635,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5600,
											"end": 5635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5600,
											"end": 5635,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5600,
											"end": 5635,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 5600,
											"end": 5635,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5600,
											"end": 5635,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5600,
											"end": 5635,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5600,
											"end": 5635,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5600,
											"end": 5635,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5600,
											"end": 5635,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 5600,
											"end": 5635,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5600,
											"end": 5635,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "3F"
										},
										{
											"begin": 5600,
											"end": 5635,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 5600,
											"end": 5635,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5600,
											"end": 5635,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5600,
											"end": 5635,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5600,
											"end": 5635,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5600,
											"end": 5635,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5600,
											"end": 5635,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5600,
											"end": 5635,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 5600,
											"end": 5635,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5600,
											"end": 5635,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5600,
											"end": 5635,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 5600,
											"end": 5635,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5600,
											"end": 5635,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5600,
											"end": 5635,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5600,
											"end": 5635,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5600,
											"end": 5635,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 5600,
											"end": 5635,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 5600,
											"end": 5635,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5600,
											"end": 5635,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 5600,
											"end": 5635,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5600,
											"end": 5635,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5600,
											"end": 5635,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5600,
											"end": 5635,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5600,
											"end": 5635,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 5600,
											"end": 5635,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5600,
											"end": 5635,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5581,
											"end": 5635,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5581,
											"end": 5635,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5581,
											"end": 5635,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5656,
											"end": 5663,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5648,
											"end": 5684,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 5648,
											"end": 5684,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5648,
											"end": 5684,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5648,
											"end": 5684,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5648,
											"end": 5684,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5648,
											"end": 5684,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5648,
											"end": 5684,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5648,
											"end": 5684,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5648,
											"end": 5684,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5648,
											"end": 5684,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 5648,
											"end": 5684,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5648,
											"end": 5684,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 5648,
											"end": 5684,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5648,
											"end": 5684,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 5648,
											"end": 5684,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5648,
											"end": 5684,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5648,
											"end": 5684,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5648,
											"end": 5684,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5648,
											"end": 5684,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5648,
											"end": 5684,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5648,
											"end": 5684,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5648,
											"end": 5684,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5648,
											"end": 5684,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 5648,
											"end": 5684,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5692,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5692,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5371,
											"end": 5692,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6782,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 6782,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6851,
											"end": 6852,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6845,
											"end": 6848,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6845,
											"end": 6852,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 6837,
											"end": 6853,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 6837,
											"end": 6853,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6837,
											"end": 6853,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6837,
											"end": 6853,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6837,
											"end": 6853,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6837,
											"end": 6853,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 6837,
											"end": 6853,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6862,
											"end": 6877,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 6873,
											"end": 6876,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 6862,
											"end": 6877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6862,
											"end": 6877,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 6862,
											"end": 6877,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6886,
											"end": 6898,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6886,
											"end": 6898,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6886,
											"end": 6898,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6886,
											"end": 6898,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6886,
											"end": 6898,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6886,
											"end": 6898,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 6886,
											"end": 6898,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 6886,
											"end": 6898,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6886,
											"end": 6898,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 6886,
											"end": 6898,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6886,
											"end": 6898,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6886,
											"end": 6906,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6886,
											"end": 6906,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6886,
											"end": 6906,
											"name": "PUSH",
											"source": 1,
											"value": "E8EDA9DF"
										},
										{
											"begin": 6915,
											"end": 6919,
											"name": "PUSHIMMUTABLE",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 6921,
											"end": 6924,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6934,
											"end": 6938,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 6941,
											"end": 6942,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6886,
											"end": 6943,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6886,
											"end": 6943,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6886,
											"end": 6943,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6886,
											"end": 6943,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6886,
											"end": 6943,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6886,
											"end": 6943,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 6886,
											"end": 6943,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 6886,
											"end": 6943,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6886,
											"end": 6943,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6886,
											"end": 6943,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6886,
											"end": 6943,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6886,
											"end": 6943,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 6886,
											"end": 6943,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 6886,
											"end": 6943,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6886,
											"end": 6943,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6886,
											"end": 6943,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6886,
											"end": 6943,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6886,
											"end": 6943,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 6886,
											"end": 6943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6886,
											"end": 6943,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 6886,
											"end": 6943,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6886,
											"end": 6943,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6886,
											"end": 6943,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6886,
											"end": 6943,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6886,
											"end": 6943,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6886,
											"end": 6943,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6886,
											"end": 6943,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6886,
											"end": 6943,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6886,
											"end": 6943,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6886,
											"end": 6943,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6886,
											"end": 6943,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6886,
											"end": 6943,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 6886,
											"end": 6943,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6886,
											"end": 6943,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6886,
											"end": 6943,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6886,
											"end": 6943,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 6886,
											"end": 6943,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6886,
											"end": 6943,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6886,
											"end": 6943,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6886,
											"end": 6943,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6886,
											"end": 6943,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 6886,
											"end": 6943,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6886,
											"end": 6943,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6886,
											"end": 6943,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 6886,
											"end": 6943,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 6886,
											"end": 6943,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6886,
											"end": 6943,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6886,
											"end": 6943,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6886,
											"end": 6943,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 6886,
											"end": 6943,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6886,
											"end": 6943,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 6886,
											"end": 6943,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6886,
											"end": 6943,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6886,
											"end": 6943,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 6886,
											"end": 6943,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 6886,
											"end": 6943,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6886,
											"end": 6943,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6886,
											"end": 6943,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 6886,
											"end": 6943,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6886,
											"end": 6943,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6886,
											"end": 6943,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6886,
											"end": 6943,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6886,
											"end": 6943,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6782,
											"end": 6951,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6782,
											"end": 6951,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6467,
											"end": 6697,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 6467,
											"end": 6697,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6527,
											"end": 6548,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6527,
											"end": 6548,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6527,
											"end": 6548,
											"name": "PUSH",
											"source": 1,
											"value": "69328DEC"
										},
										{
											"begin": 6557,
											"end": 6561,
											"name": "PUSHIMMUTABLE",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 6563,
											"end": 6566,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6576,
											"end": 6580,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 6527,
											"end": 6582,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6527,
											"end": 6582,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6527,
											"end": 6582,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6527,
											"end": 6582,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6527,
											"end": 6582,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6527,
											"end": 6582,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 6527,
											"end": 6582,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 6527,
											"end": 6582,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6527,
											"end": 6582,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6527,
											"end": 6582,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6527,
											"end": 6582,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6527,
											"end": 6582,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 6527,
											"end": 6582,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6527,
											"end": 6582,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6527,
											"end": 6582,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6527,
											"end": 6582,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6527,
											"end": 6582,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 6527,
											"end": 6582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6527,
											"end": 6582,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 6527,
											"end": 6582,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6527,
											"end": 6582,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6527,
											"end": 6582,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6527,
											"end": 6582,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6527,
											"end": 6582,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6527,
											"end": 6582,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6527,
											"end": 6582,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6527,
											"end": 6582,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6527,
											"end": 6582,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6527,
											"end": 6582,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6527,
											"end": 6582,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 6527,
											"end": 6582,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 6527,
											"end": 6582,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6527,
											"end": 6582,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6527,
											"end": 6582,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6527,
											"end": 6582,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 6527,
											"end": 6582,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6527,
											"end": 6582,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 6527,
											"end": 6582,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6527,
											"end": 6582,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6527,
											"end": 6582,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 6527,
											"end": 6582,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 6527,
											"end": 6582,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6527,
											"end": 6582,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6527,
											"end": 6582,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 6527,
											"end": 6582,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6527,
											"end": 6582,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6527,
											"end": 6582,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6527,
											"end": 6582,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6527,
											"end": 6582,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6527,
											"end": 6582,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6527,
											"end": 6582,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6527,
											"end": 6582,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 6527,
											"end": 6582,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 6527,
											"end": 6582,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 6527,
											"end": 6582,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 6527,
											"end": 6582,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6527,
											"end": 6582,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6527,
											"end": 6582,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6527,
											"end": 6582,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6527,
											"end": 6582,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6527,
											"end": 6582,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6527,
											"end": 6582,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6527,
											"end": 6582,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6527,
											"end": 6582,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6527,
											"end": 6582,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6527,
											"end": 6582,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6527,
											"end": 6582,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6527,
											"end": 6582,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 6527,
											"end": 6582,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6527,
											"end": 6582,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6527,
											"end": 6582,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 6527,
											"end": 6582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6527,
											"end": 6582,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 6527,
											"end": 6582,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6527,
											"end": 6582,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6593,
											"end": 6602,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6605,
											"end": 6609,
											"name": "PUSHIMMUTABLE",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 6605,
											"end": 6617,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6605,
											"end": 6617,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6605,
											"end": 6617,
											"name": "PUSH",
											"source": 1,
											"value": "95EA7B3"
										},
										{
											"begin": 6626,
											"end": 6630,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 6634,
											"end": 6637,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6605,
											"end": 6638,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6605,
											"end": 6638,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6605,
											"end": 6638,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6605,
											"end": 6638,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6605,
											"end": 6638,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6605,
											"end": 6638,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 6605,
											"end": 6638,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 6605,
											"end": 6638,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6605,
											"end": 6638,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6605,
											"end": 6638,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6605,
											"end": 6638,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6605,
											"end": 6638,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 6605,
											"end": 6638,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6605,
											"end": 6638,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6605,
											"end": 6638,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6605,
											"end": 6638,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 6605,
											"end": 6638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6605,
											"end": 6638,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 6605,
											"end": 6638,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6605,
											"end": 6638,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6605,
											"end": 6638,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6605,
											"end": 6638,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6605,
											"end": 6638,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6605,
											"end": 6638,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6605,
											"end": 6638,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6605,
											"end": 6638,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6605,
											"end": 6638,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6605,
											"end": 6638,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6605,
											"end": 6638,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 6605,
											"end": 6638,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 6605,
											"end": 6638,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6605,
											"end": 6638,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6605,
											"end": 6638,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6605,
											"end": 6638,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 6605,
											"end": 6638,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6605,
											"end": 6638,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 6605,
											"end": 6638,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6605,
											"end": 6638,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6605,
											"end": 6638,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 6605,
											"end": 6638,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 6605,
											"end": 6638,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6605,
											"end": 6638,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6605,
											"end": 6638,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 6605,
											"end": 6638,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6605,
											"end": 6638,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6605,
											"end": 6638,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6605,
											"end": 6638,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6605,
											"end": 6638,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6605,
											"end": 6638,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6605,
											"end": 6638,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6605,
											"end": 6638,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 6605,
											"end": 6638,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 6605,
											"end": 6638,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 6605,
											"end": 6638,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 6605,
											"end": 6638,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6605,
											"end": 6638,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6605,
											"end": 6638,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6605,
											"end": 6638,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6605,
											"end": 6638,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6605,
											"end": 6638,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6605,
											"end": 6638,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6605,
											"end": 6638,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6605,
											"end": 6638,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6605,
											"end": 6638,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6605,
											"end": 6638,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6605,
											"end": 6638,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6605,
											"end": 6638,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 6605,
											"end": 6638,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6605,
											"end": 6638,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6605,
											"end": 6638,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 6605,
											"end": 6638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6605,
											"end": 6638,
											"name": "tag",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 6605,
											"end": 6638,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6593,
											"end": 6638,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6593,
											"end": 6638,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6652,
											"end": 6656,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6689,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6689,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 6649,
											"end": 6689,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6671,
											"end": 6675,
											"name": "PUSHIMMUTABLE",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 6671,
											"end": 6684,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6671,
											"end": 6684,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6671,
											"end": 6684,
											"name": "PUSH",
											"source": 1,
											"value": "2E1A7D4D"
										},
										{
											"begin": 6685,
											"end": 6688,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6671,
											"end": 6689,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6671,
											"end": 6689,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6671,
											"end": 6689,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6671,
											"end": 6689,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6671,
											"end": 6689,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6671,
											"end": 6689,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 6671,
											"end": 6689,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 6671,
											"end": 6689,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6671,
											"end": 6689,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6671,
											"end": 6689,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6671,
											"end": 6689,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6671,
											"end": 6689,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 6671,
											"end": 6689,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6671,
											"end": 6689,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6671,
											"end": 6689,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 6671,
											"end": 6689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6671,
											"end": 6689,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 6671,
											"end": 6689,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6671,
											"end": 6689,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6671,
											"end": 6689,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6671,
											"end": 6689,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6671,
											"end": 6689,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6671,
											"end": 6689,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6671,
											"end": 6689,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6671,
											"end": 6689,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6671,
											"end": 6689,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6671,
											"end": 6689,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6671,
											"end": 6689,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6671,
											"end": 6689,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 6671,
											"end": 6689,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6671,
											"end": 6689,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6671,
											"end": 6689,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6671,
											"end": 6689,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 6671,
											"end": 6689,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6671,
											"end": 6689,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6671,
											"end": 6689,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6671,
											"end": 6689,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6671,
											"end": 6689,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 6671,
											"end": 6689,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6671,
											"end": 6689,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6671,
											"end": 6689,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 6671,
											"end": 6689,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 6671,
											"end": 6689,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6671,
											"end": 6689,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6671,
											"end": 6689,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6671,
											"end": 6689,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 6671,
											"end": 6689,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6671,
											"end": 6689,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 6671,
											"end": 6689,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6671,
											"end": 6689,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6671,
											"end": 6689,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 6671,
											"end": 6689,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 6671,
											"end": 6689,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6671,
											"end": 6689,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6671,
											"end": 6689,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 6671,
											"end": 6689,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6671,
											"end": 6689,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6671,
											"end": 6689,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6671,
											"end": 6689,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6671,
											"end": 6689,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6689,
											"name": "tag",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 6649,
											"end": 6689,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6516,
											"end": 6697,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6467,
											"end": 6697,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6467,
											"end": 6697,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5900,
											"end": 5991,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 5900,
											"end": 5991,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5956,
											"end": 5960,
											"name": "PUSHIMMUTABLE",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 5956,
											"end": 5968,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5956,
											"end": 5968,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5956,
											"end": 5968,
											"name": "PUSH",
											"source": 1,
											"value": "D0E30DB0"
										},
										{
											"begin": 5977,
											"end": 5980,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5956,
											"end": 5983,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5956,
											"end": 5983,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5956,
											"end": 5983,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5956,
											"end": 5983,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5956,
											"end": 5983,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5956,
											"end": 5983,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 5956,
											"end": 5983,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 5956,
											"end": 5983,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5956,
											"end": 5983,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5956,
											"end": 5983,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5956,
											"end": 5983,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5956,
											"end": 5983,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5956,
											"end": 5983,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5956,
											"end": 5983,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5956,
											"end": 5983,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5956,
											"end": 5983,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5956,
											"end": 5983,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5956,
											"end": 5983,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5956,
											"end": 5983,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5956,
											"end": 5983,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5956,
											"end": 5983,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5956,
											"end": 5983,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 5956,
											"end": 5983,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5956,
											"end": 5983,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5956,
											"end": 5983,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5956,
											"end": 5983,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 5956,
											"end": 5983,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5956,
											"end": 5983,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5956,
											"end": 5983,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5956,
											"end": 5983,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5956,
											"end": 5983,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 5956,
											"end": 5983,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5956,
											"end": 5983,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5956,
											"end": 5983,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 5956,
											"end": 5983,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 5956,
											"end": 5983,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5956,
											"end": 5983,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5956,
											"end": 5983,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5956,
											"end": 5983,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 5956,
											"end": 5983,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5956,
											"end": 5983,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 5956,
											"end": 5983,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5956,
											"end": 5983,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5956,
											"end": 5983,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 5956,
											"end": 5983,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 5956,
											"end": 5983,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5956,
											"end": 5983,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5956,
											"end": 5983,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 5956,
											"end": 5983,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5956,
											"end": 5983,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5956,
											"end": 5983,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5956,
											"end": 5983,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5956,
											"end": 5983,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5956,
											"end": 5983,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5900,
											"end": 5991,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5900,
											"end": 5991,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 8,
											"value": "162"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "217"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "162"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 8,
											"value": "217"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 442,
											"end": 611,
											"name": "tag",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 442,
											"end": 611,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 526,
											"end": 537,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 560,
											"end": 566,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 555,
											"end": 558,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 548,
											"end": 567,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 600,
											"end": 604,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 595,
											"end": 598,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 591,
											"end": 605,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 576,
											"end": 605,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 576,
											"end": 605,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 442,
											"end": 611,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 442,
											"end": 611,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 442,
											"end": 611,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 442,
											"end": 611,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 442,
											"end": 611,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 617,
											"end": 795,
											"name": "tag",
											"source": 8,
											"value": "164"
										},
										{
											"begin": 617,
											"end": 795,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 757,
											"end": 787,
											"name": "PUSH",
											"source": 8,
											"value": "596F75206D7573742073656E6420736F6D6520746F6B656E732E2E2E00000000"
										},
										{
											"begin": 753,
											"end": 754,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 745,
											"end": 751,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 741,
											"end": 755,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 734,
											"end": 788,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 617,
											"end": 795,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 617,
											"end": 795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 801,
											"end": 1167,
											"name": "tag",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 801,
											"end": 1167,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 943,
											"end": 946,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 964,
											"end": 1031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 1028,
											"end": 1030,
											"name": "PUSH",
											"source": 8,
											"value": "1C"
										},
										{
											"begin": 1023,
											"end": 1026,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 964,
											"end": 1031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 964,
											"end": 1031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 964,
											"end": 1031,
											"name": "tag",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 964,
											"end": 1031,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 957,
											"end": 1031,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 957,
											"end": 1031,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1040,
											"end": 1133,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 1129,
											"end": 1132,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1040,
											"end": 1133,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "164"
										},
										{
											"begin": 1040,
											"end": 1133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1040,
											"end": 1133,
											"name": "tag",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 1040,
											"end": 1133,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1158,
											"end": 1160,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1153,
											"end": 1156,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1149,
											"end": 1161,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1142,
											"end": 1161,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1142,
											"end": 1161,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 801,
											"end": 1167,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 801,
											"end": 1167,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 801,
											"end": 1167,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 801,
											"end": 1167,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1173,
											"end": 1592,
											"name": "tag",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 1173,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1339,
											"end": 1343,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1377,
											"end": 1379,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1366,
											"end": 1375,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1362,
											"end": 1380,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1354,
											"end": 1380,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1354,
											"end": 1380,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1426,
											"end": 1435,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1420,
											"end": 1424,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1416,
											"end": 1436,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1412,
											"end": 1413,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1401,
											"end": 1410,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1397,
											"end": 1414,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1390,
											"end": 1437,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1454,
											"end": 1585,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 1580,
											"end": 1584,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1454,
											"end": 1585,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 1454,
											"end": 1585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1454,
											"end": 1585,
											"name": "tag",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 1454,
											"end": 1585,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1446,
											"end": 1585,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1446,
											"end": 1585,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1173,
											"end": 1592,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1173,
											"end": 1592,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1173,
											"end": 1592,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1173,
											"end": 1592,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1598,
											"end": 1778,
											"name": "tag",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 1598,
											"end": 1778,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1646,
											"end": 1723,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1643,
											"end": 1644,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1636,
											"end": 1724,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1743,
											"end": 1747,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 1740,
											"end": 1741,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1733,
											"end": 1748,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1767,
											"end": 1771,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 1764,
											"end": 1765,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1757,
											"end": 1772,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1784,
											"end": 2089,
											"name": "tag",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 1784,
											"end": 2089,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1824,
											"end": 1827,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1843,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 1861,
											"end": 1862,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 1843,
											"end": 1863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1863,
											"name": "tag",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 1843,
											"end": 1863,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1838,
											"end": 1863,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1838,
											"end": 1863,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1877,
											"end": 1897,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 1895,
											"end": 1896,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1877,
											"end": 1897,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 1877,
											"end": 1897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1877,
											"end": 1897,
											"name": "tag",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 1877,
											"end": 1897,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1872,
											"end": 1897,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1872,
											"end": 1897,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2031,
											"end": 2032,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1963,
											"end": 2029,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1959,
											"end": 2033,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1956,
											"end": 1957,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1953,
											"end": 2034,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1950,
											"end": 2057,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1950,
											"end": 2057,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 1950,
											"end": 2057,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2037,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 2037,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 2037,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2037,
											"end": 2055,
											"name": "tag",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 2037,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1950,
											"end": 2057,
											"name": "tag",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 1950,
											"end": 2057,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2081,
											"end": 2082,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2078,
											"end": 2079,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2074,
											"end": 2083,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2067,
											"end": 2083,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2067,
											"end": 2083,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1784,
											"end": 2089,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1784,
											"end": 2089,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1784,
											"end": 2089,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1784,
											"end": 2089,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1784,
											"end": 2089,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2095,
											"end": 2221,
											"name": "tag",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 2095,
											"end": 2221,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2132,
											"end": 2139,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2172,
											"end": 2214,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2165,
											"end": 2170,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2161,
											"end": 2215,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2150,
											"end": 2215,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2150,
											"end": 2215,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2095,
											"end": 2221,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2095,
											"end": 2221,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2095,
											"end": 2221,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2095,
											"end": 2221,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2227,
											"end": 2323,
											"name": "tag",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 2227,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2264,
											"end": 2271,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2317,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 2311,
											"end": 2316,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2293,
											"end": 2317,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 2293,
											"end": 2317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2293,
											"end": 2317,
											"name": "tag",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 2293,
											"end": 2317,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2282,
											"end": 2317,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2282,
											"end": 2317,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2227,
											"end": 2323,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2227,
											"end": 2323,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2227,
											"end": 2323,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2227,
											"end": 2323,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2329,
											"end": 2447,
											"name": "tag",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 2329,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2416,
											"end": 2440,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 2434,
											"end": 2439,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2416,
											"end": 2440,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 2416,
											"end": 2440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2416,
											"end": 2440,
											"name": "tag",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 2416,
											"end": 2440,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2411,
											"end": 2414,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2404,
											"end": 2441,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2329,
											"end": 2447,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2329,
											"end": 2447,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2329,
											"end": 2447,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2453,
											"end": 2675,
											"name": "tag",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 2453,
											"end": 2675,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2546,
											"end": 2550,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2584,
											"end": 2586,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2573,
											"end": 2582,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2569,
											"end": 2587,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2561,
											"end": 2587,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2561,
											"end": 2587,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2597,
											"end": 2668,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 2665,
											"end": 2666,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2654,
											"end": 2663,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2650,
											"end": 2667,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2641,
											"end": 2647,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2597,
											"end": 2668,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 2597,
											"end": 2668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2597,
											"end": 2668,
											"name": "tag",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 2597,
											"end": 2668,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2453,
											"end": 2675,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2453,
											"end": 2675,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2453,
											"end": 2675,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2453,
											"end": 2675,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2453,
											"end": 2675,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2681,
											"end": 2756,
											"name": "tag",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 2681,
											"end": 2756,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2714,
											"end": 2720,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2747,
											"end": 2749,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2741,
											"end": 2750,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2731,
											"end": 2750,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2731,
											"end": 2750,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2681,
											"end": 2756,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2681,
											"end": 2756,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2762,
											"end": 2879,
											"name": "tag",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 2762,
											"end": 2879,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2871,
											"end": 2872,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2868,
											"end": 2869,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2861,
											"end": 2873,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3125,
											"name": "tag",
											"source": 8,
											"value": "173"
										},
										{
											"begin": 3008,
											"end": 3125,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3117,
											"end": 3118,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3114,
											"end": 3115,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3107,
											"end": 3119,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3131,
											"end": 3233,
											"name": "tag",
											"source": 8,
											"value": "174"
										},
										{
											"begin": 3131,
											"end": 3233,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3172,
											"end": 3178,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3223,
											"end": 3225,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 3219,
											"end": 3226,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 3214,
											"end": 3216,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 3207,
											"end": 3212,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3203,
											"end": 3217,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3199,
											"end": 3227,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3189,
											"end": 3227,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3189,
											"end": 3227,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3131,
											"end": 3233,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3131,
											"end": 3233,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3131,
											"end": 3233,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3131,
											"end": 3233,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3239,
											"end": 3419,
											"name": "tag",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 3239,
											"end": 3419,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3287,
											"end": 3364,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3284,
											"end": 3285,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3277,
											"end": 3365,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3384,
											"end": 3388,
											"name": "PUSH",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 3381,
											"end": 3382,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3374,
											"end": 3389,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3408,
											"end": 3412,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3405,
											"end": 3406,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3398,
											"end": 3413,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3425,
											"end": 3706,
											"name": "tag",
											"source": 8,
											"value": "176"
										},
										{
											"begin": 3425,
											"end": 3706,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3508,
											"end": 3535,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 3530,
											"end": 3534,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3508,
											"end": 3535,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "174"
										},
										{
											"begin": 3508,
											"end": 3535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3508,
											"end": 3535,
											"name": "tag",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 3508,
											"end": 3535,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3500,
											"end": 3506,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3496,
											"end": 3536,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3638,
											"end": 3644,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3626,
											"end": 3636,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3623,
											"end": 3645,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 3602,
											"end": 3620,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3590,
											"end": 3600,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3587,
											"end": 3621,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 3584,
											"end": 3646,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 3581,
											"end": 3669,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3581,
											"end": 3669,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 3581,
											"end": 3669,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3649,
											"end": 3667,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 3649,
											"end": 3667,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 3649,
											"end": 3667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3649,
											"end": 3667,
											"name": "tag",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 3649,
											"end": 3667,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3581,
											"end": 3669,
											"name": "tag",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 3581,
											"end": 3669,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3689,
											"end": 3699,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3685,
											"end": 3687,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3678,
											"end": 3700,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3468,
											"end": 3706,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3425,
											"end": 3706,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3425,
											"end": 3706,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3425,
											"end": 3706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3712,
											"end": 3841,
											"name": "tag",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 3712,
											"end": 3841,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3746,
											"end": 3752,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3773,
											"end": 3793,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 3773,
											"end": 3793,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 3773,
											"end": 3793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3773,
											"end": 3793,
											"name": "tag",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 3773,
											"end": 3793,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3763,
											"end": 3793,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3763,
											"end": 3793,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3802,
											"end": 3835,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 3830,
											"end": 3834,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3822,
											"end": 3828,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3802,
											"end": 3835,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "176"
										},
										{
											"begin": 3802,
											"end": 3835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3802,
											"end": 3835,
											"name": "tag",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 3802,
											"end": 3835,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3712,
											"end": 3841,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3712,
											"end": 3841,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3712,
											"end": 3841,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3712,
											"end": 3841,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3970,
											"end": 4092,
											"name": "tag",
											"source": 8,
											"value": "179"
										},
										{
											"begin": 3970,
											"end": 4092,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4043,
											"end": 4067,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 4061,
											"end": 4066,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4043,
											"end": 4067,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 4043,
											"end": 4067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4043,
											"end": 4067,
											"name": "tag",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 4043,
											"end": 4067,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4036,
											"end": 4041,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4033,
											"end": 4068,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 4023,
											"end": 4086,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 4023,
											"end": 4086,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4082,
											"end": 4083,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4079,
											"end": 4080,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4072,
											"end": 4084,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4023,
											"end": 4086,
											"name": "tag",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 4023,
											"end": 4086,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3970,
											"end": 4092,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3970,
											"end": 4092,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4098,
											"end": 4241,
											"name": "tag",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 4098,
											"end": 4241,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4155,
											"end": 4160,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4186,
											"end": 4192,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4180,
											"end": 4193,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4171,
											"end": 4193,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4171,
											"end": 4193,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4202,
											"end": 4235,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 4229,
											"end": 4234,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4202,
											"end": 4235,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "179"
										},
										{
											"begin": 4202,
											"end": 4235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4202,
											"end": 4235,
											"name": "tag",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 4202,
											"end": 4235,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4098,
											"end": 4241,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4098,
											"end": 4241,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4098,
											"end": 4241,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4098,
											"end": 4241,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4098,
											"end": 4241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4295,
											"end": 4746,
											"name": "tag",
											"source": 8,
											"value": "181"
										},
										{
											"begin": 4295,
											"end": 4746,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4396,
											"end": 4401,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4440,
											"end": 4444,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4428,
											"end": 4437,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4423,
											"end": 4426,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4419,
											"end": 4438,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4415,
											"end": 4445,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 4412,
											"end": 4529,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4412,
											"end": 4529,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 4412,
											"end": 4529,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4448,
											"end": 4527,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 4448,
											"end": 4527,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "173"
										},
										{
											"begin": 4448,
											"end": 4527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4448,
											"end": 4527,
											"name": "tag",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 4448,
											"end": 4527,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4412,
											"end": 4529,
											"name": "tag",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 4412,
											"end": 4529,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4547,
											"end": 4568,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 4563,
											"end": 4567,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4547,
											"end": 4568,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 4547,
											"end": 4568,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4547,
											"end": 4568,
											"name": "tag",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 4547,
											"end": 4568,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4538,
											"end": 4568,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4538,
											"end": 4568,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4627,
											"end": 4628,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4667,
											"end": 4727,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 4723,
											"end": 4726,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4714,
											"end": 4720,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4703,
											"end": 4712,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4699,
											"end": 4721,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4667,
											"end": 4727,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 4667,
											"end": 4727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4667,
											"end": 4727,
											"name": "tag",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 4667,
											"end": 4727,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4660,
											"end": 4664,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4653,
											"end": 4658,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4649,
											"end": 4665,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4642,
											"end": 4728,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4578,
											"end": 4739,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4295,
											"end": 4746,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4295,
											"end": 4746,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4295,
											"end": 4746,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4295,
											"end": 4746,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4295,
											"end": 4746,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4752,
											"end": 4870,
											"name": "tag",
											"source": 8,
											"value": "182"
										},
										{
											"begin": 4752,
											"end": 4870,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4789,
											"end": 4796,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4829,
											"end": 4863,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4822,
											"end": 4827,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4818,
											"end": 4864,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4807,
											"end": 4864,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4807,
											"end": 4864,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4752,
											"end": 4870,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4752,
											"end": 4870,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4752,
											"end": 4870,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4752,
											"end": 4870,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4876,
											"end": 4998,
											"name": "tag",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 4876,
											"end": 4998,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4949,
											"end": 4973,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 4967,
											"end": 4972,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4949,
											"end": 4973,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "182"
										},
										{
											"begin": 4949,
											"end": 4973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4949,
											"end": 4973,
											"name": "tag",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 4949,
											"end": 4973,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4942,
											"end": 4947,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4939,
											"end": 4974,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 4929,
											"end": 4992,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 4929,
											"end": 4992,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4988,
											"end": 4989,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4985,
											"end": 4986,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4978,
											"end": 4990,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4929,
											"end": 4992,
											"name": "tag",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 4929,
											"end": 4992,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4876,
											"end": 4998,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4876,
											"end": 4998,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5004,
											"end": 5147,
											"name": "tag",
											"source": 8,
											"value": "184"
										},
										{
											"begin": 5004,
											"end": 5147,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5061,
											"end": 5066,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5092,
											"end": 5098,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5086,
											"end": 5099,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5077,
											"end": 5099,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5077,
											"end": 5099,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5108,
											"end": 5141,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "267"
										},
										{
											"begin": 5135,
											"end": 5140,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5108,
											"end": 5141,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 5108,
											"end": 5141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5108,
											"end": 5141,
											"name": "tag",
											"source": 8,
											"value": "267"
										},
										{
											"begin": 5108,
											"end": 5141,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5004,
											"end": 5147,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5004,
											"end": 5147,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5004,
											"end": 5147,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5004,
											"end": 5147,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5004,
											"end": 5147,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5153,
											"end": 5248,
											"name": "tag",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 5153,
											"end": 5248,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5189,
											"end": 5196,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5229,
											"end": 5241,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFF"
										},
										{
											"begin": 5222,
											"end": 5227,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5218,
											"end": 5242,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5207,
											"end": 5242,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5207,
											"end": 5242,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5153,
											"end": 5248,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5153,
											"end": 5248,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5153,
											"end": 5248,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5153,
											"end": 5248,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5254,
											"end": 5374,
											"name": "tag",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 5254,
											"end": 5374,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5326,
											"end": 5349,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 5343,
											"end": 5348,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5326,
											"end": 5349,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 5326,
											"end": 5349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5326,
											"end": 5349,
											"name": "tag",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 5326,
											"end": 5349,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5319,
											"end": 5324,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5316,
											"end": 5350,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 5306,
											"end": 5368,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 5306,
											"end": 5368,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5364,
											"end": 5365,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5361,
											"end": 5362,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5354,
											"end": 5366,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5306,
											"end": 5368,
											"name": "tag",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 5306,
											"end": 5368,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5254,
											"end": 5374,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5254,
											"end": 5374,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5380,
											"end": 5521,
											"name": "tag",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 5380,
											"end": 5521,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5436,
											"end": 5441,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5467,
											"end": 5473,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5461,
											"end": 5474,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5452,
											"end": 5474,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5452,
											"end": 5474,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5483,
											"end": 5515,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 5509,
											"end": 5514,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5483,
											"end": 5515,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 5483,
											"end": 5515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5483,
											"end": 5515,
											"name": "tag",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 5483,
											"end": 5515,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5380,
											"end": 5521,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5380,
											"end": 5521,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5380,
											"end": 5521,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5380,
											"end": 5521,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5380,
											"end": 5521,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5527,
											"end": 5649,
											"name": "tag",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 5527,
											"end": 5649,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5600,
											"end": 5624,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 5618,
											"end": 5623,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5600,
											"end": 5624,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 5600,
											"end": 5624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5600,
											"end": 5624,
											"name": "tag",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 5600,
											"end": 5624,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5593,
											"end": 5598,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5590,
											"end": 5625,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 5580,
											"end": 5643,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 5580,
											"end": 5643,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5639,
											"end": 5640,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5636,
											"end": 5637,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5629,
											"end": 5641,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5580,
											"end": 5643,
											"name": "tag",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 5580,
											"end": 5643,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5527,
											"end": 5649,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5527,
											"end": 5649,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5655,
											"end": 5798,
											"name": "tag",
											"source": 8,
											"value": "189"
										},
										{
											"begin": 5655,
											"end": 5798,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5712,
											"end": 5717,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5743,
											"end": 5749,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5737,
											"end": 5750,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5728,
											"end": 5750,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5728,
											"end": 5750,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5759,
											"end": 5792,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 5786,
											"end": 5791,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5759,
											"end": 5792,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 5759,
											"end": 5792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5759,
											"end": 5792,
											"name": "tag",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 5759,
											"end": 5792,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5655,
											"end": 5798,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5655,
											"end": 5798,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5655,
											"end": 5798,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5655,
											"end": 5798,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5655,
											"end": 5798,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5804,
											"end": 5890,
											"name": "tag",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 5804,
											"end": 5890,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5839,
											"end": 5846,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5879,
											"end": 5883,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 5872,
											"end": 5877,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5868,
											"end": 5884,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5857,
											"end": 5884,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5857,
											"end": 5884,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5804,
											"end": 5890,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5804,
											"end": 5890,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5804,
											"end": 5890,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5804,
											"end": 5890,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5896,
											"end": 6014,
											"name": "tag",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 5896,
											"end": 6014,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5967,
											"end": 5989,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 5983,
											"end": 5988,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5967,
											"end": 5989,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 5967,
											"end": 5989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5967,
											"end": 5989,
											"name": "tag",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 5967,
											"end": 5989,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5960,
											"end": 5965,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5957,
											"end": 5990,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 5947,
											"end": 6008,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 5947,
											"end": 6008,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6004,
											"end": 6005,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6001,
											"end": 6002,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5994,
											"end": 6006,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5947,
											"end": 6008,
											"name": "tag",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 5947,
											"end": 6008,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5896,
											"end": 6014,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5896,
											"end": 6014,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6020,
											"end": 6159,
											"name": "tag",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 6020,
											"end": 6159,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6075,
											"end": 6080,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6106,
											"end": 6112,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6100,
											"end": 6113,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6091,
											"end": 6113,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6091,
											"end": 6113,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6122,
											"end": 6153,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 6147,
											"end": 6152,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6122,
											"end": 6153,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 6122,
											"end": 6153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6122,
											"end": 6153,
											"name": "tag",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 6122,
											"end": 6153,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6020,
											"end": 6159,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6020,
											"end": 6159,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6020,
											"end": 6159,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6020,
											"end": 6159,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6020,
											"end": 6159,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6201,
											"end": 8763,
											"name": "tag",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 6201,
											"end": 8763,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6290,
											"end": 6295,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6334,
											"end": 6340,
											"name": "PUSH",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 6322,
											"end": 6331,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6317,
											"end": 6320,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6313,
											"end": 6332,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6309,
											"end": 6341,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 6306,
											"end": 6425,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6306,
											"end": 6425,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 6306,
											"end": 6425,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6344,
											"end": 6423,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 6344,
											"end": 6423,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "173"
										},
										{
											"begin": 6344,
											"end": 6423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6344,
											"end": 6423,
											"name": "tag",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 6344,
											"end": 6423,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6306,
											"end": 6425,
											"name": "tag",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 6306,
											"end": 6425,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6443,
											"end": 6466,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 6459,
											"end": 6465,
											"name": "PUSH",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 6443,
											"end": 6466,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 6443,
											"end": 6466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6443,
											"end": 6466,
											"name": "tag",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 6443,
											"end": 6466,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6434,
											"end": 6466,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6434,
											"end": 6466,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6534,
											"end": 6535,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6574,
											"end": 6675,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 6671,
											"end": 6674,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6662,
											"end": 6668,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6651,
											"end": 6660,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6647,
											"end": 6669,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6574,
											"end": 6675,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "181"
										},
										{
											"begin": 6574,
											"end": 6675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6574,
											"end": 6675,
											"name": "tag",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 6574,
											"end": 6675,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6567,
											"end": 6571,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6560,
											"end": 6565,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6556,
											"end": 6572,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6549,
											"end": 6676,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6476,
											"end": 6687,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6756,
											"end": 6758,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6797,
											"end": 6857,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 6853,
											"end": 6856,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6844,
											"end": 6850,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6833,
											"end": 6842,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6829,
											"end": 6851,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6797,
											"end": 6857,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "184"
										},
										{
											"begin": 6797,
											"end": 6857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6797,
											"end": 6857,
											"name": "tag",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 6797,
											"end": 6857,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6790,
											"end": 6794,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6783,
											"end": 6788,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6779,
											"end": 6795,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6772,
											"end": 6858,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6697,
											"end": 6869,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6943,
											"end": 6945,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6984,
											"end": 7044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 7040,
											"end": 7043,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7031,
											"end": 7037,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7020,
											"end": 7029,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7016,
											"end": 7038,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6984,
											"end": 7044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "184"
										},
										{
											"begin": 6984,
											"end": 7044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6984,
											"end": 7044,
											"name": "tag",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 6984,
											"end": 7044,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6977,
											"end": 6981,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6970,
											"end": 6975,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6966,
											"end": 6982,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6959,
											"end": 7045,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6879,
											"end": 7056,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7131,
											"end": 7133,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 7172,
											"end": 7232,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "292"
										},
										{
											"begin": 7228,
											"end": 7231,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7219,
											"end": 7225,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7208,
											"end": 7217,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7204,
											"end": 7226,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7172,
											"end": 7232,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "184"
										},
										{
											"begin": 7172,
											"end": 7232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7172,
											"end": 7232,
											"name": "tag",
											"source": 8,
											"value": "292"
										},
										{
											"begin": 7172,
											"end": 7232,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7165,
											"end": 7169,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 7158,
											"end": 7163,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7154,
											"end": 7170,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7147,
											"end": 7233,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7066,
											"end": 7244,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7324,
											"end": 7327,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 7366,
											"end": 7426,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 7422,
											"end": 7425,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7413,
											"end": 7419,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7402,
											"end": 7411,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7398,
											"end": 7420,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7366,
											"end": 7426,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "184"
										},
										{
											"begin": 7366,
											"end": 7426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7366,
											"end": 7426,
											"name": "tag",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 7366,
											"end": 7426,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7359,
											"end": 7363,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 7352,
											"end": 7357,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7348,
											"end": 7364,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7341,
											"end": 7427,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7254,
											"end": 7438,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7516,
											"end": 7519,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 7558,
											"end": 7618,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 7614,
											"end": 7617,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7605,
											"end": 7611,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7594,
											"end": 7603,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7590,
											"end": 7612,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7558,
											"end": 7618,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "184"
										},
										{
											"begin": 7558,
											"end": 7618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7558,
											"end": 7618,
											"name": "tag",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 7558,
											"end": 7618,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7551,
											"end": 7555,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 7544,
											"end": 7549,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7540,
											"end": 7556,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7533,
											"end": 7619,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7448,
											"end": 7630,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7704,
											"end": 7707,
											"name": "PUSH",
											"source": 8,
											"value": "C0"
										},
										{
											"begin": 7746,
											"end": 7805,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 7801,
											"end": 7804,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7792,
											"end": 7798,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7781,
											"end": 7790,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7777,
											"end": 7799,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7746,
											"end": 7805,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 7746,
											"end": 7805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7746,
											"end": 7805,
											"name": "tag",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 7746,
											"end": 7805,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7739,
											"end": 7743,
											"name": "PUSH",
											"source": 8,
											"value": "C0"
										},
										{
											"begin": 7732,
											"end": 7737,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7728,
											"end": 7744,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7721,
											"end": 7806,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7640,
											"end": 7817,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7885,
											"end": 7888,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 7927,
											"end": 7987,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 7983,
											"end": 7986,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7974,
											"end": 7980,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7963,
											"end": 7972,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7959,
											"end": 7981,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7927,
											"end": 7987,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "189"
										},
										{
											"begin": 7927,
											"end": 7987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7927,
											"end": 7987,
											"name": "tag",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 7927,
											"end": 7987,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7920,
											"end": 7924,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 7913,
											"end": 7918,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7909,
											"end": 7925,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7902,
											"end": 7988,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7827,
											"end": 7999,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8076,
											"end": 8079,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 8120,
											"end": 8180,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 8176,
											"end": 8179,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8167,
											"end": 8173,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8156,
											"end": 8165,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 8152,
											"end": 8174,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8120,
											"end": 8180,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "189"
										},
										{
											"begin": 8120,
											"end": 8180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8120,
											"end": 8180,
											"name": "tag",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 8120,
											"end": 8180,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8111,
											"end": 8117,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 8104,
											"end": 8109,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8100,
											"end": 8118,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8093,
											"end": 8181,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8009,
											"end": 8192,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8271,
											"end": 8274,
											"name": "PUSH",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 8315,
											"end": 8375,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "298"
										},
										{
											"begin": 8371,
											"end": 8374,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8362,
											"end": 8368,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8351,
											"end": 8360,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 8347,
											"end": 8369,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8315,
											"end": 8375,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "189"
										},
										{
											"begin": 8315,
											"end": 8375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8315,
											"end": 8375,
											"name": "tag",
											"source": 8,
											"value": "298"
										},
										{
											"begin": 8315,
											"end": 8375,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8306,
											"end": 8312,
											"name": "PUSH",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 8299,
											"end": 8304,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8295,
											"end": 8313,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8288,
											"end": 8376,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8202,
											"end": 8387,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8469,
											"end": 8472,
											"name": "PUSH",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 8513,
											"end": 8573,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 8569,
											"end": 8572,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8560,
											"end": 8566,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8549,
											"end": 8558,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 8545,
											"end": 8567,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8513,
											"end": 8573,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "189"
										},
										{
											"begin": 8513,
											"end": 8573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8513,
											"end": 8573,
											"name": "tag",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 8513,
											"end": 8573,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8504,
											"end": 8510,
											"name": "PUSH",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 8497,
											"end": 8502,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8493,
											"end": 8511,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8486,
											"end": 8574,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8397,
											"end": 8585,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8642,
											"end": 8645,
											"name": "PUSH",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 8686,
											"end": 8744,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "300"
										},
										{
											"begin": 8740,
											"end": 8743,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8731,
											"end": 8737,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8720,
											"end": 8729,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 8716,
											"end": 8738,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8686,
											"end": 8744,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 8686,
											"end": 8744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8686,
											"end": 8744,
											"name": "tag",
											"source": 8,
											"value": "300"
										},
										{
											"begin": 8686,
											"end": 8744,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8677,
											"end": 8683,
											"name": "PUSH",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 8670,
											"end": 8675,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8666,
											"end": 8684,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8659,
											"end": 8745,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8595,
											"end": 8756,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6201,
											"end": 8763,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6201,
											"end": 8763,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6201,
											"end": 8763,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6201,
											"end": 8763,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6201,
											"end": 8763,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8769,
											"end": 9179,
											"name": "tag",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 8769,
											"end": 9179,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8868,
											"end": 8874,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8917,
											"end": 8920,
											"name": "PUSH",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 8905,
											"end": 8914,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8896,
											"end": 8903,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8892,
											"end": 8915,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8888,
											"end": 8921,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 8885,
											"end": 9005,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8885,
											"end": 9005,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 8885,
											"end": 9005,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8924,
											"end": 9003,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 8924,
											"end": 9003,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 8924,
											"end": 9003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8924,
											"end": 9003,
											"name": "tag",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 8924,
											"end": 9003,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8885,
											"end": 9005,
											"name": "tag",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 8885,
											"end": 9005,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9044,
											"end": 9045,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9069,
											"end": 9162,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 9154,
											"end": 9161,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9145,
											"end": 9151,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9134,
											"end": 9143,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 9130,
											"end": 9152,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9069,
											"end": 9162,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 9069,
											"end": 9162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9069,
											"end": 9162,
											"name": "tag",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 9069,
											"end": 9162,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9059,
											"end": 9162,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9059,
											"end": 9162,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9015,
											"end": 9172,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8769,
											"end": 9179,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8769,
											"end": 9179,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8769,
											"end": 9179,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8769,
											"end": 9179,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8769,
											"end": 9179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9185,
											"end": 9536,
											"name": "tag",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 9185,
											"end": 9536,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9255,
											"end": 9261,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9304,
											"end": 9306,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9292,
											"end": 9301,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9283,
											"end": 9290,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9279,
											"end": 9302,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9275,
											"end": 9307,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 9272,
											"end": 9391,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9272,
											"end": 9391,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 9272,
											"end": 9391,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9310,
											"end": 9389,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 9310,
											"end": 9389,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 9310,
											"end": 9389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9310,
											"end": 9389,
											"name": "tag",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 9310,
											"end": 9389,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9272,
											"end": 9391,
											"name": "tag",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 9272,
											"end": 9391,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9430,
											"end": 9431,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9455,
											"end": 9519,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 9511,
											"end": 9518,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9502,
											"end": 9508,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9491,
											"end": 9500,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 9487,
											"end": 9509,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9455,
											"end": 9519,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 9455,
											"end": 9519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9455,
											"end": 9519,
											"name": "tag",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 9455,
											"end": 9519,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9445,
											"end": 9519,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9445,
											"end": 9519,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9401,
											"end": 9529,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9185,
											"end": 9536,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9185,
											"end": 9536,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9185,
											"end": 9536,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9185,
											"end": 9536,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9185,
											"end": 9536,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9542,
											"end": 9721,
											"name": "tag",
											"source": 8,
											"value": "194"
										},
										{
											"begin": 9542,
											"end": 9721,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9682,
											"end": 9713,
											"name": "PUSH",
											"source": 8,
											"value": "5573657220646F6E27742068617665206465706F736974656420455448000000"
										},
										{
											"begin": 9678,
											"end": 9679,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9670,
											"end": 9676,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9666,
											"end": 9680,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9659,
											"end": 9714,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9542,
											"end": 9721,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9542,
											"end": 9721,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9727,
											"end": 10093,
											"name": "tag",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 9727,
											"end": 10093,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9869,
											"end": 9872,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9890,
											"end": 9957,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "311"
										},
										{
											"begin": 9954,
											"end": 9956,
											"name": "PUSH",
											"source": 8,
											"value": "1D"
										},
										{
											"begin": 9949,
											"end": 9952,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9890,
											"end": 9957,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 9890,
											"end": 9957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9890,
											"end": 9957,
											"name": "tag",
											"source": 8,
											"value": "311"
										},
										{
											"begin": 9890,
											"end": 9957,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9883,
											"end": 9957,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9883,
											"end": 9957,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9966,
											"end": 10059,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "312"
										},
										{
											"begin": 10055,
											"end": 10058,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9966,
											"end": 10059,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "194"
										},
										{
											"begin": 9966,
											"end": 10059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9966,
											"end": 10059,
											"name": "tag",
											"source": 8,
											"value": "312"
										},
										{
											"begin": 9966,
											"end": 10059,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10084,
											"end": 10086,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10079,
											"end": 10082,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10075,
											"end": 10087,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10068,
											"end": 10087,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10068,
											"end": 10087,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9727,
											"end": 10093,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9727,
											"end": 10093,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9727,
											"end": 10093,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9727,
											"end": 10093,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10099,
											"end": 10518,
											"name": "tag",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 10099,
											"end": 10518,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10265,
											"end": 10269,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10303,
											"end": 10305,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10292,
											"end": 10301,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10288,
											"end": 10306,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10280,
											"end": 10306,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10280,
											"end": 10306,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10352,
											"end": 10361,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10346,
											"end": 10350,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10342,
											"end": 10362,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10338,
											"end": 10339,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10327,
											"end": 10336,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10323,
											"end": 10340,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10316,
											"end": 10363,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10380,
											"end": 10511,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 10506,
											"end": 10510,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10380,
											"end": 10511,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 10380,
											"end": 10511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10380,
											"end": 10511,
											"name": "tag",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 10380,
											"end": 10511,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10372,
											"end": 10511,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10372,
											"end": 10511,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10099,
											"end": 10518,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10099,
											"end": 10518,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10099,
											"end": 10518,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10099,
											"end": 10518,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10524,
											"end": 10715,
											"name": "tag",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 10524,
											"end": 10715,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10564,
											"end": 10568,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10584,
											"end": 10604,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 10602,
											"end": 10603,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10584,
											"end": 10604,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 10584,
											"end": 10604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10584,
											"end": 10604,
											"name": "tag",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 10584,
											"end": 10604,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10579,
											"end": 10604,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10579,
											"end": 10604,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10618,
											"end": 10638,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 10636,
											"end": 10637,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10618,
											"end": 10638,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 10618,
											"end": 10638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10618,
											"end": 10638,
											"name": "tag",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 10618,
											"end": 10638,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10613,
											"end": 10638,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10613,
											"end": 10638,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10657,
											"end": 10658,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10654,
											"end": 10655,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10651,
											"end": 10659,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 10648,
											"end": 10682,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10648,
											"end": 10682,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 10648,
											"end": 10682,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10662,
											"end": 10680,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 10662,
											"end": 10680,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 10662,
											"end": 10680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10662,
											"end": 10680,
											"name": "tag",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 10662,
											"end": 10680,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10648,
											"end": 10682,
											"name": "tag",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 10648,
											"end": 10682,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10707,
											"end": 10708,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10704,
											"end": 10705,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10700,
											"end": 10709,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10692,
											"end": 10709,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10692,
											"end": 10709,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10524,
											"end": 10715,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10524,
											"end": 10715,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10524,
											"end": 10715,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10524,
											"end": 10715,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10524,
											"end": 10715,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10721,
											"end": 10868,
											"name": "tag",
											"source": 8,
											"value": "196"
										},
										{
											"begin": 10721,
											"end": 10868,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10822,
											"end": 10833,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10859,
											"end": 10862,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10844,
											"end": 10862,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10844,
											"end": 10862,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10721,
											"end": 10868,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10721,
											"end": 10868,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10721,
											"end": 10868,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10721,
											"end": 10868,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10721,
											"end": 10868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10874,
											"end": 10988,
											"name": "tag",
											"source": 8,
											"value": "197"
										},
										{
											"begin": 10874,
											"end": 10988,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10874,
											"end": 10988,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10874,
											"end": 10988,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10994,
											"end": 11392,
											"name": "tag",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 10994,
											"end": 11392,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11153,
											"end": 11156,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11174,
											"end": 11257,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 11255,
											"end": 11256,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11250,
											"end": 11253,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11174,
											"end": 11257,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "196"
										},
										{
											"begin": 11174,
											"end": 11257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11174,
											"end": 11257,
											"name": "tag",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 11174,
											"end": 11257,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11167,
											"end": 11257,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11167,
											"end": 11257,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11266,
											"end": 11359,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 11355,
											"end": 11358,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11266,
											"end": 11359,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "197"
										},
										{
											"begin": 11266,
											"end": 11359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11266,
											"end": 11359,
											"name": "tag",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 11266,
											"end": 11359,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11384,
											"end": 11385,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11379,
											"end": 11382,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11375,
											"end": 11386,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11368,
											"end": 11386,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11368,
											"end": 11386,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10994,
											"end": 11392,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10994,
											"end": 11392,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10994,
											"end": 11392,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10994,
											"end": 11392,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11398,
											"end": 11777,
											"name": "tag",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 11398,
											"end": 11777,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11582,
											"end": 11585,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11604,
											"end": 11751,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "326"
										},
										{
											"begin": 11747,
											"end": 11750,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11604,
											"end": 11751,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 11604,
											"end": 11751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11604,
											"end": 11751,
											"name": "tag",
											"source": 8,
											"value": "326"
										},
										{
											"begin": 11604,
											"end": 11751,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11597,
											"end": 11751,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11597,
											"end": 11751,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11768,
											"end": 11771,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11761,
											"end": 11771,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11761,
											"end": 11771,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11398,
											"end": 11777,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11398,
											"end": 11777,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11398,
											"end": 11777,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11398,
											"end": 11777,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11783,
											"end": 11949,
											"name": "tag",
											"source": 8,
											"value": "199"
										},
										{
											"begin": 11783,
											"end": 11949,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11923,
											"end": 11941,
											"name": "PUSH",
											"source": 8,
											"value": "5472616E73666572206661696C65642E00000000000000000000000000000000"
										},
										{
											"begin": 11919,
											"end": 11920,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11911,
											"end": 11917,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11907,
											"end": 11921,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11900,
											"end": 11942,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11783,
											"end": 11949,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11783,
											"end": 11949,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11955,
											"end": 12321,
											"name": "tag",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 11955,
											"end": 12321,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12097,
											"end": 12100,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12118,
											"end": 12185,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 12182,
											"end": 12184,
											"name": "PUSH",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 12177,
											"end": 12180,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12118,
											"end": 12185,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 12118,
											"end": 12185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12118,
											"end": 12185,
											"name": "tag",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 12118,
											"end": 12185,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12111,
											"end": 12185,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12111,
											"end": 12185,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12194,
											"end": 12287,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 12283,
											"end": 12286,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12194,
											"end": 12287,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "199"
										},
										{
											"begin": 12194,
											"end": 12287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12194,
											"end": 12287,
											"name": "tag",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 12194,
											"end": 12287,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12312,
											"end": 12314,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12307,
											"end": 12310,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12303,
											"end": 12315,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12296,
											"end": 12315,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12296,
											"end": 12315,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11955,
											"end": 12321,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11955,
											"end": 12321,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11955,
											"end": 12321,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11955,
											"end": 12321,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12327,
											"end": 12746,
											"name": "tag",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 12327,
											"end": 12746,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12493,
											"end": 12497,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12531,
											"end": 12533,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12520,
											"end": 12529,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12516,
											"end": 12534,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12508,
											"end": 12534,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12508,
											"end": 12534,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12580,
											"end": 12589,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12574,
											"end": 12578,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12570,
											"end": 12590,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12566,
											"end": 12567,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12555,
											"end": 12564,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12551,
											"end": 12568,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12544,
											"end": 12591,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12608,
											"end": 12739,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 12734,
											"end": 12738,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12608,
											"end": 12739,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 12608,
											"end": 12739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12608,
											"end": 12739,
											"name": "tag",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 12608,
											"end": 12739,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12600,
											"end": 12739,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12600,
											"end": 12739,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12327,
											"end": 12746,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12327,
											"end": 12746,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12327,
											"end": 12746,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12327,
											"end": 12746,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12752,
											"end": 13100,
											"name": "tag",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 12752,
											"end": 13100,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12792,
											"end": 12799,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12815,
											"end": 12835,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 12833,
											"end": 12834,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12815,
											"end": 12835,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 12815,
											"end": 12835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12815,
											"end": 12835,
											"name": "tag",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 12815,
											"end": 12835,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12810,
											"end": 12835,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12810,
											"end": 12835,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12849,
											"end": 12869,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "335"
										},
										{
											"begin": 12867,
											"end": 12868,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12849,
											"end": 12869,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 12849,
											"end": 12869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12849,
											"end": 12869,
											"name": "tag",
											"source": 8,
											"value": "335"
										},
										{
											"begin": 12849,
											"end": 12869,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12844,
											"end": 12869,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 12844,
											"end": 12869,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13037,
											"end": 13038,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12969,
											"end": 13035,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12965,
											"end": 13039,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 12962,
											"end": 12963,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12959,
											"end": 13040,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 12954,
											"end": 12955,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12947,
											"end": 12956,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 12940,
											"end": 12957,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 12936,
											"end": 13041,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 12933,
											"end": 13064,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 12933,
											"end": 13064,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 12933,
											"end": 13064,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 13044,
											"end": 13062,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "337"
										},
										{
											"begin": 13044,
											"end": 13062,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 13044,
											"end": 13062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13044,
											"end": 13062,
											"name": "tag",
											"source": 8,
											"value": "337"
										},
										{
											"begin": 13044,
											"end": 13062,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12933,
											"end": 13064,
											"name": "tag",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 12933,
											"end": 13064,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13092,
											"end": 13093,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13089,
											"end": 13090,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13085,
											"end": 13094,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 13074,
											"end": 13094,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13074,
											"end": 13094,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12752,
											"end": 13100,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 12752,
											"end": 13100,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12752,
											"end": 13100,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12752,
											"end": 13100,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12752,
											"end": 13100,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13106,
											"end": 13286,
											"name": "tag",
											"source": 8,
											"value": "201"
										},
										{
											"begin": 13106,
											"end": 13286,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13154,
											"end": 13231,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13151,
											"end": 13152,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13144,
											"end": 13232,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13251,
											"end": 13255,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 13248,
											"end": 13249,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 13241,
											"end": 13256,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13275,
											"end": 13279,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 13272,
											"end": 13273,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13265,
											"end": 13280,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 13292,
											"end": 13477,
											"name": "tag",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 13292,
											"end": 13477,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13332,
											"end": 13333,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13349,
											"end": 13369,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "340"
										},
										{
											"begin": 13367,
											"end": 13368,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13349,
											"end": 13369,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 13349,
											"end": 13369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13349,
											"end": 13369,
											"name": "tag",
											"source": 8,
											"value": "340"
										},
										{
											"begin": 13349,
											"end": 13369,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13344,
											"end": 13369,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13344,
											"end": 13369,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13383,
											"end": 13403,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 13401,
											"end": 13402,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13383,
											"end": 13403,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 13383,
											"end": 13403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13383,
											"end": 13403,
											"name": "tag",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 13383,
											"end": 13403,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13378,
											"end": 13403,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 13378,
											"end": 13403,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13422,
											"end": 13423,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13412,
											"end": 13447,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "342"
										},
										{
											"begin": 13412,
											"end": 13447,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 13427,
											"end": 13445,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "343"
										},
										{
											"begin": 13427,
											"end": 13445,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "201"
										},
										{
											"begin": 13427,
											"end": 13445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13427,
											"end": 13445,
											"name": "tag",
											"source": 8,
											"value": "343"
										},
										{
											"begin": 13427,
											"end": 13445,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13412,
											"end": 13447,
											"name": "tag",
											"source": 8,
											"value": "342"
										},
										{
											"begin": 13412,
											"end": 13447,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13469,
											"end": 13470,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13466,
											"end": 13467,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13462,
											"end": 13471,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 13457,
											"end": 13471,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13457,
											"end": 13471,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13292,
											"end": 13477,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 13292,
											"end": 13477,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13292,
											"end": 13477,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13292,
											"end": 13477,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13292,
											"end": 13477,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13483,
											"end": 13663,
											"name": "tag",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 13483,
											"end": 13663,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13531,
											"end": 13608,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13528,
											"end": 13529,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13521,
											"end": 13609,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13628,
											"end": 13632,
											"name": "PUSH",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 13625,
											"end": 13626,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 13618,
											"end": 13633,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13652,
											"end": 13656,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 13649,
											"end": 13650,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13642,
											"end": 13657,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 13669,
											"end": 13902,
											"name": "tag",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 13669,
											"end": 13902,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13708,
											"end": 13711,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13731,
											"end": 13755,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "346"
										},
										{
											"begin": 13749,
											"end": 13754,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13731,
											"end": 13755,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 13731,
											"end": 13755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13731,
											"end": 13755,
											"name": "tag",
											"source": 8,
											"value": "346"
										},
										{
											"begin": 13731,
											"end": 13755,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13722,
											"end": 13755,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13722,
											"end": 13755,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13777,
											"end": 13843,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13770,
											"end": 13775,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13767,
											"end": 13844,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 13764,
											"end": 13867,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "347"
										},
										{
											"begin": 13764,
											"end": 13867,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 13847,
											"end": 13865,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "348"
										},
										{
											"begin": 13847,
											"end": 13865,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 13847,
											"end": 13865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13847,
											"end": 13865,
											"name": "tag",
											"source": 8,
											"value": "348"
										},
										{
											"begin": 13847,
											"end": 13865,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13764,
											"end": 13867,
											"name": "tag",
											"source": 8,
											"value": "347"
										},
										{
											"begin": 13764,
											"end": 13867,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13894,
											"end": 13895,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 13887,
											"end": 13892,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13883,
											"end": 13896,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13876,
											"end": 13896,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13876,
											"end": 13896,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13669,
											"end": 13902,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13669,
											"end": 13902,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13669,
											"end": 13902,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13669,
											"end": 13902,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13908,
											"end": 14128,
											"name": "tag",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 13908,
											"end": 14128,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14048,
											"end": 14082,
											"name": "PUSH",
											"source": 8,
											"value": "4F6E6C79206F776E65722063616E2063616C6C20746869732066756E6374696F"
										},
										{
											"begin": 14044,
											"end": 14045,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14036,
											"end": 14042,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14032,
											"end": 14046,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14025,
											"end": 14083,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14117,
											"end": 14120,
											"name": "PUSH",
											"source": 8,
											"value": "6E00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14112,
											"end": 14114,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14104,
											"end": 14110,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14100,
											"end": 14115,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14093,
											"end": 14121,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13908,
											"end": 14128,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13908,
											"end": 14128,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14134,
											"end": 14500,
											"name": "tag",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 14134,
											"end": 14500,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14276,
											"end": 14279,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14297,
											"end": 14364,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 14361,
											"end": 14363,
											"name": "PUSH",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 14356,
											"end": 14359,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14297,
											"end": 14364,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 14297,
											"end": 14364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14297,
											"end": 14364,
											"name": "tag",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 14297,
											"end": 14364,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14290,
											"end": 14364,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14290,
											"end": 14364,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14373,
											"end": 14466,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "352"
										},
										{
											"begin": 14462,
											"end": 14465,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14373,
											"end": 14466,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 14373,
											"end": 14466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14373,
											"end": 14466,
											"name": "tag",
											"source": 8,
											"value": "352"
										},
										{
											"begin": 14373,
											"end": 14466,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14491,
											"end": 14493,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 14486,
											"end": 14489,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14482,
											"end": 14494,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14475,
											"end": 14494,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14475,
											"end": 14494,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14134,
											"end": 14500,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14134,
											"end": 14500,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14134,
											"end": 14500,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14134,
											"end": 14500,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14506,
											"end": 14925,
											"name": "tag",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 14506,
											"end": 14925,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14672,
											"end": 14676,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14710,
											"end": 14712,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14699,
											"end": 14708,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14695,
											"end": 14713,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14687,
											"end": 14713,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14687,
											"end": 14713,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14759,
											"end": 14768,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14753,
											"end": 14757,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14749,
											"end": 14769,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 14745,
											"end": 14746,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14734,
											"end": 14743,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14730,
											"end": 14747,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14723,
											"end": 14770,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14787,
											"end": 14918,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "354"
										},
										{
											"begin": 14913,
											"end": 14917,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14787,
											"end": 14918,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 14787,
											"end": 14918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14787,
											"end": 14918,
											"name": "tag",
											"source": 8,
											"value": "354"
										},
										{
											"begin": 14787,
											"end": 14918,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14779,
											"end": 14918,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14779,
											"end": 14918,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14506,
											"end": 14925,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14506,
											"end": 14925,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14506,
											"end": 14925,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14506,
											"end": 14925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14931,
											"end": 15016,
											"name": "tag",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 14931,
											"end": 15016,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14976,
											"end": 14983,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15005,
											"end": 15010,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14994,
											"end": 15010,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14994,
											"end": 15010,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14931,
											"end": 15016,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14931,
											"end": 15016,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14931,
											"end": 15016,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14931,
											"end": 15016,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15022,
											"end": 15111,
											"name": "tag",
											"source": 8,
											"value": "205"
										},
										{
											"begin": 15022,
											"end": 15111,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15058,
											"end": 15065,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15098,
											"end": 15104,
											"name": "PUSH",
											"source": 8,
											"value": "FFFF"
										},
										{
											"begin": 15091,
											"end": 15096,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15087,
											"end": 15105,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 15076,
											"end": 15105,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15076,
											"end": 15105,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15022,
											"end": 15111,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15022,
											"end": 15111,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15022,
											"end": 15111,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15022,
											"end": 15111,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15117,
											"end": 15177,
											"name": "tag",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 15117,
											"end": 15177,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15145,
											"end": 15148,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15166,
											"end": 15171,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15159,
											"end": 15171,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15159,
											"end": 15171,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15117,
											"end": 15177,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15117,
											"end": 15177,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15117,
											"end": 15177,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15117,
											"end": 15177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15183,
											"end": 15339,
											"name": "tag",
											"source": 8,
											"value": "207"
										},
										{
											"begin": 15183,
											"end": 15339,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15240,
											"end": 15249,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15273,
											"end": 15333,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "359"
										},
										{
											"begin": 15290,
											"end": 15332,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "360"
										},
										{
											"begin": 15299,
											"end": 15331,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "361"
										},
										{
											"begin": 15325,
											"end": 15330,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 15299,
											"end": 15331,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 15299,
											"end": 15331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15299,
											"end": 15331,
											"name": "tag",
											"source": 8,
											"value": "361"
										},
										{
											"begin": 15299,
											"end": 15331,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15290,
											"end": 15332,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 15290,
											"end": 15332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15290,
											"end": 15332,
											"name": "tag",
											"source": 8,
											"value": "360"
										},
										{
											"begin": 15290,
											"end": 15332,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15273,
											"end": 15333,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "205"
										},
										{
											"begin": 15273,
											"end": 15333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15273,
											"end": 15333,
											"name": "tag",
											"source": 8,
											"value": "359"
										},
										{
											"begin": 15273,
											"end": 15333,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15260,
											"end": 15333,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15260,
											"end": 15333,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15183,
											"end": 15339,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15183,
											"end": 15339,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15183,
											"end": 15339,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15183,
											"end": 15339,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15345,
											"end": 15490,
											"name": "tag",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 15345,
											"end": 15490,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15439,
											"end": 15483,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "363"
										},
										{
											"begin": 15477,
											"end": 15482,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15439,
											"end": 15483,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "207"
										},
										{
											"begin": 15439,
											"end": 15483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15439,
											"end": 15483,
											"name": "tag",
											"source": 8,
											"value": "363"
										},
										{
											"begin": 15439,
											"end": 15483,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15434,
											"end": 15437,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15427,
											"end": 15484,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15345,
											"end": 15490,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15345,
											"end": 15490,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15345,
											"end": 15490,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15496,
											"end": 16063,
											"name": "tag",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 15496,
											"end": 16063,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15680,
											"end": 15684,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15718,
											"end": 15721,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 15707,
											"end": 15716,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15703,
											"end": 15722,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15695,
											"end": 15722,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15695,
											"end": 15722,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15732,
											"end": 15803,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "365"
										},
										{
											"begin": 15800,
											"end": 15801,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15789,
											"end": 15798,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15785,
											"end": 15802,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15776,
											"end": 15782,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 15732,
											"end": 15803,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 15732,
											"end": 15803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15732,
											"end": 15803,
											"name": "tag",
											"source": 8,
											"value": "365"
										},
										{
											"begin": 15732,
											"end": 15803,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15813,
											"end": 15885,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 15881,
											"end": 15883,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 15870,
											"end": 15879,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15866,
											"end": 15884,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15857,
											"end": 15863,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 15813,
											"end": 15885,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "162"
										},
										{
											"begin": 15813,
											"end": 15885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15813,
											"end": 15885,
											"name": "tag",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 15813,
											"end": 15885,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15895,
											"end": 15967,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "367"
										},
										{
											"begin": 15963,
											"end": 15965,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 15952,
											"end": 15961,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15948,
											"end": 15966,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15939,
											"end": 15945,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 15895,
											"end": 15967,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 15895,
											"end": 15967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15895,
											"end": 15967,
											"name": "tag",
											"source": 8,
											"value": "367"
										},
										{
											"begin": 15895,
											"end": 15967,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15977,
											"end": 16056,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "368"
										},
										{
											"begin": 16052,
											"end": 16054,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 16041,
											"end": 16050,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 16037,
											"end": 16055,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16028,
											"end": 16034,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 15977,
											"end": 16056,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 15977,
											"end": 16056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15977,
											"end": 16056,
											"name": "tag",
											"source": 8,
											"value": "368"
										},
										{
											"begin": 15977,
											"end": 16056,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15496,
											"end": 16063,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 15496,
											"end": 16063,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 15496,
											"end": 16063,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15496,
											"end": 16063,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15496,
											"end": 16063,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15496,
											"end": 16063,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15496,
											"end": 16063,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15496,
											"end": 16063,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16069,
											"end": 16511,
											"name": "tag",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 16069,
											"end": 16511,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16218,
											"end": 16222,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16256,
											"end": 16258,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 16245,
											"end": 16254,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16241,
											"end": 16259,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16233,
											"end": 16259,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16233,
											"end": 16259,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16269,
											"end": 16340,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 16337,
											"end": 16338,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16326,
											"end": 16335,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 16322,
											"end": 16339,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16313,
											"end": 16319,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 16269,
											"end": 16340,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 16269,
											"end": 16340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16269,
											"end": 16340,
											"name": "tag",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 16269,
											"end": 16340,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16350,
											"end": 16422,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "371"
										},
										{
											"begin": 16418,
											"end": 16420,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 16407,
											"end": 16416,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 16403,
											"end": 16421,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16394,
											"end": 16400,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 16350,
											"end": 16422,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "162"
										},
										{
											"begin": 16350,
											"end": 16422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16350,
											"end": 16422,
											"name": "tag",
											"source": 8,
											"value": "371"
										},
										{
											"begin": 16350,
											"end": 16422,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16432,
											"end": 16504,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "372"
										},
										{
											"begin": 16500,
											"end": 16502,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 16489,
											"end": 16498,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 16485,
											"end": 16503,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16476,
											"end": 16482,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 16432,
											"end": 16504,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 16432,
											"end": 16504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16432,
											"end": 16504,
											"name": "tag",
											"source": 8,
											"value": "372"
										},
										{
											"begin": 16432,
											"end": 16504,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16069,
											"end": 16511,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 16069,
											"end": 16511,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 16069,
											"end": 16511,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16069,
											"end": 16511,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16069,
											"end": 16511,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16069,
											"end": 16511,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16069,
											"end": 16511,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16517,
											"end": 16849,
											"name": "tag",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 16517,
											"end": 16849,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16638,
											"end": 16642,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16676,
											"end": 16678,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 16665,
											"end": 16674,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16661,
											"end": 16679,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16653,
											"end": 16679,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16653,
											"end": 16679,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16689,
											"end": 16760,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "374"
										},
										{
											"begin": 16757,
											"end": 16758,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16746,
											"end": 16755,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 16742,
											"end": 16759,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16733,
											"end": 16739,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 16689,
											"end": 16760,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 16689,
											"end": 16760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16689,
											"end": 16760,
											"name": "tag",
											"source": 8,
											"value": "374"
										},
										{
											"begin": 16689,
											"end": 16760,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16770,
											"end": 16842,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "375"
										},
										{
											"begin": 16838,
											"end": 16840,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 16827,
											"end": 16836,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 16823,
											"end": 16841,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16814,
											"end": 16820,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 16770,
											"end": 16842,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "162"
										},
										{
											"begin": 16770,
											"end": 16842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16770,
											"end": 16842,
											"name": "tag",
											"source": 8,
											"value": "375"
										},
										{
											"begin": 16770,
											"end": 16842,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16517,
											"end": 16849,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 16517,
											"end": 16849,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 16517,
											"end": 16849,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16517,
											"end": 16849,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16517,
											"end": 16849,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16517,
											"end": 16849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16855,
											"end": 16945,
											"name": "tag",
											"source": 8,
											"value": "209"
										},
										{
											"begin": 16855,
											"end": 16945,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16889,
											"end": 16896,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16932,
											"end": 16937,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16925,
											"end": 16938,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 16918,
											"end": 16939,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 16907,
											"end": 16939,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16907,
											"end": 16939,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16855,
											"end": 16945,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16855,
											"end": 16945,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16855,
											"end": 16945,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16855,
											"end": 16945,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16951,
											"end": 17067,
											"name": "tag",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 16951,
											"end": 17067,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17021,
											"end": 17042,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "378"
										},
										{
											"begin": 17036,
											"end": 17041,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17021,
											"end": 17042,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "209"
										},
										{
											"begin": 17021,
											"end": 17042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17021,
											"end": 17042,
											"name": "tag",
											"source": 8,
											"value": "378"
										},
										{
											"begin": 17021,
											"end": 17042,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17014,
											"end": 17019,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17011,
											"end": 17043,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 17001,
											"end": 17061,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 17001,
											"end": 17061,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 17057,
											"end": 17058,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17054,
											"end": 17055,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 17047,
											"end": 17059,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 17001,
											"end": 17061,
											"name": "tag",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 17001,
											"end": 17061,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16951,
											"end": 17067,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16951,
											"end": 17067,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17073,
											"end": 17210,
											"name": "tag",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 17073,
											"end": 17210,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17127,
											"end": 17132,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17158,
											"end": 17164,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17152,
											"end": 17165,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 17143,
											"end": 17165,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17143,
											"end": 17165,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17174,
											"end": 17204,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "381"
										},
										{
											"begin": 17198,
											"end": 17203,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17174,
											"end": 17204,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 17174,
											"end": 17204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17174,
											"end": 17204,
											"name": "tag",
											"source": 8,
											"value": "381"
										},
										{
											"begin": 17174,
											"end": 17204,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17073,
											"end": 17210,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 17073,
											"end": 17210,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17073,
											"end": 17210,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17073,
											"end": 17210,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17073,
											"end": 17210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17216,
											"end": 17561,
											"name": "tag",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 17216,
											"end": 17561,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17283,
											"end": 17289,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17332,
											"end": 17334,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 17320,
											"end": 17329,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17311,
											"end": 17318,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 17307,
											"end": 17330,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 17303,
											"end": 17335,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 17300,
											"end": 17419,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 17300,
											"end": 17419,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "383"
										},
										{
											"begin": 17300,
											"end": 17419,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 17338,
											"end": 17417,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 17338,
											"end": 17417,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 17338,
											"end": 17417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17338,
											"end": 17417,
											"name": "tag",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 17338,
											"end": 17417,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17300,
											"end": 17419,
											"name": "tag",
											"source": 8,
											"value": "383"
										},
										{
											"begin": 17300,
											"end": 17419,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17458,
											"end": 17459,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17483,
											"end": 17544,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "385"
										},
										{
											"begin": 17536,
											"end": 17543,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 17527,
											"end": 17533,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17516,
											"end": 17525,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 17512,
											"end": 17534,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17483,
											"end": 17544,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 17483,
											"end": 17544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17483,
											"end": 17544,
											"name": "tag",
											"source": 8,
											"value": "385"
										},
										{
											"begin": 17483,
											"end": 17544,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17473,
											"end": 17544,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17473,
											"end": 17544,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17429,
											"end": 17554,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17216,
											"end": 17561,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 17216,
											"end": 17561,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17216,
											"end": 17561,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17216,
											"end": 17561,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17216,
											"end": 17561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"contracts/ERC20.sol",
								"contracts/StrongHands.sol",
								"https://github.com/aave/protocol-v2/blob/ice/mainnet-deployment-03-12-2020/contracts/dependencies/openzeppelin/contracts/IERC20.sol",
								"https://github.com/aave/protocol-v2/blob/ice/mainnet-deployment-03-12-2020/contracts/interfaces/IAToken.sol",
								"https://github.com/aave/protocol-v2/blob/ice/mainnet-deployment-03-12-2020/contracts/interfaces/ILendingPool.sol",
								"https://github.com/aave/protocol-v2/blob/ice/mainnet-deployment-03-12-2020/contracts/interfaces/ILendingPoolAddressesProvider.sol",
								"https://github.com/aave/protocol-v2/blob/ice/mainnet-deployment-03-12-2020/contracts/interfaces/IScaledBalanceToken.sol",
								"https://github.com/aave/protocol-v2/blob/ice/mainnet-deployment-03-12-2020/contracts/protocol/libraries/types/DataTypes.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"depositedAmount()": "1d01364c",
							"getCurrentBalanceOfATokens()": "c3d40853",
							"getMyEther()": "db88031a",
							"getUserData()": "22e8c87d",
							"sendEther()": "0e29df22",
							"sendKajmakToOwner()": "e2ec0c2d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lockTime\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"depositedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentBalanceOfATokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMyEther\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUserData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"v\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sendEther\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sendKajmakToOwner\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getCurrentBalanceOfATokens()\":{\"notice\":\"Returns current balance of AETH tokens for this contract*\"},\"getMyEther()\":{\"notice\":\"A function that returns ETH from AAVE Lending Pool to the user and distributes a portion  to other usersif the user has withdrawn ETH before a defined time period*\"},\"getUserData()\":{\"notice\":\"Function that returns deposited amount of ETH for the user*\"},\"sendEther()\":{\"notice\":\"Function that sends ETH to AAVE V2 Lending Pool *\"},\"sendKajmakToOwner()\":{\"notice\":\"A function that sends passive income to the owner of the contract. manager is the owner*\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/StrongHands.sol\":\"StrongHands\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC20.sol\":{\"keccak256\":\"0xd5385404fd9f537884fd58a9af6d5de6f2c3e456f7f2ccfc736786b83d41efe6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ab129ea7f9535d2efedccd91c963f22953eeb3a95a8c497dc532ce506f80843\",\"dweb:/ipfs/QmXucCSBURQNLsqKEKrRPySnPru2SGx5H11TuWC71HhzpK\"]},\"contracts/StrongHands.sol\":{\"keccak256\":\"0xe0c7e49b2dc2aaef3a859d5cc1292b86c7817e87cf6e1c9b3673c8ba35af9de2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f092b043d85b0fc5c93b3b4730ced7aaeb8c76f101384f80a3fceefde92ba17f\",\"dweb:/ipfs/QmYCRPk9xA4oYectHXwcqWhKMXbF5mnYjJiMWAZ3q8AswJ\"]},\"https://github.com/aave/protocol-v2/blob/ice/mainnet-deployment-03-12-2020/contracts/dependencies/openzeppelin/contracts/IERC20.sol\":{\"keccak256\":\"0x262369e206d62d5ee68b397937b68c97ff28fd939924d5d29e18ba9bb808a910\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://66cef1980a58f42e84e323c803e69b31f47e4d5ceaee4c26311f5fb6dd009a69\",\"dweb:/ipfs/QmdSbJ4cR1KwMGcmzewBdzjWsGuLMRJqxD3zonJeivDknD\"]},\"https://github.com/aave/protocol-v2/blob/ice/mainnet-deployment-03-12-2020/contracts/interfaces/IAToken.sol\":{\"keccak256\":\"0xee4945f62d69170ec88199627ef72183c7041e06742936f96ebc5ea358635dd4\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://ff84aac62a5577747801bbd5ec20155ebb834f9511fc363d517fa8de1cd5cb81\",\"dweb:/ipfs/QmVAHsvc9rPThqCX9N3jKRQVBHgYjE6ZJ1hjm84BgxQjZy\"]},\"https://github.com/aave/protocol-v2/blob/ice/mainnet-deployment-03-12-2020/contracts/interfaces/ILendingPool.sol\":{\"keccak256\":\"0x4317aab800a42f977aca3cdfd8d5b6f13020febc15a955df0ef967fad29ddfd1\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://7a42a21607a436b318ecc8f89c706de8160bb2339a6d51f785f7b211140ef5ca\",\"dweb:/ipfs/QmXzTRS5rzy3yFSGGfFaaWiyWNayXkzdTNuSMx7GPggSVy\"]},\"https://github.com/aave/protocol-v2/blob/ice/mainnet-deployment-03-12-2020/contracts/interfaces/ILendingPoolAddressesProvider.sol\":{\"keccak256\":\"0xd8d09ab923d429b8b27eafa7049d021393189e0c80b8f374084f77b201ea1073\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://9549c766e722380c52a51a6a76ffa9940ed7b33caa69de74bbe947cd47b417d3\",\"dweb:/ipfs/Qmao6cZZ4XrJqaF2ErPL3LwoDtbc1LxXeztKThHSt96H1t\"]},\"https://github.com/aave/protocol-v2/blob/ice/mainnet-deployment-03-12-2020/contracts/interfaces/IScaledBalanceToken.sol\":{\"keccak256\":\"0x1c0007fd8eed6f7db52faee18dc962954667abc52b6f9b18692b7baba7b7c6a7\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://4ddf803cb1ee8816678afc08d67c5582242b5b8f72e86e4d81714b82fd691399\",\"dweb:/ipfs/Qma9qV2X46K64fTpTF8wo8yM3D9uBdxDfoCi19u8nmrsR6\"]},\"https://github.com/aave/protocol-v2/blob/ice/mainnet-deployment-03-12-2020/contracts/protocol/libraries/types/DataTypes.sol\":{\"keccak256\":\"0x64512f0d56b4c8ec7af33836fe00ad547cd47d71ffdd9ca8a1f2b867da425fd3\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://0207d03b9e11cd8db58021f6b8153bef483477daf43607306769c16a8da204a8\",\"dweb:/ipfs/QmfL33Rf1ZGUBVm6gcyEXKbZE3PzLuoGQR3d3CCfQhrcSk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 61,
								"contract": "contracts/StrongHands.sol:StrongHands",
								"label": "allUsers",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_struct(user)56_storage)"
							},
							{
								"astId": 64,
								"contract": "contracts/StrongHands.sol:StrongHands",
								"label": "usernames",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 66,
								"contract": "contracts/StrongHands.sol:StrongHands",
								"label": "manager",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 74,
								"contract": "contracts/StrongHands.sol:StrongHands",
								"label": "provider",
								"offset": 0,
								"slot": "3",
								"type": "t_contract(ILendingPoolAddressesProvider)1336"
							},
							{
								"astId": 77,
								"contract": "contracts/StrongHands.sol:StrongHands",
								"label": "lending_pool",
								"offset": 0,
								"slot": "4",
								"type": "t_contract(ILendingPool)1185"
							},
							{
								"astId": 79,
								"contract": "contracts/StrongHands.sol:StrongHands",
								"label": "depositedAmount",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(ILendingPool)1185": {
								"encoding": "inplace",
								"label": "contract ILendingPool",
								"numberOfBytes": "20"
							},
							"t_contract(ILendingPoolAddressesProvider)1336": {
								"encoding": "inplace",
								"label": "contract ILendingPoolAddressesProvider",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(user)56_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct StrongHands.user)",
								"numberOfBytes": "32",
								"value": "t_struct(user)56_storage"
							},
							"t_struct(user)56_storage": {
								"encoding": "inplace",
								"label": "struct StrongHands.user",
								"members": [
									{
										"astId": 51,
										"contract": "contracts/StrongHands.sol:StrongHands",
										"label": "value",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 53,
										"contract": "contracts/StrongHands.sol:StrongHands",
										"label": "lockTime",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 55,
										"contract": "contracts/StrongHands.sol:StrongHands",
										"label": "flag",
										"offset": 0,
										"slot": "2",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"getCurrentBalanceOfATokens()": {
								"notice": "Returns current balance of AETH tokens for this contract*"
							},
							"getMyEther()": {
								"notice": "A function that returns ETH from AAVE Lending Pool to the user and distributes a portion  to other usersif the user has withdrawn ETH before a defined time period*"
							},
							"getUserData()": {
								"notice": "Function that returns deposited amount of ETH for the user*"
							},
							"sendEther()": {
								"notice": "Function that sends ETH to AAVE V2 Lending Pool *"
							},
							"sendKajmakToOwner()": {
								"notice": "A function that sends passive income to the owner of the contract. manager is the owner*"
							}
						},
						"version": 1
					}
				}
			},
			"https://github.com/aave/protocol-v2/blob/ice/mainnet-deployment-03-12-2020/contracts/dependencies/openzeppelin/contracts/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/aave/protocol-v2/blob/ice/mainnet-deployment-03-12-2020/contracts/dependencies/openzeppelin/contracts/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/aave/protocol-v2/blob/ice/mainnet-deployment-03-12-2020/contracts/dependencies/openzeppelin/contracts/IERC20.sol\":{\"keccak256\":\"0x262369e206d62d5ee68b397937b68c97ff28fd939924d5d29e18ba9bb808a910\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://66cef1980a58f42e84e323c803e69b31f47e4d5ceaee4c26311f5fb6dd009a69\",\"dweb:/ipfs/QmdSbJ4cR1KwMGcmzewBdzjWsGuLMRJqxD3zonJeivDknD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/aave/protocol-v2/blob/ice/mainnet-deployment-03-12-2020/contracts/interfaces/IAToken.sol": {
				"IAToken": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "BalanceTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "target",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "receiverOfUnderlying",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getScaledUserBalanceAndSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "mintToTreasury",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "scaledBalanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "scaledTotalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferOnLiquidation",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferUnderlyingTo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"BalanceTransfer(address,address,uint256,uint256)": {
								"details": "Emitted during the transfer action",
								"params": {
									"from": "The user whose tokens are being transferred",
									"index": "The new liquidity index of the reserve*",
									"to": "The recipient",
									"value": "The amount being transferred"
								}
							},
							"Burn(address,address,uint256,uint256)": {
								"details": "Emitted after aTokens are burned",
								"params": {
									"from": "The owner of the aTokens, getting them burned",
									"index": "The new liquidity index of the reserve*",
									"target": "The address that will receive the underlying",
									"value": "The amount being burned"
								}
							},
							"Mint(address,uint256,uint256)": {
								"details": "Emitted after the mint action",
								"params": {
									"from": "The address performing the mint",
									"index": "The new liquidity index of the reserve*",
									"value": "The amount being"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"burn(address,address,uint256,uint256)": {
								"details": "Burns aTokens from `user` and sends the equivalent amount of underlying to `receiverOfUnderlying`",
								"params": {
									"amount": "The amount being burned",
									"index": "The new liquidity index of the reserve*",
									"receiverOfUnderlying": "The address that will receive the underlying",
									"user": "The owner of the aTokens, getting them burned"
								}
							},
							"getScaledUserBalanceAndSupply(address)": {
								"details": "Returns the scaled balance of the user and the scaled total supply.",
								"params": {
									"user": "The address of the user"
								},
								"returns": {
									"_0": "The scaled balance of the user",
									"_1": "The scaled balance and the scaled total supply*"
								}
							},
							"mint(address,uint256,uint256)": {
								"details": "Mints `amount` aTokens to `user`",
								"params": {
									"amount": "The amount of tokens getting minted",
									"index": "The new liquidity index of the reserve",
									"user": "The address receiving the minted tokens"
								},
								"returns": {
									"_0": "`true` if the the previous balance of the user was 0"
								}
							},
							"mintToTreasury(uint256,uint256)": {
								"details": "Mints aTokens to the reserve treasury",
								"params": {
									"amount": "The amount of tokens getting minted",
									"index": "The new liquidity index of the reserve"
								}
							},
							"scaledBalanceOf(address)": {
								"details": "Returns the scaled balance of the user. The scaled balance is the sum of all the updated stored balance divided by the reserve's liquidity index at the moment of the update",
								"params": {
									"user": "The user whose balance is calculated"
								},
								"returns": {
									"_0": "The scaled balance of the user*"
								}
							},
							"scaledTotalSupply()": {
								"details": "Returns the scaled total supply of the variable debt token. Represents sum(debt/index)",
								"returns": {
									"_0": "The scaled total supply*"
								}
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferOnLiquidation(address,address,uint256)": {
								"details": "Transfers aTokens in the event of a borrow being liquidated, in case the liquidators reclaims the aToken",
								"params": {
									"from": "The address getting liquidated, current owner of the aTokens",
									"to": "The recipient",
									"value": "The amount of tokens getting transferred*"
								}
							},
							"transferUnderlyingTo(address,uint256)": {
								"details": "Transfers the underlying asset to `target`. Used by the LendingPool to transfer assets in borrow(), withdraw() and flashLoan()",
								"params": {
									"amount": "The amount getting transferred",
									"user": "The recipient of the aTokens"
								},
								"returns": {
									"_0": "The amount transferred*"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(address,address,uint256,uint256)": "d7020d0a",
							"getScaledUserBalanceAndSupply(address)": "0afbcdc9",
							"mint(address,uint256,uint256)": "156e29f6",
							"mintToTreasury(uint256,uint256)": "7df5bd3b",
							"scaledBalanceOf(address)": "1da24f3e",
							"scaledTotalSupply()": "b1bf962d",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOnLiquidation(address,address,uint256)": "f866c319",
							"transferUnderlyingTo(address,uint256)": "4efecaa5"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"BalanceTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiverOfUnderlying\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getScaledUserBalanceAndSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"mintToTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"scaledBalanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"scaledTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferOnLiquidation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferUnderlyingTo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"BalanceTransfer(address,address,uint256,uint256)\":{\"details\":\"Emitted during the transfer action\",\"params\":{\"from\":\"The user whose tokens are being transferred\",\"index\":\"The new liquidity index of the reserve*\",\"to\":\"The recipient\",\"value\":\"The amount being transferred\"}},\"Burn(address,address,uint256,uint256)\":{\"details\":\"Emitted after aTokens are burned\",\"params\":{\"from\":\"The owner of the aTokens, getting them burned\",\"index\":\"The new liquidity index of the reserve*\",\"target\":\"The address that will receive the underlying\",\"value\":\"The amount being burned\"}},\"Mint(address,uint256,uint256)\":{\"details\":\"Emitted after the mint action\",\"params\":{\"from\":\"The address performing the mint\",\"index\":\"The new liquidity index of the reserve*\",\"value\":\"The amount being\"}}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"burn(address,address,uint256,uint256)\":{\"details\":\"Burns aTokens from `user` and sends the equivalent amount of underlying to `receiverOfUnderlying`\",\"params\":{\"amount\":\"The amount being burned\",\"index\":\"The new liquidity index of the reserve*\",\"receiverOfUnderlying\":\"The address that will receive the underlying\",\"user\":\"The owner of the aTokens, getting them burned\"}},\"getScaledUserBalanceAndSupply(address)\":{\"details\":\"Returns the scaled balance of the user and the scaled total supply.\",\"params\":{\"user\":\"The address of the user\"},\"returns\":{\"_0\":\"The scaled balance of the user\",\"_1\":\"The scaled balance and the scaled total supply*\"}},\"mint(address,uint256,uint256)\":{\"details\":\"Mints `amount` aTokens to `user`\",\"params\":{\"amount\":\"The amount of tokens getting minted\",\"index\":\"The new liquidity index of the reserve\",\"user\":\"The address receiving the minted tokens\"},\"returns\":{\"_0\":\"`true` if the the previous balance of the user was 0\"}},\"mintToTreasury(uint256,uint256)\":{\"details\":\"Mints aTokens to the reserve treasury\",\"params\":{\"amount\":\"The amount of tokens getting minted\",\"index\":\"The new liquidity index of the reserve\"}},\"scaledBalanceOf(address)\":{\"details\":\"Returns the scaled balance of the user. The scaled balance is the sum of all the updated stored balance divided by the reserve's liquidity index at the moment of the update\",\"params\":{\"user\":\"The user whose balance is calculated\"},\"returns\":{\"_0\":\"The scaled balance of the user*\"}},\"scaledTotalSupply()\":{\"details\":\"Returns the scaled total supply of the variable debt token. Represents sum(debt/index)\",\"returns\":{\"_0\":\"The scaled total supply*\"}},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferOnLiquidation(address,address,uint256)\":{\"details\":\"Transfers aTokens in the event of a borrow being liquidated, in case the liquidators reclaims the aToken\",\"params\":{\"from\":\"The address getting liquidated, current owner of the aTokens\",\"to\":\"The recipient\",\"value\":\"The amount of tokens getting transferred*\"}},\"transferUnderlyingTo(address,uint256)\":{\"details\":\"Transfers the underlying asset to `target`. Used by the LendingPool to transfer assets in borrow(), withdraw() and flashLoan()\",\"params\":{\"amount\":\"The amount getting transferred\",\"user\":\"The recipient of the aTokens\"},\"returns\":{\"_0\":\"The amount transferred*\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/aave/protocol-v2/blob/ice/mainnet-deployment-03-12-2020/contracts/interfaces/IAToken.sol\":\"IAToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/aave/protocol-v2/blob/ice/mainnet-deployment-03-12-2020/contracts/dependencies/openzeppelin/contracts/IERC20.sol\":{\"keccak256\":\"0x262369e206d62d5ee68b397937b68c97ff28fd939924d5d29e18ba9bb808a910\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://66cef1980a58f42e84e323c803e69b31f47e4d5ceaee4c26311f5fb6dd009a69\",\"dweb:/ipfs/QmdSbJ4cR1KwMGcmzewBdzjWsGuLMRJqxD3zonJeivDknD\"]},\"https://github.com/aave/protocol-v2/blob/ice/mainnet-deployment-03-12-2020/contracts/interfaces/IAToken.sol\":{\"keccak256\":\"0xee4945f62d69170ec88199627ef72183c7041e06742936f96ebc5ea358635dd4\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://ff84aac62a5577747801bbd5ec20155ebb834f9511fc363d517fa8de1cd5cb81\",\"dweb:/ipfs/QmVAHsvc9rPThqCX9N3jKRQVBHgYjE6ZJ1hjm84BgxQjZy\"]},\"https://github.com/aave/protocol-v2/blob/ice/mainnet-deployment-03-12-2020/contracts/interfaces/IScaledBalanceToken.sol\":{\"keccak256\":\"0x1c0007fd8eed6f7db52faee18dc962954667abc52b6f9b18692b7baba7b7c6a7\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://4ddf803cb1ee8816678afc08d67c5582242b5b8f72e86e4d81714b82fd691399\",\"dweb:/ipfs/Qma9qV2X46K64fTpTF8wo8yM3D9uBdxDfoCi19u8nmrsR6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/aave/protocol-v2/blob/ice/mainnet-deployment-03-12-2020/contracts/interfaces/ILendingPool.sol": {
				"ILendingPool": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "onBehalfOf",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "borrowRateMode",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "borrowRate",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint16",
									"name": "referral",
									"type": "uint16"
								}
							],
							"name": "Borrow",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "onBehalfOf",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint16",
									"name": "referral",
									"type": "uint16"
								}
							],
							"name": "Deposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "target",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "initiator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "premium",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "referralCode",
									"type": "uint16"
								}
							],
							"name": "FlashLoan",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "collateralAsset",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "debtAsset",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "debtToCover",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "liquidatedCollateralAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "liquidator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "receiveAToken",
									"type": "bool"
								}
							],
							"name": "LiquidationCall",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "RebalanceStableBorrowRate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "repayer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Repay",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "liquidityRate",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "stableBorrowRate",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "variableBorrowRate",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "liquidityIndex",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "variableBorrowIndex",
									"type": "uint256"
								}
							],
							"name": "ReserveDataUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "ReserveUsedAsCollateralDisabled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "ReserveUsedAsCollateralEnabled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "rateMode",
									"type": "uint256"
								}
							],
							"name": "Swap",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "interestRateMode",
									"type": "uint256"
								},
								{
									"internalType": "uint16",
									"name": "referralCode",
									"type": "uint16"
								},
								{
									"internalType": "address",
									"name": "onBehalfOf",
									"type": "address"
								}
							],
							"name": "borrow",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "onBehalfOf",
									"type": "address"
								},
								{
									"internalType": "uint16",
									"name": "referralCode",
									"type": "uint16"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "balanceFromAfter",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "balanceToBefore",
									"type": "uint256"
								}
							],
							"name": "finalizeTransfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiverAddress",
									"type": "address"
								},
								{
									"internalType": "address[]",
									"name": "assets",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "modes",
									"type": "uint256[]"
								},
								{
									"internalType": "address",
									"name": "onBehalfOf",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "params",
									"type": "bytes"
								},
								{
									"internalType": "uint16",
									"name": "referralCode",
									"type": "uint16"
								}
							],
							"name": "flashLoan",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getAddressesProvider",
							"outputs": [
								{
									"internalType": "contract ILendingPoolAddressesProvider",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								}
							],
							"name": "getConfiguration",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "data",
											"type": "uint256"
										}
									],
									"internalType": "struct DataTypes.ReserveConfigurationMap",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								}
							],
							"name": "getReserveData",
							"outputs": [
								{
									"components": [
										{
											"components": [
												{
													"internalType": "uint256",
													"name": "data",
													"type": "uint256"
												}
											],
											"internalType": "struct DataTypes.ReserveConfigurationMap",
											"name": "configuration",
											"type": "tuple"
										},
										{
											"internalType": "uint128",
											"name": "liquidityIndex",
											"type": "uint128"
										},
										{
											"internalType": "uint128",
											"name": "variableBorrowIndex",
											"type": "uint128"
										},
										{
											"internalType": "uint128",
											"name": "currentLiquidityRate",
											"type": "uint128"
										},
										{
											"internalType": "uint128",
											"name": "currentVariableBorrowRate",
											"type": "uint128"
										},
										{
											"internalType": "uint128",
											"name": "currentStableBorrowRate",
											"type": "uint128"
										},
										{
											"internalType": "uint40",
											"name": "lastUpdateTimestamp",
											"type": "uint40"
										},
										{
											"internalType": "address",
											"name": "aTokenAddress",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "stableDebtTokenAddress",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "variableDebtTokenAddress",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "interestRateStrategyAddress",
											"type": "address"
										},
										{
											"internalType": "uint8",
											"name": "id",
											"type": "uint8"
										}
									],
									"internalType": "struct DataTypes.ReserveData",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								}
							],
							"name": "getReserveNormalizedIncome",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								}
							],
							"name": "getReserveNormalizedVariableDebt",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getReservesList",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getUserAccountData",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "totalCollateralETH",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalDebtETH",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "availableBorrowsETH",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "currentLiquidationThreshold",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "ltv",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "healthFactor",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getUserConfiguration",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "data",
											"type": "uint256"
										}
									],
									"internalType": "struct DataTypes.UserConfigurationMap",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "aTokenAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "stableDebtAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "variableDebtAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "interestRateStrategyAddress",
									"type": "address"
								}
							],
							"name": "initReserve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collateralAsset",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "debtAsset",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "debtToCover",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "receiveAToken",
									"type": "bool"
								}
							],
							"name": "liquidationCall",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "rebalanceStableBorrowRate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rateMode",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "onBehalfOf",
									"type": "address"
								}
							],
							"name": "repay",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "configuration",
									"type": "uint256"
								}
							],
							"name": "setConfiguration",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "val",
									"type": "bool"
								}
							],
							"name": "setPause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "rateStrategyAddress",
									"type": "address"
								}
							],
							"name": "setReserveInterestRateStrategyAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "useAsCollateral",
									"type": "bool"
								}
							],
							"name": "setUserUseReserveAsCollateral",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "rateMode",
									"type": "uint256"
								}
							],
							"name": "swapBorrowRateMode",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "withdraw",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Borrow(address,address,address,uint256,uint256,uint256,uint16)": {
								"details": "Emitted on borrow() and flashLoan() when debt needs to be opened",
								"params": {
									"amount": "The amount borrowed out",
									"borrowRate": "The numeric rate at which the user has borrowed",
									"borrowRateMode": "The rate mode: 1 for Stable, 2 for Variable",
									"onBehalfOf": "The address that will be getting the debt",
									"referral": "The referral code used*",
									"reserve": "The address of the underlying asset being borrowed",
									"user": "The address of the user initiating the borrow(), receiving the funds on borrow() or just initiator of the transaction on flashLoan()"
								}
							},
							"Deposit(address,address,address,uint256,uint16)": {
								"details": "Emitted on deposit()",
								"params": {
									"amount": "The amount deposited",
									"onBehalfOf": "The beneficiary of the deposit, receiving the aTokens",
									"referral": "The referral code used*",
									"reserve": "The address of the underlying asset of the reserve",
									"user": "The address initiating the deposit"
								}
							},
							"FlashLoan(address,address,address,uint256,uint256,uint16)": {
								"details": "Emitted on flashLoan()",
								"params": {
									"amount": "The amount flash borrowed",
									"asset": "The address of the asset being flash borrowed",
									"initiator": "The address initiating the flash loan",
									"premium": "The fee flash borrowed",
									"referralCode": "The referral code used*",
									"target": "The address of the flash loan receiver contract"
								}
							},
							"LiquidationCall(address,address,address,uint256,uint256,address,bool)": {
								"details": "Emitted when a borrower is liquidated. This event is emitted by the LendingPool via LendingPoolCollateral manager using a DELEGATECALL This allows to have the events in the generated ABI for LendingPool.",
								"params": {
									"collateralAsset": "The address of the underlying asset used as collateral, to receive as result of the liquidation",
									"debtAsset": "The address of the underlying borrowed asset to be repaid with the liquidation",
									"debtToCover": "The debt amount of borrowed `asset` the liquidator wants to cover",
									"liquidatedCollateralAmount": "The amount of collateral received by the liiquidator",
									"liquidator": "The address of the liquidator",
									"receiveAToken": "`true` if the liquidators wants to receive the collateral aTokens, `false` if he wants to receive the underlying collateral asset directly*",
									"user": "The address of the borrower getting liquidated"
								}
							},
							"Paused()": {
								"details": "Emitted when the pause is triggered."
							},
							"RebalanceStableBorrowRate(address,address)": {
								"details": "Emitted on rebalanceStableBorrowRate()",
								"params": {
									"reserve": "The address of the underlying asset of the reserve",
									"user": "The address of the user for which the rebalance has been executed*"
								}
							},
							"Repay(address,address,address,uint256)": {
								"details": "Emitted on repay()",
								"params": {
									"amount": "The amount repaid*",
									"repayer": "The address of the user initiating the repay(), providing the funds",
									"reserve": "The address of the underlying asset of the reserve",
									"user": "The beneficiary of the repayment, getting his debt reduced"
								}
							},
							"ReserveDataUpdated(address,uint256,uint256,uint256,uint256,uint256)": {
								"details": "Emitted when the state of a reserve is updated. NOTE: This event is actually declared in the ReserveLogic library and emitted in the updateInterestRates() function. Since the function is internal, the event will actually be fired by the LendingPool contract. The event is therefore replicated here so it gets added to the LendingPool ABI",
								"params": {
									"liquidityIndex": "The new liquidity index",
									"liquidityRate": "The new liquidity rate",
									"reserve": "The address of the underlying asset of the reserve",
									"stableBorrowRate": "The new stable borrow rate",
									"variableBorrowIndex": "The new variable borrow index*",
									"variableBorrowRate": "The new variable borrow rate"
								}
							},
							"ReserveUsedAsCollateralDisabled(address,address)": {
								"details": "Emitted on setUserUseReserveAsCollateral()",
								"params": {
									"reserve": "The address of the underlying asset of the reserve",
									"user": "The address of the user enabling the usage as collateral*"
								}
							},
							"ReserveUsedAsCollateralEnabled(address,address)": {
								"details": "Emitted on setUserUseReserveAsCollateral()",
								"params": {
									"reserve": "The address of the underlying asset of the reserve",
									"user": "The address of the user enabling the usage as collateral*"
								}
							},
							"Swap(address,address,uint256)": {
								"details": "Emitted on swapBorrowRateMode()",
								"params": {
									"rateMode": "The rate mode that the user wants to swap to*",
									"reserve": "The address of the underlying asset of the reserve",
									"user": "The address of the user swapping his rate mode"
								}
							},
							"Unpaused()": {
								"details": "Emitted when the pause is lifted."
							},
							"Withdraw(address,address,address,uint256)": {
								"details": "Emitted on withdraw()",
								"params": {
									"amount": "The amount to be withdrawn*",
									"reserve": "The address of the underlyng asset being withdrawn",
									"to": "Address that will receive the underlying",
									"user": "The address initiating the withdrawal, owner of aTokens"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"borrow(address,uint256,uint256,uint16,address)": {
								"details": "Allows users to borrow a specific `amount` of the reserve underlying asset, provided that the borrower already deposited enough collateral, or he was given enough allowance by a credit delegator on the corresponding debt token (StableDebtToken or VariableDebtToken) - E.g. User borrows 100 USDC passing as `onBehalfOf` his own address, receiving the 100 USDC in his wallet   and 100 stable/variable debt tokens, depending on the `interestRateMode`",
								"params": {
									"amount": "The amount to be borrowed",
									"asset": "The address of the underlying asset to borrow",
									"interestRateMode": "The interest rate mode at which the user wants to borrow: 1 for Stable, 2 for Variable",
									"onBehalfOf": "Address of the user who will receive the debt. Should be the address of the borrower itself calling the function if he wants to borrow against his own collateral, or the address of the credit delegator if he has been given credit delegation allowance*",
									"referralCode": "Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man"
								}
							},
							"deposit(address,uint256,address,uint16)": {
								"details": "Deposits an `amount` of underlying asset into the reserve, receiving in return overlying aTokens. - E.g. User deposits 100 USDC and gets in return 100 aUSDC",
								"params": {
									"amount": "The amount to be deposited",
									"asset": "The address of the underlying asset to deposit",
									"onBehalfOf": "The address that will receive the aTokens, same as msg.sender if the user   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens   is a different wallet",
									"referralCode": "Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man*"
								}
							},
							"flashLoan(address,address[],uint256[],uint256[],address,bytes,uint16)": {
								"details": "Allows smartcontracts to access the liquidity of the pool within one transaction, as long as the amount taken plus a fee is returned. IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept into consideration. For further details please visit https://developers.aave.com",
								"params": {
									"amounts": "The amounts amounts being flash-borrowed",
									"assets": "The addresses of the assets being flash-borrowed",
									"modes": "Types of the debt to open if the flash loan is not returned:   0 -> Don't open any debt, just revert if funds can't be transferred from the receiver   1 -> Open debt at stable rate for the value of the amount flash-borrowed to the `onBehalfOf` address   2 -> Open debt at variable rate for the value of the amount flash-borrowed to the `onBehalfOf` address",
									"onBehalfOf": "The address  that will receive the debt in the case of using on `modes` 1 or 2",
									"params": "Variadic packed params to pass to the receiver as extra information",
									"receiverAddress": "The address of the contract receiving the funds, implementing the IFlashLoanReceiver interface",
									"referralCode": "Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man*"
								}
							},
							"getConfiguration(address)": {
								"details": "Returns the configuration of the reserve",
								"params": {
									"asset": "The address of the underlying asset of the reserve"
								},
								"returns": {
									"_0": "The configuration of the reserve*"
								}
							},
							"getReserveData(address)": {
								"details": "Returns the state and configuration of the reserve",
								"params": {
									"asset": "The address of the underlying asset of the reserve"
								},
								"returns": {
									"_0": "The state of the reserve*"
								}
							},
							"getReserveNormalizedIncome(address)": {
								"details": "Returns the normalized income normalized income of the reserve",
								"params": {
									"asset": "The address of the underlying asset of the reserve"
								},
								"returns": {
									"_0": "The reserve's normalized income"
								}
							},
							"getReserveNormalizedVariableDebt(address)": {
								"details": "Returns the normalized variable debt per unit of asset",
								"params": {
									"asset": "The address of the underlying asset of the reserve"
								},
								"returns": {
									"_0": "The reserve normalized variable debt"
								}
							},
							"getUserAccountData(address)": {
								"details": "Returns the user account data across all the reserves",
								"params": {
									"user": "The address of the user"
								},
								"returns": {
									"availableBorrowsETH": "the borrowing power left of the user",
									"currentLiquidationThreshold": "the liquidation threshold of the user",
									"healthFactor": "the current health factor of the user*",
									"ltv": "the loan to value of the user",
									"totalCollateralETH": "the total collateral in ETH of the user",
									"totalDebtETH": "the total debt in ETH of the user"
								}
							},
							"getUserConfiguration(address)": {
								"details": "Returns the configuration of the user across all the reserves",
								"params": {
									"user": "The user address"
								},
								"returns": {
									"_0": "The configuration of the user*"
								}
							},
							"liquidationCall(address,address,address,uint256,bool)": {
								"details": "Function to liquidate a non-healthy position collateral-wise, with Health Factor below 1 - The caller (liquidator) covers `debtToCover` amount of debt of the user getting liquidated, and receives   a proportionally amount of the `collateralAsset` plus a bonus to cover market risk",
								"params": {
									"collateralAsset": "The address of the underlying asset used as collateral, to receive as result of the liquidation",
									"debtAsset": "The address of the underlying borrowed asset to be repaid with the liquidation",
									"debtToCover": "The debt amount of borrowed `asset` the liquidator wants to cover",
									"receiveAToken": "`true` if the liquidators wants to receive the collateral aTokens, `false` if he wants to receive the underlying collateral asset directly*",
									"user": "The address of the borrower getting liquidated"
								}
							},
							"rebalanceStableBorrowRate(address,address)": {
								"details": "Rebalances the stable interest rate of a user to the current stable rate defined on the reserve. - Users can be rebalanced if the following conditions are satisfied:     1. Usage ratio is above 95%     2. the current deposit APY is below REBALANCE_UP_THRESHOLD * maxVariableBorrowRate, which means that too much has been        borrowed at a stable rate and depositors are not earning enough",
								"params": {
									"asset": "The address of the underlying asset borrowed",
									"user": "The address of the user to be rebalanced*"
								}
							},
							"repay(address,uint256,uint256,address)": {
								"params": {
									"amount": "The amount to repay - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`",
									"asset": "The address of the borrowed underlying asset previously borrowed",
									"onBehalfOf": "Address of the user who will get his debt reduced/removed. Should be the address of the user calling the function if he wants to reduce/remove his own debt, or the address of any other other borrower whose debt should be removed",
									"rateMode": "The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable"
								},
								"returns": {
									"_0": "The final amount repaid*"
								}
							},
							"setUserUseReserveAsCollateral(address,bool)": {
								"details": "Allows depositors to enable/disable a specific deposited asset as collateral",
								"params": {
									"asset": "The address of the underlying asset deposited",
									"useAsCollateral": "`true` if the user wants to use the deposit as collateral, `false` otherwise*"
								}
							},
							"swapBorrowRateMode(address,uint256)": {
								"details": "Allows a borrower to swap his debt between stable and variable mode, or viceversa",
								"params": {
									"asset": "The address of the underlying asset borrowed",
									"rateMode": "The rate mode that the user wants to swap to*"
								}
							},
							"withdraw(address,uint256,address)": {
								"details": "Withdraws an `amount` of underlying asset from the reserve, burning the equivalent aTokens owned E.g. User has 100 aUSDC, calls withdraw() and receives 100 USDC, burning the 100 aUSDC",
								"params": {
									"amount": "The underlying amount to be withdrawn   - Send the value type(uint256).max in order to withdraw the whole aToken balance",
									"asset": "The address of the underlying asset to withdraw",
									"to": "Address that will receive the underlying, same as msg.sender if the user   wants to receive it on his own wallet, or a different address if the beneficiary is a   different wallet"
								},
								"returns": {
									"_0": "The final amount withdrawn*"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"borrow(address,uint256,uint256,uint16,address)": "a415bcad",
							"deposit(address,uint256,address,uint16)": "e8eda9df",
							"finalizeTransfer(address,address,address,uint256,uint256,uint256)": "d5ed3933",
							"flashLoan(address,address[],uint256[],uint256[],address,bytes,uint16)": "ab9c4b5d",
							"getAddressesProvider()": "fe65acfe",
							"getConfiguration(address)": "c44b11f7",
							"getReserveData(address)": "35ea6a75",
							"getReserveNormalizedIncome(address)": "d15e0053",
							"getReserveNormalizedVariableDebt(address)": "386497fd",
							"getReservesList()": "d1946dbc",
							"getUserAccountData(address)": "bf92857c",
							"getUserConfiguration(address)": "4417a583",
							"initReserve(address,address,address,address,address)": "7a708e92",
							"liquidationCall(address,address,address,uint256,bool)": "00a718a9",
							"paused()": "5c975abb",
							"rebalanceStableBorrowRate(address,address)": "cd112382",
							"repay(address,uint256,uint256,address)": "573ade81",
							"setConfiguration(address,uint256)": "b8d29276",
							"setPause(bool)": "bedb86fb",
							"setReserveInterestRateStrategyAddress(address,address)": "1d2118f9",
							"setUserUseReserveAsCollateral(address,bool)": "5a3b74b9",
							"swapBorrowRateMode(address,uint256)": "94ba89a2",
							"withdraw(address,uint256,address)": "69328dec"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"borrowRateMode\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"borrowRate\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"referral\",\"type\":\"uint16\"}],\"name\":\"Borrow\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"referral\",\"type\":\"uint16\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"initiator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"premium\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"FlashLoan\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"collateralAsset\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"debtAsset\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"debtToCover\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidatedCollateralAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"receiveAToken\",\"type\":\"bool\"}],\"name\":\"LiquidationCall\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"RebalanceStableBorrowRate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"repayer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Repay\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidityRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stableBorrowRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"variableBorrowRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidityIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"variableBorrowIndex\",\"type\":\"uint256\"}],\"name\":\"ReserveDataUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"ReserveUsedAsCollateralDisabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"ReserveUsedAsCollateralEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rateMode\",\"type\":\"uint256\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestRateMode\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"}],\"name\":\"borrow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balanceFromAfter\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balanceToBefore\",\"type\":\"uint256\"}],\"name\":\"finalizeTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverAddress\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"modes\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"},{\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"flashLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddressesProvider\",\"outputs\":[{\"internalType\":\"contract ILendingPoolAddressesProvider\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getConfiguration\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"data\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.ReserveConfigurationMap\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getReserveData\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"data\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.ReserveConfigurationMap\",\"name\":\"configuration\",\"type\":\"tuple\"},{\"internalType\":\"uint128\",\"name\":\"liquidityIndex\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"variableBorrowIndex\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"currentLiquidityRate\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"currentVariableBorrowRate\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"currentStableBorrowRate\",\"type\":\"uint128\"},{\"internalType\":\"uint40\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint40\"},{\"internalType\":\"address\",\"name\":\"aTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"stableDebtTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"variableDebtTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"interestRateStrategyAddress\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"id\",\"type\":\"uint8\"}],\"internalType\":\"struct DataTypes.ReserveData\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getReserveNormalizedIncome\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getReserveNormalizedVariableDebt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReservesList\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserAccountData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalCollateralETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalDebtETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"availableBorrowsETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentLiquidationThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ltv\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"healthFactor\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserConfiguration\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"data\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.UserConfigurationMap\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"aTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"stableDebtAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"variableDebtAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"interestRateStrategyAddress\",\"type\":\"address\"}],\"name\":\"initReserve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collateralAsset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"debtAsset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"debtToCover\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"receiveAToken\",\"type\":\"bool\"}],\"name\":\"liquidationCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"rebalanceStableBorrowRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateMode\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"}],\"name\":\"repay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"configuration\",\"type\":\"uint256\"}],\"name\":\"setConfiguration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"val\",\"type\":\"bool\"}],\"name\":\"setPause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"rateStrategyAddress\",\"type\":\"address\"}],\"name\":\"setReserveInterestRateStrategyAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useAsCollateral\",\"type\":\"bool\"}],\"name\":\"setUserUseReserveAsCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rateMode\",\"type\":\"uint256\"}],\"name\":\"swapBorrowRateMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Borrow(address,address,address,uint256,uint256,uint256,uint16)\":{\"details\":\"Emitted on borrow() and flashLoan() when debt needs to be opened\",\"params\":{\"amount\":\"The amount borrowed out\",\"borrowRate\":\"The numeric rate at which the user has borrowed\",\"borrowRateMode\":\"The rate mode: 1 for Stable, 2 for Variable\",\"onBehalfOf\":\"The address that will be getting the debt\",\"referral\":\"The referral code used*\",\"reserve\":\"The address of the underlying asset being borrowed\",\"user\":\"The address of the user initiating the borrow(), receiving the funds on borrow() or just initiator of the transaction on flashLoan()\"}},\"Deposit(address,address,address,uint256,uint16)\":{\"details\":\"Emitted on deposit()\",\"params\":{\"amount\":\"The amount deposited\",\"onBehalfOf\":\"The beneficiary of the deposit, receiving the aTokens\",\"referral\":\"The referral code used*\",\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The address initiating the deposit\"}},\"FlashLoan(address,address,address,uint256,uint256,uint16)\":{\"details\":\"Emitted on flashLoan()\",\"params\":{\"amount\":\"The amount flash borrowed\",\"asset\":\"The address of the asset being flash borrowed\",\"initiator\":\"The address initiating the flash loan\",\"premium\":\"The fee flash borrowed\",\"referralCode\":\"The referral code used*\",\"target\":\"The address of the flash loan receiver contract\"}},\"LiquidationCall(address,address,address,uint256,uint256,address,bool)\":{\"details\":\"Emitted when a borrower is liquidated. This event is emitted by the LendingPool via LendingPoolCollateral manager using a DELEGATECALL This allows to have the events in the generated ABI for LendingPool.\",\"params\":{\"collateralAsset\":\"The address of the underlying asset used as collateral, to receive as result of the liquidation\",\"debtAsset\":\"The address of the underlying borrowed asset to be repaid with the liquidation\",\"debtToCover\":\"The debt amount of borrowed `asset` the liquidator wants to cover\",\"liquidatedCollateralAmount\":\"The amount of collateral received by the liiquidator\",\"liquidator\":\"The address of the liquidator\",\"receiveAToken\":\"`true` if the liquidators wants to receive the collateral aTokens, `false` if he wants to receive the underlying collateral asset directly*\",\"user\":\"The address of the borrower getting liquidated\"}},\"Paused()\":{\"details\":\"Emitted when the pause is triggered.\"},\"RebalanceStableBorrowRate(address,address)\":{\"details\":\"Emitted on rebalanceStableBorrowRate()\",\"params\":{\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The address of the user for which the rebalance has been executed*\"}},\"Repay(address,address,address,uint256)\":{\"details\":\"Emitted on repay()\",\"params\":{\"amount\":\"The amount repaid*\",\"repayer\":\"The address of the user initiating the repay(), providing the funds\",\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The beneficiary of the repayment, getting his debt reduced\"}},\"ReserveDataUpdated(address,uint256,uint256,uint256,uint256,uint256)\":{\"details\":\"Emitted when the state of a reserve is updated. NOTE: This event is actually declared in the ReserveLogic library and emitted in the updateInterestRates() function. Since the function is internal, the event will actually be fired by the LendingPool contract. The event is therefore replicated here so it gets added to the LendingPool ABI\",\"params\":{\"liquidityIndex\":\"The new liquidity index\",\"liquidityRate\":\"The new liquidity rate\",\"reserve\":\"The address of the underlying asset of the reserve\",\"stableBorrowRate\":\"The new stable borrow rate\",\"variableBorrowIndex\":\"The new variable borrow index*\",\"variableBorrowRate\":\"The new variable borrow rate\"}},\"ReserveUsedAsCollateralDisabled(address,address)\":{\"details\":\"Emitted on setUserUseReserveAsCollateral()\",\"params\":{\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The address of the user enabling the usage as collateral*\"}},\"ReserveUsedAsCollateralEnabled(address,address)\":{\"details\":\"Emitted on setUserUseReserveAsCollateral()\",\"params\":{\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The address of the user enabling the usage as collateral*\"}},\"Swap(address,address,uint256)\":{\"details\":\"Emitted on swapBorrowRateMode()\",\"params\":{\"rateMode\":\"The rate mode that the user wants to swap to*\",\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The address of the user swapping his rate mode\"}},\"Unpaused()\":{\"details\":\"Emitted when the pause is lifted.\"},\"Withdraw(address,address,address,uint256)\":{\"details\":\"Emitted on withdraw()\",\"params\":{\"amount\":\"The amount to be withdrawn*\",\"reserve\":\"The address of the underlyng asset being withdrawn\",\"to\":\"Address that will receive the underlying\",\"user\":\"The address initiating the withdrawal, owner of aTokens\"}}},\"kind\":\"dev\",\"methods\":{\"borrow(address,uint256,uint256,uint16,address)\":{\"details\":\"Allows users to borrow a specific `amount` of the reserve underlying asset, provided that the borrower already deposited enough collateral, or he was given enough allowance by a credit delegator on the corresponding debt token (StableDebtToken or VariableDebtToken) - E.g. User borrows 100 USDC passing as `onBehalfOf` his own address, receiving the 100 USDC in his wallet   and 100 stable/variable debt tokens, depending on the `interestRateMode`\",\"params\":{\"amount\":\"The amount to be borrowed\",\"asset\":\"The address of the underlying asset to borrow\",\"interestRateMode\":\"The interest rate mode at which the user wants to borrow: 1 for Stable, 2 for Variable\",\"onBehalfOf\":\"Address of the user who will receive the debt. Should be the address of the borrower itself calling the function if he wants to borrow against his own collateral, or the address of the credit delegator if he has been given credit delegation allowance*\",\"referralCode\":\"Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man\"}},\"deposit(address,uint256,address,uint16)\":{\"details\":\"Deposits an `amount` of underlying asset into the reserve, receiving in return overlying aTokens. - E.g. User deposits 100 USDC and gets in return 100 aUSDC\",\"params\":{\"amount\":\"The amount to be deposited\",\"asset\":\"The address of the underlying asset to deposit\",\"onBehalfOf\":\"The address that will receive the aTokens, same as msg.sender if the user   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens   is a different wallet\",\"referralCode\":\"Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man*\"}},\"flashLoan(address,address[],uint256[],uint256[],address,bytes,uint16)\":{\"details\":\"Allows smartcontracts to access the liquidity of the pool within one transaction, as long as the amount taken plus a fee is returned. IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept into consideration. For further details please visit https://developers.aave.com\",\"params\":{\"amounts\":\"The amounts amounts being flash-borrowed\",\"assets\":\"The addresses of the assets being flash-borrowed\",\"modes\":\"Types of the debt to open if the flash loan is not returned:   0 -> Don't open any debt, just revert if funds can't be transferred from the receiver   1 -> Open debt at stable rate for the value of the amount flash-borrowed to the `onBehalfOf` address   2 -> Open debt at variable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\",\"onBehalfOf\":\"The address  that will receive the debt in the case of using on `modes` 1 or 2\",\"params\":\"Variadic packed params to pass to the receiver as extra information\",\"receiverAddress\":\"The address of the contract receiving the funds, implementing the IFlashLoanReceiver interface\",\"referralCode\":\"Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man*\"}},\"getConfiguration(address)\":{\"details\":\"Returns the configuration of the reserve\",\"params\":{\"asset\":\"The address of the underlying asset of the reserve\"},\"returns\":{\"_0\":\"The configuration of the reserve*\"}},\"getReserveData(address)\":{\"details\":\"Returns the state and configuration of the reserve\",\"params\":{\"asset\":\"The address of the underlying asset of the reserve\"},\"returns\":{\"_0\":\"The state of the reserve*\"}},\"getReserveNormalizedIncome(address)\":{\"details\":\"Returns the normalized income normalized income of the reserve\",\"params\":{\"asset\":\"The address of the underlying asset of the reserve\"},\"returns\":{\"_0\":\"The reserve's normalized income\"}},\"getReserveNormalizedVariableDebt(address)\":{\"details\":\"Returns the normalized variable debt per unit of asset\",\"params\":{\"asset\":\"The address of the underlying asset of the reserve\"},\"returns\":{\"_0\":\"The reserve normalized variable debt\"}},\"getUserAccountData(address)\":{\"details\":\"Returns the user account data across all the reserves\",\"params\":{\"user\":\"The address of the user\"},\"returns\":{\"availableBorrowsETH\":\"the borrowing power left of the user\",\"currentLiquidationThreshold\":\"the liquidation threshold of the user\",\"healthFactor\":\"the current health factor of the user*\",\"ltv\":\"the loan to value of the user\",\"totalCollateralETH\":\"the total collateral in ETH of the user\",\"totalDebtETH\":\"the total debt in ETH of the user\"}},\"getUserConfiguration(address)\":{\"details\":\"Returns the configuration of the user across all the reserves\",\"params\":{\"user\":\"The user address\"},\"returns\":{\"_0\":\"The configuration of the user*\"}},\"liquidationCall(address,address,address,uint256,bool)\":{\"details\":\"Function to liquidate a non-healthy position collateral-wise, with Health Factor below 1 - The caller (liquidator) covers `debtToCover` amount of debt of the user getting liquidated, and receives   a proportionally amount of the `collateralAsset` plus a bonus to cover market risk\",\"params\":{\"collateralAsset\":\"The address of the underlying asset used as collateral, to receive as result of the liquidation\",\"debtAsset\":\"The address of the underlying borrowed asset to be repaid with the liquidation\",\"debtToCover\":\"The debt amount of borrowed `asset` the liquidator wants to cover\",\"receiveAToken\":\"`true` if the liquidators wants to receive the collateral aTokens, `false` if he wants to receive the underlying collateral asset directly*\",\"user\":\"The address of the borrower getting liquidated\"}},\"rebalanceStableBorrowRate(address,address)\":{\"details\":\"Rebalances the stable interest rate of a user to the current stable rate defined on the reserve. - Users can be rebalanced if the following conditions are satisfied:     1. Usage ratio is above 95%     2. the current deposit APY is below REBALANCE_UP_THRESHOLD * maxVariableBorrowRate, which means that too much has been        borrowed at a stable rate and depositors are not earning enough\",\"params\":{\"asset\":\"The address of the underlying asset borrowed\",\"user\":\"The address of the user to be rebalanced*\"}},\"repay(address,uint256,uint256,address)\":{\"params\":{\"amount\":\"The amount to repay - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\",\"asset\":\"The address of the borrowed underlying asset previously borrowed\",\"onBehalfOf\":\"Address of the user who will get his debt reduced/removed. Should be the address of the user calling the function if he wants to reduce/remove his own debt, or the address of any other other borrower whose debt should be removed\",\"rateMode\":\"The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\"},\"returns\":{\"_0\":\"The final amount repaid*\"}},\"setUserUseReserveAsCollateral(address,bool)\":{\"details\":\"Allows depositors to enable/disable a specific deposited asset as collateral\",\"params\":{\"asset\":\"The address of the underlying asset deposited\",\"useAsCollateral\":\"`true` if the user wants to use the deposit as collateral, `false` otherwise*\"}},\"swapBorrowRateMode(address,uint256)\":{\"details\":\"Allows a borrower to swap his debt between stable and variable mode, or viceversa\",\"params\":{\"asset\":\"The address of the underlying asset borrowed\",\"rateMode\":\"The rate mode that the user wants to swap to*\"}},\"withdraw(address,uint256,address)\":{\"details\":\"Withdraws an `amount` of underlying asset from the reserve, burning the equivalent aTokens owned E.g. User has 100 aUSDC, calls withdraw() and receives 100 USDC, burning the 100 aUSDC\",\"params\":{\"amount\":\"The underlying amount to be withdrawn   - Send the value type(uint256).max in order to withdraw the whole aToken balance\",\"asset\":\"The address of the underlying asset to withdraw\",\"to\":\"Address that will receive the underlying, same as msg.sender if the user   wants to receive it on his own wallet, or a different address if the beneficiary is a   different wallet\"},\"returns\":{\"_0\":\"The final amount withdrawn*\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"repay(address,uint256,uint256,address)\":{\"notice\":\"Repays a borrowed `amount` on a specific reserve, burning the equivalent debt tokens owned - E.g. User repays 100 USDC, burning 100 variable/stable debt tokens of the `onBehalfOf` address\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/aave/protocol-v2/blob/ice/mainnet-deployment-03-12-2020/contracts/interfaces/ILendingPool.sol\":\"ILendingPool\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/aave/protocol-v2/blob/ice/mainnet-deployment-03-12-2020/contracts/interfaces/ILendingPool.sol\":{\"keccak256\":\"0x4317aab800a42f977aca3cdfd8d5b6f13020febc15a955df0ef967fad29ddfd1\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://7a42a21607a436b318ecc8f89c706de8160bb2339a6d51f785f7b211140ef5ca\",\"dweb:/ipfs/QmXzTRS5rzy3yFSGGfFaaWiyWNayXkzdTNuSMx7GPggSVy\"]},\"https://github.com/aave/protocol-v2/blob/ice/mainnet-deployment-03-12-2020/contracts/interfaces/ILendingPoolAddressesProvider.sol\":{\"keccak256\":\"0xd8d09ab923d429b8b27eafa7049d021393189e0c80b8f374084f77b201ea1073\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://9549c766e722380c52a51a6a76ffa9940ed7b33caa69de74bbe947cd47b417d3\",\"dweb:/ipfs/Qmao6cZZ4XrJqaF2ErPL3LwoDtbc1LxXeztKThHSt96H1t\"]},\"https://github.com/aave/protocol-v2/blob/ice/mainnet-deployment-03-12-2020/contracts/protocol/libraries/types/DataTypes.sol\":{\"keccak256\":\"0x64512f0d56b4c8ec7af33836fe00ad547cd47d71ffdd9ca8a1f2b867da425fd3\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://0207d03b9e11cd8db58021f6b8153bef483477daf43607306769c16a8da204a8\",\"dweb:/ipfs/QmfL33Rf1ZGUBVm6gcyEXKbZE3PzLuoGQR3d3CCfQhrcSk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"repay(address,uint256,uint256,address)": {
								"notice": "Repays a borrowed `amount` on a specific reserve, burning the equivalent debt tokens owned - E.g. User repays 100 USDC, burning 100 variable/stable debt tokens of the `onBehalfOf` address"
							}
						},
						"version": 1
					}
				}
			},
			"https://github.com/aave/protocol-v2/blob/ice/mainnet-deployment-03-12-2020/contracts/interfaces/ILendingPoolAddressesProvider.sol": {
				"ILendingPoolAddressesProvider": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "hasProxy",
									"type": "bool"
								}
							],
							"name": "AddressSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "ConfigurationAdminUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "EmergencyAdminUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "LendingPoolCollateralManagerUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "LendingPoolConfiguratorUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "LendingPoolUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "LendingRateOracleUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "newMarketId",
									"type": "string"
								}
							],
							"name": "MarketIdSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "PriceOracleUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "ProxyCreated",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								}
							],
							"name": "getAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getEmergencyAdmin",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getLendingPool",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getLendingPoolCollateralManager",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getLendingPoolConfigurator",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getLendingRateOracle",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getMarketId",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPoolAdmin",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPriceOracle",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "setAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "impl",
									"type": "address"
								}
							],
							"name": "setAddressAsProxy",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								}
							],
							"name": "setEmergencyAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "manager",
									"type": "address"
								}
							],
							"name": "setLendingPoolCollateralManager",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "configurator",
									"type": "address"
								}
							],
							"name": "setLendingPoolConfiguratorImpl",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "setLendingPoolImpl",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "lendingRateOracle",
									"type": "address"
								}
							],
							"name": "setLendingRateOracle",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "marketId",
									"type": "string"
								}
							],
							"name": "setMarketId",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								}
							],
							"name": "setPoolAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "priceOracle",
									"type": "address"
								}
							],
							"name": "setPriceOracle",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Aave*",
						"details": "Main registry of addresses part of or connected to the protocol, including permissioned roles - Acting also as factory of proxies and admin of those, so with right to change its implementations - Owned by the Aave Governance",
						"kind": "dev",
						"methods": {},
						"title": "LendingPoolAddressesProvider contract",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getAddress(bytes32)": "21f8a721",
							"getEmergencyAdmin()": "ddcaa9ea",
							"getLendingPool()": "0261bf8b",
							"getLendingPoolCollateralManager()": "712d9171",
							"getLendingPoolConfigurator()": "85c858b1",
							"getLendingRateOracle()": "3618abba",
							"getMarketId()": "568ef470",
							"getPoolAdmin()": "aecda378",
							"getPriceOracle()": "fca513a8",
							"setAddress(bytes32,address)": "ca446dd9",
							"setAddressAsProxy(bytes32,address)": "5dcc528c",
							"setEmergencyAdmin(address)": "35da3394",
							"setLendingPoolCollateralManager(address)": "398e5553",
							"setLendingPoolConfiguratorImpl(address)": "c12542df",
							"setLendingPoolImpl(address)": "5aef021f",
							"setLendingRateOracle(address)": "820d1274",
							"setMarketId(string)": "f67b1847",
							"setPoolAdmin(address)": "283d62ad",
							"setPriceOracle(address)": "530e784f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"hasProxy\",\"type\":\"bool\"}],\"name\":\"AddressSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"ConfigurationAdminUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"EmergencyAdminUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"LendingPoolCollateralManagerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"LendingPoolConfiguratorUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"LendingPoolUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"LendingRateOracleUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newMarketId\",\"type\":\"string\"}],\"name\":\"MarketIdSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"PriceOracleUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"ProxyCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"getAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEmergencyAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLendingPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLendingPoolCollateralManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLendingPoolConfigurator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLendingRateOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMarketId\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"setAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"impl\",\"type\":\"address\"}],\"name\":\"setAddressAsProxy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"setEmergencyAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"}],\"name\":\"setLendingPoolCollateralManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"configurator\",\"type\":\"address\"}],\"name\":\"setLendingPoolConfiguratorImpl\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"setLendingPoolImpl\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lendingRateOracle\",\"type\":\"address\"}],\"name\":\"setLendingRateOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"marketId\",\"type\":\"string\"}],\"name\":\"setMarketId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"setPoolAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceOracle\",\"type\":\"address\"}],\"name\":\"setPriceOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Aave*\",\"details\":\"Main registry of addresses part of or connected to the protocol, including permissioned roles - Acting also as factory of proxies and admin of those, so with right to change its implementations - Owned by the Aave Governance\",\"kind\":\"dev\",\"methods\":{},\"title\":\"LendingPoolAddressesProvider contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/aave/protocol-v2/blob/ice/mainnet-deployment-03-12-2020/contracts/interfaces/ILendingPoolAddressesProvider.sol\":\"ILendingPoolAddressesProvider\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/aave/protocol-v2/blob/ice/mainnet-deployment-03-12-2020/contracts/interfaces/ILendingPoolAddressesProvider.sol\":{\"keccak256\":\"0xd8d09ab923d429b8b27eafa7049d021393189e0c80b8f374084f77b201ea1073\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://9549c766e722380c52a51a6a76ffa9940ed7b33caa69de74bbe947cd47b417d3\",\"dweb:/ipfs/Qmao6cZZ4XrJqaF2ErPL3LwoDtbc1LxXeztKThHSt96H1t\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/aave/protocol-v2/blob/ice/mainnet-deployment-03-12-2020/contracts/interfaces/IScaledBalanceToken.sol": {
				"IScaledBalanceToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getScaledUserBalanceAndSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "scaledBalanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "scaledTotalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"getScaledUserBalanceAndSupply(address)": {
								"details": "Returns the scaled balance of the user and the scaled total supply.",
								"params": {
									"user": "The address of the user"
								},
								"returns": {
									"_0": "The scaled balance of the user",
									"_1": "The scaled balance and the scaled total supply*"
								}
							},
							"scaledBalanceOf(address)": {
								"details": "Returns the scaled balance of the user. The scaled balance is the sum of all the updated stored balance divided by the reserve's liquidity index at the moment of the update",
								"params": {
									"user": "The user whose balance is calculated"
								},
								"returns": {
									"_0": "The scaled balance of the user*"
								}
							},
							"scaledTotalSupply()": {
								"details": "Returns the scaled total supply of the variable debt token. Represents sum(debt/index)",
								"returns": {
									"_0": "The scaled total supply*"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getScaledUserBalanceAndSupply(address)": "0afbcdc9",
							"scaledBalanceOf(address)": "1da24f3e",
							"scaledTotalSupply()": "b1bf962d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getScaledUserBalanceAndSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"scaledBalanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"scaledTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getScaledUserBalanceAndSupply(address)\":{\"details\":\"Returns the scaled balance of the user and the scaled total supply.\",\"params\":{\"user\":\"The address of the user\"},\"returns\":{\"_0\":\"The scaled balance of the user\",\"_1\":\"The scaled balance and the scaled total supply*\"}},\"scaledBalanceOf(address)\":{\"details\":\"Returns the scaled balance of the user. The scaled balance is the sum of all the updated stored balance divided by the reserve's liquidity index at the moment of the update\",\"params\":{\"user\":\"The user whose balance is calculated\"},\"returns\":{\"_0\":\"The scaled balance of the user*\"}},\"scaledTotalSupply()\":{\"details\":\"Returns the scaled total supply of the variable debt token. Represents sum(debt/index)\",\"returns\":{\"_0\":\"The scaled total supply*\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/aave/protocol-v2/blob/ice/mainnet-deployment-03-12-2020/contracts/interfaces/IScaledBalanceToken.sol\":\"IScaledBalanceToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/aave/protocol-v2/blob/ice/mainnet-deployment-03-12-2020/contracts/interfaces/IScaledBalanceToken.sol\":{\"keccak256\":\"0x1c0007fd8eed6f7db52faee18dc962954667abc52b6f9b18692b7baba7b7c6a7\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://4ddf803cb1ee8816678afc08d67c5582242b5b8f72e86e4d81714b82fd691399\",\"dweb:/ipfs/Qma9qV2X46K64fTpTF8wo8yM3D9uBdxDfoCi19u8nmrsR6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/aave/protocol-v2/blob/ice/mainnet-deployment-03-12-2020/contracts/protocol/libraries/types/DataTypes.sol": {
				"DataTypes": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/aave/protocol-v2/blob/ice/mainnet-deployment-03-12-2020/contracts/protocol/libraries/types/DataTypes.sol\":64:1531  library DataTypes {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/aave/protocol-v2/blob/ice/mainnet-deployment-03-12-2020/contracts/protocol/libraries/types/DataTypes.sol\":64:1531  library DataTypes {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212200c7db47739e66ee59892cf0aa3726ed0ec0a8b0d97225f486d3366a407fab31b64736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200c7db47739e66ee59892cf0aa3726ed0ec0a8b0d97225f486d3366a407fab31b64736f6c634300080f0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC PUSH30 0xB47739E66EE59892CF0AA3726ED0EC0A8B0D97225F486D3366A407FAB31B PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ",
							"sourceMap": "64:1467:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200c7db47739e66ee59892cf0aa3726ed0ec0a8b0d97225f486d3366a407fab31b64736f6c634300080f0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC PUSH30 0xB47739E66EE59892CF0AA3726ED0EC0A8B0D97225F486D3366A407FAB31B PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ",
							"sourceMap": "64:1467:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 64,
									"end": 1531,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 64,
									"end": 1531,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 64,
									"end": 1531,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 64,
									"end": 1531,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 64,
									"end": 1531,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 64,
									"end": 1531,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 64,
									"end": 1531,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 64,
									"end": 1531,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 64,
									"end": 1531,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 64,
									"end": 1531,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 64,
									"end": 1531,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 64,
									"end": 1531,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 64,
									"end": 1531,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 64,
									"end": 1531,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 64,
									"end": 1531,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 64,
									"end": 1531,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 64,
									"end": 1531,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 64,
									"end": 1531,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 64,
									"end": 1531,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 64,
									"end": 1531,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 64,
									"end": 1531,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 64,
									"end": 1531,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 64,
									"end": 1531,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 64,
									"end": 1531,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 64,
									"end": 1531,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 64,
									"end": 1531,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 64,
									"end": 1531,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 64,
									"end": 1531,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 64,
									"end": 1531,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 64,
									"end": 1531,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 64,
									"end": 1531,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 64,
									"end": 1531,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 64,
									"end": 1531,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 64,
									"end": 1531,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 64,
									"end": 1531,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200c7db47739e66ee59892cf0aa3726ed0ec0a8b0d97225f486d3366a407fab31b64736f6c634300080f0033",
									".code": [
										{
											"begin": 64,
											"end": 1531,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 64,
											"end": 1531,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 64,
											"end": 1531,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 64,
											"end": 1531,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 64,
											"end": 1531,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 64,
											"end": 1531,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 64,
											"end": 1531,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 64,
											"end": 1531,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 64,
											"end": 1531,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"contracts/ERC20.sol",
								"contracts/StrongHands.sol",
								"https://github.com/aave/protocol-v2/blob/ice/mainnet-deployment-03-12-2020/contracts/dependencies/openzeppelin/contracts/IERC20.sol",
								"https://github.com/aave/protocol-v2/blob/ice/mainnet-deployment-03-12-2020/contracts/interfaces/IAToken.sol",
								"https://github.com/aave/protocol-v2/blob/ice/mainnet-deployment-03-12-2020/contracts/interfaces/ILendingPool.sol",
								"https://github.com/aave/protocol-v2/blob/ice/mainnet-deployment-03-12-2020/contracts/interfaces/ILendingPoolAddressesProvider.sol",
								"https://github.com/aave/protocol-v2/blob/ice/mainnet-deployment-03-12-2020/contracts/interfaces/IScaledBalanceToken.sol",
								"https://github.com/aave/protocol-v2/blob/ice/mainnet-deployment-03-12-2020/contracts/protocol/libraries/types/DataTypes.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/aave/protocol-v2/blob/ice/mainnet-deployment-03-12-2020/contracts/protocol/libraries/types/DataTypes.sol\":\"DataTypes\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/aave/protocol-v2/blob/ice/mainnet-deployment-03-12-2020/contracts/protocol/libraries/types/DataTypes.sol\":{\"keccak256\":\"0x64512f0d56b4c8ec7af33836fe00ad547cd47d71ffdd9ca8a1f2b867da425fd3\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://0207d03b9e11cd8db58021f6b8153bef483477daf43607306769c16a8da204a8\",\"dweb:/ipfs/QmfL33Rf1ZGUBVm6gcyEXKbZE3PzLuoGQR3d3CCfQhrcSk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/ERC20.sol": {
				"ast": {
					"absolutePath": "contracts/ERC20.sol",
					"exportedSymbols": {
						"ERC20": [
							42
						]
					},
					"id": 43,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "33:25:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 42,
							"linearizedBaseContracts": [
								42
							],
							"name": "ERC20",
							"nameLocation": "70:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "d0e30db0",
									"id": 4,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "89:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "96:2:0"
									},
									"returnParameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "115:0:0"
									},
									"scope": 42,
									"src": "80:36:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2e1a7d4d",
									"id": 9,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "129:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "146:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 9,
												"src": "138:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "138:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "137:16:0"
									},
									"returnParameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "170:0:0"
									},
									"scope": 42,
									"src": "120:51:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "184:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "201:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "193:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "193:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "214:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "209:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 12,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "209:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "192:29:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "239:0:0"
									},
									"scope": 42,
									"src": "175:65:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 23,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "253:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "271:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "263:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 17,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "263:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "262:15:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "309:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "301:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 20,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "301:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "300:17:0"
									},
									"scope": 42,
									"src": "244:74:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "095ea7b3",
									"id": 32,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "331:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "guy",
												"nameLocation": "347:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "339:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 24,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "339:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "wad",
												"nameLocation": "357:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "352:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 26,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "352:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "338:23:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "380:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 29,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "380:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "379:6:0"
									},
									"scope": 42,
									"src": "322:64:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "dd62ed3e",
									"id": 41,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "399:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "417:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "409:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 33,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "409:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "432:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "424:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 35,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "424:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "408:32:0"
									},
									"returnParameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "458:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "458:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "457:9:0"
									},
									"scope": 42,
									"src": "390:77:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 43,
							"src": "60:410:0",
							"usedErrors": []
						}
					],
					"src": "33:437:0"
				},
				"id": 0
			},
			"contracts/StrongHands.sol": {
				"ast": {
					"absolutePath": "contracts/StrongHands.sol",
					"exportedSymbols": {
						"DataTypes": [
							1402
						],
						"ERC20": [
							42
						],
						"IAToken": [
							806
						],
						"IERC20": [
							712
						],
						"ILendingPool": [
							1185
						],
						"ILendingPoolAddressesProvider": [
							1336
						],
						"IScaledBalanceToken": [
							1363
						],
						"StrongHands": [
							634
						]
					},
					"id": 635,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 44,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "33:25:1"
						},
						{
							"absolutePath": "https://github.com/aave/protocol-v2/blob/ice/mainnet-deployment-03-12-2020/contracts/interfaces/ILendingPool.sol",
							"file": "https://github.com/aave/protocol-v2/blob/ice/mainnet-deployment-03-12-2020/contracts/interfaces/ILendingPool.sol",
							"id": 45,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 635,
							"sourceUnit": 1186,
							"src": "62:122:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/aave/protocol-v2/blob/ice/mainnet-deployment-03-12-2020/contracts/interfaces/ILendingPoolAddressesProvider.sol",
							"file": "https://github.com/aave/protocol-v2/blob/ice/mainnet-deployment-03-12-2020/contracts/interfaces/ILendingPoolAddressesProvider.sol",
							"id": 46,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 635,
							"sourceUnit": 1337,
							"src": "186:139:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/aave/protocol-v2/blob/ice/mainnet-deployment-03-12-2020/contracts/protocol/libraries/types/DataTypes.sol",
							"file": "https://github.com/aave/protocol-v2/blob/ice/mainnet-deployment-03-12-2020/contracts/protocol/libraries/types/DataTypes.sol",
							"id": 47,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 635,
							"sourceUnit": 1403,
							"src": "327:133:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/aave/protocol-v2/blob/ice/mainnet-deployment-03-12-2020/contracts/interfaces/IAToken.sol",
							"file": "https://github.com/aave/protocol-v2/blob/ice/mainnet-deployment-03-12-2020/contracts/interfaces/IAToken.sol",
							"id": 48,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 635,
							"sourceUnit": 807,
							"src": "462:117:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/ERC20.sol",
							"file": "./ERC20.sol",
							"id": 49,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 635,
							"sourceUnit": 43,
							"src": "581:21:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StrongHands",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 634,
							"linearizedBaseContracts": [
								634
							],
							"name": "StrongHands",
							"nameLocation": "615:11:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StrongHands.user",
									"id": 56,
									"members": [
										{
											"constant": false,
											"id": 51,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "668:5:1",
											"nodeType": "VariableDeclaration",
											"scope": 56,
											"src": "663:10:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 50,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "663:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 53,
											"mutability": "mutable",
											"name": "lockTime",
											"nameLocation": "689:8:1",
											"nodeType": "VariableDeclaration",
											"scope": 56,
											"src": "684:13:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 52,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "684:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 55,
											"mutability": "mutable",
											"name": "flag",
											"nameLocation": "713:4:1",
											"nodeType": "VariableDeclaration",
											"scope": 56,
											"src": "708:9:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 54,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "708:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "user",
									"nameLocation": "642:4:1",
									"nodeType": "StructDefinition",
									"scope": 634,
									"src": "635:90:1",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 61,
									"mutability": "mutable",
									"name": "allUsers",
									"nameLocation": "763:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 634,
									"src": "737:34:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_user_$56_storage_$",
										"typeString": "mapping(address => struct StrongHands.user)"
									},
									"typeName": {
										"id": 60,
										"keyType": {
											"id": 57,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "746:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "737:25:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_user_$56_storage_$",
											"typeString": "mapping(address => struct StrongHands.user)"
										},
										"valueType": {
											"id": 59,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 58,
												"name": "user",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 56,
												"src": "757:4:1"
											},
											"referencedDeclaration": 56,
											"src": "757:4:1",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_user_$56_storage_ptr",
												"typeString": "struct StrongHands.user"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 64,
									"mutability": "mutable",
									"name": "usernames",
									"nameLocation": "798:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 634,
									"src": "778:29:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 62,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "778:7:1",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 63,
										"nodeType": "ArrayTypeName",
										"src": "778:10:1",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 66,
									"mutability": "mutable",
									"name": "manager",
									"nameLocation": "830:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 634,
									"src": "814:23:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 65,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "814:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 68,
									"mutability": "immutable",
									"name": "timeToBeLocked",
									"nameLocation": "867:14:1",
									"nodeType": "VariableDeclaration",
									"scope": 634,
									"src": "844:37:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 67,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "844:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 71,
									"mutability": "immutable",
									"name": "weth",
									"nameLocation": "912:4:1",
									"nodeType": "VariableDeclaration",
									"scope": 634,
									"src": "888:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ERC20_$42",
										"typeString": "contract ERC20"
									},
									"typeName": {
										"id": 70,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 69,
											"name": "ERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 42,
											"src": "888:5:1"
										},
										"referencedDeclaration": 42,
										"src": "888:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20_$42",
											"typeString": "contract ERC20"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 74,
									"mutability": "mutable",
									"name": "provider",
									"nameLocation": "961:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 634,
									"src": "923:46:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ILendingPoolAddressesProvider_$1336",
										"typeString": "contract ILendingPoolAddressesProvider"
									},
									"typeName": {
										"id": 73,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 72,
											"name": "ILendingPoolAddressesProvider",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1336,
											"src": "923:29:1"
										},
										"referencedDeclaration": 1336,
										"src": "923:29:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ILendingPoolAddressesProvider_$1336",
											"typeString": "contract ILendingPoolAddressesProvider"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 77,
									"mutability": "mutable",
									"name": "lending_pool",
									"nameLocation": "997:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 634,
									"src": "976:33:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ILendingPool_$1185",
										"typeString": "contract ILendingPool"
									},
									"typeName": {
										"id": 76,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 75,
											"name": "ILendingPool",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1185,
											"src": "976:12:1"
										},
										"referencedDeclaration": 1185,
										"src": "976:12:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ILendingPool_$1185",
											"typeString": "contract ILendingPool"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "1d01364c",
									"id": 79,
									"mutability": "mutable",
									"name": "depositedAmount",
									"nameLocation": "1028:15:1",
									"nodeType": "VariableDeclaration",
									"scope": 634,
									"src": "1016:27:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 78,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1016:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 82,
									"mutability": "constant",
									"name": "percision",
									"nameLocation": "1064:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 634,
									"src": "1050:31:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 80,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1050:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130303030",
										"id": 81,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1076:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000_by_1",
											"typeString": "int_const 10000"
										},
										"value": "10000"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 137,
										"nodeType": "Block",
										"src": "1124:406:1",
										"statements": [
											{
												"expression": {
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 87,
														"name": "manager",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 66,
														"src": "1135:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 88,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1145:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 89,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1145:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1135:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 91,
												"nodeType": "ExpressionStatement",
												"src": "1135:20:1"
											},
											{
												"expression": {
													"id": 94,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 92,
														"name": "timeToBeLocked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 68,
														"src": "1166:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 93,
														"name": "lockTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1183:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1166:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 95,
												"nodeType": "ExpressionStatement",
												"src": "1166:25:1"
											},
											{
												"expression": {
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 96,
														"name": "weth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 71,
														"src": "1202:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC20_$42",
															"typeString": "contract ERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "307864304131453335393831313332326439373939314530336638363361304333304332634630323943",
																"id": 98,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1215:42:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"value": "0xd0A1E359811322d97991E03f863a0C30C2cF029C"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 97,
															"name": "ERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 42,
															"src": "1209:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC20_$42_$",
																"typeString": "type(contract ERC20)"
															}
														},
														"id": 99,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1209:49:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC20_$42",
															"typeString": "contract ERC20"
														}
													},
													"src": "1202:56:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC20_$42",
														"typeString": "contract ERC20"
													}
												},
												"id": 101,
												"nodeType": "ExpressionStatement",
												"src": "1202:56:1"
											},
											{
												"expression": {
													"id": 109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 102,
														"name": "provider",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 74,
														"src": "1269:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ILendingPoolAddressesProvider_$1336",
															"typeString": "contract ILendingPoolAddressesProvider"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"hexValue": "307838383735376632663939313735333837614234433661346233303637633737413639356230333439",
																		"id": 106,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1318:42:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"value": "0x88757f2f99175387aB4C6a4b3067c77A695b0349"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 105,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1310:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 104,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1310:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 107,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1310:51:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 103,
															"name": "ILendingPoolAddressesProvider",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1336,
															"src": "1280:29:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ILendingPoolAddressesProvider_$1336_$",
																"typeString": "type(contract ILendingPoolAddressesProvider)"
															}
														},
														"id": 108,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1280:82:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ILendingPoolAddressesProvider_$1336",
															"typeString": "contract ILendingPoolAddressesProvider"
														}
													},
													"src": "1269:93:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ILendingPoolAddressesProvider_$1336",
														"typeString": "contract ILendingPoolAddressesProvider"
													}
												},
												"id": 110,
												"nodeType": "ExpressionStatement",
												"src": "1269:93:1"
											},
											{
												"expression": {
													"id": 117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 111,
														"name": "lending_pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 77,
														"src": "1373:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ILendingPool_$1185",
															"typeString": "contract ILendingPool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 113,
																		"name": "provider",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 74,
																		"src": "1401:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ILendingPoolAddressesProvider_$1336",
																			"typeString": "contract ILendingPoolAddressesProvider"
																		}
																	},
																	"id": 114,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "getLendingPool",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1270,
																	"src": "1401:23:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																		"typeString": "function () view external returns (address)"
																	}
																},
																"id": 115,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1401:25:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 112,
															"name": "ILendingPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1185,
															"src": "1388:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ILendingPool_$1185_$",
																"typeString": "type(contract ILendingPool)"
															}
														},
														"id": 116,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1388:39:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ILendingPool_$1185",
															"typeString": "contract ILendingPool"
														}
													},
													"src": "1373:54:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ILendingPool_$1185",
														"typeString": "contract ILendingPool"
													}
												},
												"id": 118,
												"nodeType": "ExpressionStatement",
												"src": "1373:54:1"
											},
											{
												"expression": {
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 119,
														"name": "depositedAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "1438:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 120,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1456:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1438:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 122,
												"nodeType": "ExpressionStatement",
												"src": "1438:19:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 128,
																	"name": "lending_pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 77,
																	"src": "1489:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ILendingPool_$1185",
																		"typeString": "contract ILendingPool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ILendingPool_$1185",
																		"typeString": "contract ILendingPool"
																	}
																],
																"id": 127,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1481:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 126,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1481:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 129,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1481:21:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 132,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1509:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 131,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "1509:7:1",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		}
																	],
																	"id": 130,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "1504:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 133,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1504:13:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint256",
																	"typeString": "type(uint256)"
																}
															},
															"id": 134,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "1504:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 123,
															"name": "weth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "1468:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$42",
																"typeString": "contract ERC20"
															}
														},
														"id": 125,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 32,
														"src": "1468:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1468:54:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 136,
												"nodeType": "ExpressionStatement",
												"src": "1468:54:1"
											}
										]
									},
									"id": 138,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 84,
												"mutability": "mutable",
												"name": "lockTime",
												"nameLocation": "1107:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "1102:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 83,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1102:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:15:1"
									},
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1124:0:1"
									},
									"scope": 634,
									"src": "1090:440:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 150,
										"nodeType": "Block",
										"src": "1683:52:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 144,
															"name": "allUsers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 61,
															"src": "1701:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_user_$56_storage_$",
																"typeString": "mapping(address => struct StrongHands.user storage ref)"
															}
														},
														"id": 147,
														"indexExpression": {
															"expression": {
																"id": 145,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1710:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1710:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1701:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_user_$56_storage",
															"typeString": "struct StrongHands.user storage ref"
														}
													},
													"id": 148,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 51,
													"src": "1701:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 143,
												"id": 149,
												"nodeType": "Return",
												"src": "1694:33:1"
											}
										]
									},
									"documentation": {
										"id": 139,
										"nodeType": "StructuredDocumentation",
										"src": "1539:82:1",
										"text": " Function that returns deposited amount of ETH for the user*"
									},
									"functionSelector": "22e8c87d",
									"id": 151,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUserData",
									"nameLocation": "1636:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1647:2:1"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1675:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "1670:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1670:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1669:8:1"
									},
									"scope": 634,
									"src": "1627:108:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 215,
										"nodeType": "Block",
										"src": "1862:408:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 159,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 156,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1881:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 157,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "1881:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 158,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1893:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1881:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f75206d7573742073656e6420736f6d6520746f6b656e732e2e2e",
															"id": 160,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1896:30:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bad8a69a64d4eb54d6c3bd935b58cb9af8aa4fbfad1377dd6f3891b890280daf",
																"typeString": "literal_string \"You must send some tokens...\""
															},
															"value": "You must send some tokens..."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bad8a69a64d4eb54d6c3bd935b58cb9af8aa4fbfad1377dd6f3891b890280daf",
																"typeString": "literal_string \"You must send some tokens...\""
															}
														],
														"id": 155,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1873:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1873:54:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 162,
												"nodeType": "ExpressionStatement",
												"src": "1873:54:1"
											},
											{
												"expression": {
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 163,
																"name": "allUsers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 61,
																"src": "1938:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_user_$56_storage_$",
																	"typeString": "mapping(address => struct StrongHands.user storage ref)"
																}
															},
															"id": 166,
															"indexExpression": {
																"expression": {
																	"id": 164,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1947:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 165,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1947:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1938:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_user_$56_storage",
																"typeString": "struct StrongHands.user storage ref"
															}
														},
														"id": 167,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 51,
														"src": "1938:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"id": 168,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1968:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 169,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "1968:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1938:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 171,
												"nodeType": "ExpressionStatement",
												"src": "1938:39:1"
											},
											{
												"expression": {
													"id": 179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 172,
																"name": "allUsers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 61,
																"src": "1988:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_user_$56_storage_$",
																	"typeString": "mapping(address => struct StrongHands.user storage ref)"
																}
															},
															"id": 175,
															"indexExpression": {
																"expression": {
																	"id": 173,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1997:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 174,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1997:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1988:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_user_$56_storage",
																"typeString": "struct StrongHands.user storage ref"
															}
														},
														"id": 176,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "lockTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 53,
														"src": "1988:29:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 177,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2020:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 178,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2020:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1988:47:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 180,
												"nodeType": "ExpressionStatement",
												"src": "1988:47:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 181,
																"name": "allUsers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 61,
																"src": "2049:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_user_$56_storage_$",
																	"typeString": "mapping(address => struct StrongHands.user storage ref)"
																}
															},
															"id": 184,
															"indexExpression": {
																"expression": {
																	"id": 182,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2058:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 183,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2058:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2049:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_user_$56_storage",
																"typeString": "struct StrongHands.user storage ref"
															}
														},
														"id": 185,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "flag",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 55,
														"src": "2049:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "66616c7365",
														"id": 186,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2078:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2049:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 204,
												"nodeType": "IfStatement",
												"src": "2046:148:1",
												"trueBody": {
													"id": 203,
													"nodeType": "Block",
													"src": "2094:100:1",
													"statements": [
														{
															"expression": {
																"id": 194,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 188,
																			"name": "allUsers",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 61,
																			"src": "2109:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_user_$56_storage_$",
																				"typeString": "mapping(address => struct StrongHands.user storage ref)"
																			}
																		},
																		"id": 191,
																		"indexExpression": {
																			"expression": {
																				"id": 189,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "2118:3:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 190,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "2118:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2109:20:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_user_$56_storage",
																			"typeString": "struct StrongHands.user storage ref"
																		}
																	},
																	"id": 192,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "flag",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 55,
																	"src": "2109:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 193,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2137:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "2109:32:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 195,
															"nodeType": "ExpressionStatement",
															"src": "2109:32:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 199,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2171:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 200,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2171:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 196,
																		"name": "usernames",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 64,
																		"src": "2156:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 198,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "2156:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
																		"typeString": "function (address[] storage pointer,address)"
																	}
																},
																"id": 201,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2156:26:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 202,
															"nodeType": "ExpressionStatement",
															"src": "2156:26:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 206,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2215:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 207,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "2215:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 205,
														"name": "depositAave",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 625,
														"src": "2203:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2203:22:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 209,
												"nodeType": "ExpressionStatement",
												"src": "2203:22:1"
											},
											{
												"expression": {
													"id": 213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 210,
														"name": "depositedAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "2235:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"id": 211,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2253:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 212,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "2253:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2235:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 214,
												"nodeType": "ExpressionStatement",
												"src": "2235:27:1"
											}
										]
									},
									"documentation": {
										"id": 152,
										"nodeType": "StructuredDocumentation",
										"src": "1743:72:1",
										"text": " Function that sends ETH to AAVE V2 Lending Pool *"
									},
									"functionSelector": "0e29df22",
									"id": 216,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendEther",
									"nameLocation": "1830:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1839:2:1"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1862:0:1"
									},
									"scope": 634,
									"src": "1821:449:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 458,
										"nodeType": "Block",
										"src": "2525:2712:1",
										"statements": [
											{
												"assignments": [
													221
												],
												"declarations": [
													{
														"constant": false,
														"id": 221,
														"mutability": "mutable",
														"name": "currentMoneyOfUser",
														"nameLocation": "2541:18:1",
														"nodeType": "VariableDeclaration",
														"scope": 458,
														"src": "2536:23:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 220,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2536:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 227,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 222,
															"name": "allUsers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 61,
															"src": "2562:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_user_$56_storage_$",
																"typeString": "mapping(address => struct StrongHands.user storage ref)"
															}
														},
														"id": 225,
														"indexExpression": {
															"expression": {
																"id": 223,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2571:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 224,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2571:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2562:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_user_$56_storage",
															"typeString": "struct StrongHands.user storage ref"
														}
													},
													"id": 226,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 51,
													"src": "2562:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2536:52:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 231,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 229,
																"name": "currentMoneyOfUser",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 221,
																"src": "2607:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 230,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2628:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2607:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5573657220646f6e27742068617665206465706f736974656420455448",
															"id": 232,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2631:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cd3f2efd2471e6a0a5c018719572f02b194bf693339d22d7875056148557fcee",
																"typeString": "literal_string \"User don't have deposited ETH\""
															},
															"value": "User don't have deposited ETH"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cd3f2efd2471e6a0a5c018719572f02b194bf693339d22d7875056148557fcee",
																"typeString": "literal_string \"User don't have deposited ETH\""
															}
														],
														"id": 228,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2599:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2599:64:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 234,
												"nodeType": "ExpressionStatement",
												"src": "2599:64:1"
											},
											{
												"assignments": [
													236
												],
												"declarations": [
													{
														"constant": false,
														"id": 236,
														"mutability": "mutable",
														"name": "lockTimeOfUser",
														"nameLocation": "2679:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 458,
														"src": "2674:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 235,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2674:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 242,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 237,
															"name": "allUsers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 61,
															"src": "2696:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_user_$56_storage_$",
																"typeString": "mapping(address => struct StrongHands.user storage ref)"
															}
														},
														"id": 240,
														"indexExpression": {
															"expression": {
																"id": 238,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2705:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 239,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2705:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2696:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_user_$56_storage",
															"typeString": "struct StrongHands.user storage ref"
														}
													},
													"id": 241,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "lockTime",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 53,
													"src": "2696:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2674:51:1"
											},
											{
												"assignments": [
													244
												],
												"declarations": [
													{
														"constant": false,
														"id": 244,
														"mutability": "mutable",
														"name": "currentBlockTime",
														"nameLocation": "2741:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 458,
														"src": "2736:21:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 243,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2736:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 247,
												"initialValue": {
													"expression": {
														"id": 245,
														"name": "block",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967292,
														"src": "2760:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_block",
															"typeString": "block"
														}
													},
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "timestamp",
													"nodeType": "MemberAccess",
													"src": "2760:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2736:39:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 248,
														"name": "currentBlockTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 244,
														"src": "2789:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 251,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 249,
															"name": "lockTimeOfUser",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 236,
															"src": "2808:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 250,
															"name": "timeToBeLocked",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 68,
															"src": "2825:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2808:31:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2789:50:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 288,
												"nodeType": "IfStatement",
												"src": "2786:553:1",
												"trueBody": {
													"id": 287,
													"nodeType": "Block",
													"src": "2853:486:1",
													"statements": [
														{
															"documentation": "This part of the code returns full value \nof ETH to the user because lock time has expired*",
															"expression": {
																"id": 259,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 253,
																			"name": "allUsers",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 61,
																			"src": "3034:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_user_$56_storage_$",
																				"typeString": "mapping(address => struct StrongHands.user storage ref)"
																			}
																		},
																		"id": 256,
																		"indexExpression": {
																			"expression": {
																				"id": 254,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "3043:3:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 255,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "3043:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3034:20:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_user_$56_storage",
																			"typeString": "struct StrongHands.user storage ref"
																		}
																	},
																	"id": 257,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 51,
																	"src": "3034:26:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 258,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3063:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3034:30:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 260,
															"nodeType": "ExpressionStatement",
															"src": "3034:30:1"
														},
														{
															"expression": {
																"id": 265,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 261,
																	"name": "depositedAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 79,
																	"src": "3079:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 264,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 262,
																		"name": "depositedAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 79,
																		"src": "3097:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 263,
																		"name": "currentMoneyOfUser",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 221,
																		"src": "3115:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3097:36:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3079:54:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 266,
															"nodeType": "ExpressionStatement",
															"src": "3079:54:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 268,
																		"name": "currentMoneyOfUser",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 221,
																		"src": "3161:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 267,
																	"name": "withdrawWETH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 593,
																	"src": "3148:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 269,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3148:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 270,
															"nodeType": "ExpressionStatement",
															"src": "3148:32:1"
														},
														{
															"assignments": [
																272,
																null
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 272,
																	"mutability": "mutable",
																	"name": "succ",
																	"nameLocation": "3201:4:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 287,
																	"src": "3196:9:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 271,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "3196:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																},
																null
															],
															"id": 280,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "",
																		"id": 278,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3255:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																				"typeString": "literal_string \"\""
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 273,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "3211:3:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 274,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "3211:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 275,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "call",
																		"nodeType": "MemberAccess",
																		"src": "3211:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																		}
																	},
																	"id": 277,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"names": [
																		"value"
																	],
																	"nodeType": "FunctionCallOptions",
																	"options": [
																		{
																			"id": 276,
																			"name": "currentMoneyOfUser",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 221,
																			"src": "3235:18:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"src": "3211:43:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
																		"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																	}
																},
																"id": 279,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3211:47:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "tuple(bool,bytes memory)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3195:63:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 282,
																		"name": "succ",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 272,
																		"src": "3281:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5472616e73666572206661696c65642e",
																		"id": 283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3287:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c81948f77ae7b56f1759fc612b6b373d090eebe7124f74c528fff8e0a139fe69",
																			"typeString": "literal_string \"Transfer failed.\""
																		},
																		"value": "Transfer failed."
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_c81948f77ae7b56f1759fc612b6b373d090eebe7124f74c528fff8e0a139fe69",
																			"typeString": "literal_string \"Transfer failed.\""
																		}
																	],
																	"id": 281,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3273:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3273:33:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 285,
															"nodeType": "ExpressionStatement",
															"src": "3273:33:1"
														},
														{
															"functionReturnParameters": 219,
															"id": 286,
															"nodeType": "Return",
															"src": "3321:7:1"
														}
													]
												}
											},
											{
												"assignments": [
													291
												],
												"declarations": [
													{
														"constant": false,
														"id": 291,
														"mutability": "mutable",
														"name": "spentTime",
														"nameLocation": "3669:9:1",
														"nodeType": "VariableDeclaration",
														"scope": 458,
														"src": "3664:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 290,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3664:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"documentation": "This part of the code is giving penalty to the user due to witdrawing coins before locktime runs out\nby taking some amount of his ETH coins and giving them to the other users proportional to how much Ether \nthey have deposited on the contract.*",
												"id": 302,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 297,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 294,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 292,
																				"name": "currentBlockTime",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 244,
																				"src": "3683:16:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 293,
																				"name": "lockTimeOfUser",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 236,
																				"src": "3700:14:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3683:31:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 295,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3682:33:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "313030",
																	"id": 296,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3716:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"src": "3682:37:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 298,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3681:39:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"components": [
															{
																"id": 299,
																"name": "timeToBeLocked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 68,
																"src": "3722:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 300,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3721:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3681:56:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3664:73:1"
											},
											{
												"assignments": [
													304
												],
												"declarations": [
													{
														"constant": false,
														"id": 304,
														"mutability": "mutable",
														"name": "toBePayed",
														"nameLocation": "3782:9:1",
														"nodeType": "VariableDeclaration",
														"scope": 458,
														"src": "3777:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 303,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3777:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 317,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 313,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 305,
																	"name": "currentMoneyOfUser",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 221,
																	"src": "3795:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 311,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 308,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "313030",
																							"id": 306,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "3818:3:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_100_by_1",
																								"typeString": "int_const 100"
																							},
																							"value": "100"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"id": 307,
																							"name": "spentTime",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 291,
																							"src": "3824:9:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "3818:15:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 309,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3817:17:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 310,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3835:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "3817:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 312,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3816:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3795:42:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 314,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3794:44:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 315,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3840:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "3794:49:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3777:66:1"
											},
											{
												"assignments": [
													319
												],
												"declarations": [
													{
														"constant": false,
														"id": 319,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "3882:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 458,
														"src": "3877:6:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 318,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3877:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 321,
												"initialValue": {
													"id": 320,
													"name": "toBePayed",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 304,
													"src": "3886:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3877:18:1"
											},
											{
												"assignments": [
													323
												],
												"declarations": [
													{
														"constant": false,
														"id": 323,
														"mutability": "mutable",
														"name": "money",
														"nameLocation": "4023:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 458,
														"src": "4018:10:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 322,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4018:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 327,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 324,
														"name": "depositedAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "4031:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 325,
														"name": "currentMoneyOfUser",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 221,
														"src": "4050:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4031:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4018:50:1"
											},
											{
												"assignments": [
													332
												],
												"declarations": [
													{
														"constant": false,
														"id": 332,
														"mutability": "mutable",
														"name": "_usernames",
														"nameLocation": "4161:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 458,
														"src": "4142:29:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 330,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4142:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 331,
															"nodeType": "ArrayTypeName",
															"src": "4142:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 334,
												"initialValue": {
													"id": 333,
													"name": "usernames",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 64,
													"src": "4174:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4142:41:1"
											},
											{
												"assignments": [
													336
												],
												"declarations": [
													{
														"constant": false,
														"id": 336,
														"mutability": "mutable",
														"name": "perc",
														"nameLocation": "4199:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 458,
														"src": "4194:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 335,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4194:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 337,
												"nodeType": "VariableDeclarationStatement",
												"src": "4194:9:1"
											},
											{
												"assignments": [
													339
												],
												"declarations": [
													{
														"constant": false,
														"id": 339,
														"mutability": "mutable",
														"name": "toPay",
														"nameLocation": "4220:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 458,
														"src": "4215:10:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 338,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4215:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 340,
												"nodeType": "VariableDeclarationStatement",
												"src": "4215:10:1"
											},
											{
												"body": {
													"id": 407,
													"nodeType": "Block",
													"src": "4290:555:1",
													"statements": [
														{
															"assignments": [
																353
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 353,
																	"mutability": "mutable",
																	"name": "currentMappedUserValue",
																	"nameLocation": "4310:22:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 407,
																	"src": "4305:27:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 352,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "4305:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 360,
															"initialValue": {
																"expression": {
																	"baseExpression": {
																		"id": 354,
																		"name": "allUsers",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 61,
																		"src": "4335:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_user_$56_storage_$",
																			"typeString": "mapping(address => struct StrongHands.user storage ref)"
																		}
																	},
																	"id": 358,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 355,
																			"name": "_usernames",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 332,
																			"src": "4344:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 357,
																		"indexExpression": {
																			"id": 356,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 342,
																			"src": "4355:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4344:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4335:23:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_user_$56_storage",
																		"typeString": "struct StrongHands.user storage ref"
																	}
																},
																"id": 359,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 51,
																"src": "4335:29:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4305:59:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 366,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"baseExpression": {
																			"id": 361,
																			"name": "_usernames",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 332,
																			"src": "4382:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 363,
																		"indexExpression": {
																			"id": 362,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 342,
																			"src": "4393:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4382:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "!=",
																	"rightExpression": {
																		"expression": {
																			"id": 364,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4397:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 365,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4397:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "4382:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 369,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 367,
																		"name": "currentMappedUserValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 353,
																		"src": "4412:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 368,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4437:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4412:26:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "4382:56:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 406,
															"nodeType": "IfStatement",
															"src": "4379:455:1",
															"trueBody": {
																"id": 405,
																"nodeType": "Block",
																"src": "4453:381:1",
																"statements": [
																	{
																		"documentation": "Calculating the proportional amount of all users and sharing the penalty of msg.sender*",
																		"expression": {
																			"id": 378,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 371,
																				"name": "perc",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 336,
																				"src": "4623:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 377,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 374,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 372,
																								"name": "currentMappedUserValue",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 353,
																								"src": "4631:22:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "*",
																							"rightExpression": {
																								"id": 373,
																								"name": "percision",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 82,
																								"src": "4656:9:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "4631:34:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 375,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "4630:36:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 376,
																					"name": "money",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 323,
																					"src": "4669:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "4630:44:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4623:51:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 379,
																		"nodeType": "ExpressionStatement",
																		"src": "4623:51:1"
																	},
																	{
																		"expression": {
																			"id": 388,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 380,
																				"name": "toPay",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 339,
																				"src": "4694:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 387,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 383,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 381,
																								"name": "toBePayed",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 304,
																								"src": "4703:9:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "*",
																							"rightExpression": {
																								"id": 382,
																								"name": "perc",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 336,
																								"src": "4713:4:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "4703:14:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 384,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "4702:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"components": [
																						{
																							"id": 385,
																							"name": "percision",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 82,
																							"src": "4720:9:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 386,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "4719:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "4702:28:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4694:36:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 389,
																		"nodeType": "ExpressionStatement",
																		"src": "4694:36:1"
																	},
																	{
																		"expression": {
																			"id": 394,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 390,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 319,
																				"src": "4749:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 393,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 391,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 319,
																					"src": "4753:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 392,
																					"name": "toPay",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 339,
																					"src": "4757:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "4753:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4749:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 395,
																		"nodeType": "ExpressionStatement",
																		"src": "4749:13:1"
																	},
																	{
																		"expression": {
																			"id": 403,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"baseExpression": {
																						"id": 396,
																						"name": "allUsers",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 61,
																						"src": "4781:8:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_user_$56_storage_$",
																							"typeString": "mapping(address => struct StrongHands.user storage ref)"
																						}
																					},
																					"id": 400,
																					"indexExpression": {
																						"baseExpression": {
																							"id": 397,
																							"name": "_usernames",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 332,
																							"src": "4790:10:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																								"typeString": "address[] memory"
																							}
																						},
																						"id": 399,
																						"indexExpression": {
																							"id": 398,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 342,
																							"src": "4801:1:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "4790:13:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "4781:23:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_user_$56_storage",
																						"typeString": "struct StrongHands.user storage ref"
																					}
																				},
																				"id": 401,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberName": "value",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 51,
																				"src": "4781:29:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"id": 402,
																				"name": "toPay",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 339,
																				"src": "4813:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4781:37:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 404,
																		"nodeType": "ExpressionStatement",
																		"src": "4781:37:1"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 345,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 342,
														"src": "4253:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 346,
															"name": "_usernames",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 332,
															"src": "4257:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 347,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4257:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4253:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 408,
												"initializationExpression": {
													"assignments": [
														342
													],
													"declarations": [
														{
															"constant": false,
															"id": 342,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "4246:1:1",
															"nodeType": "VariableDeclaration",
															"scope": 408,
															"src": "4241:6:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 341,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "4241:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 344,
													"initialValue": {
														"hexValue": "30",
														"id": 343,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4250:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4241:10:1"
												},
												"loopExpression": {
													"expression": {
														"id": 350,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4276:3:1",
														"subExpression": {
															"id": 349,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 342,
															"src": "4276:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 351,
													"nodeType": "ExpressionStatement",
													"src": "4276:3:1"
												},
												"nodeType": "ForStatement",
												"src": "4236:609:1"
											},
											{
												"expression": {
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 409,
														"name": "currentMoneyOfUser",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 221,
														"src": "4857:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 414,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 412,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 410,
																"name": "currentMoneyOfUser",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 221,
																"src": "4878:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 411,
																"name": "toBePayed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 304,
																"src": "4899:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4878:30:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 413,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 319,
															"src": "4911:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4878:34:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4857:55:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 416,
												"nodeType": "ExpressionStatement",
												"src": "4857:55:1"
											},
											{
												"expression": {
													"id": 421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 417,
														"name": "depositedAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "4924:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 420,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 418,
															"name": "depositedAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 79,
															"src": "4942:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 419,
															"name": "currentMoneyOfUser",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 221,
															"src": "4960:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4942:36:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4924:54:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 422,
												"nodeType": "ExpressionStatement",
												"src": "4924:54:1"
											},
											{
												"expression": {
													"id": 429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 423,
																"name": "allUsers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 61,
																"src": "4989:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_user_$56_storage_$",
																	"typeString": "mapping(address => struct StrongHands.user storage ref)"
																}
															},
															"id": 426,
															"indexExpression": {
																"expression": {
																	"id": 424,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4998:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 425,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "4998:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4989:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_user_$56_storage",
																"typeString": "struct StrongHands.user storage ref"
															}
														},
														"id": 427,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 51,
														"src": "4989:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 428,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5018:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4989:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 430,
												"nodeType": "ExpressionStatement",
												"src": "4989:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 432,
															"name": "currentMoneyOfUser",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 221,
															"src": "5043:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 431,
														"name": "withdrawWETH",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 593,
														"src": "5030:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5030:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 434,
												"nodeType": "ExpressionStatement",
												"src": "5030:32:1"
											},
											{
												"assignments": [
													436,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 436,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5079:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 458,
														"src": "5074:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 435,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5074:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 444,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 442,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5136:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"expression": {
																	"id": 437,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "5092:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 438,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "5092:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 439,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5092:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 441,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 440,
																"name": "currentMoneyOfUser",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 221,
																"src": "5116:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5092:43:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5092:47:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5073:66:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 446,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 436,
															"src": "5158:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c65642e",
															"id": 447,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5167:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c81948f77ae7b56f1759fc612b6b373d090eebe7124f74c528fff8e0a139fe69",
																"typeString": "literal_string \"Transfer failed.\""
															},
															"value": "Transfer failed."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c81948f77ae7b56f1759fc612b6b373d090eebe7124f74c528fff8e0a139fe69",
																"typeString": "literal_string \"Transfer failed.\""
															}
														],
														"id": 445,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5150:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5150:36:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 449,
												"nodeType": "ExpressionStatement",
												"src": "5150:36:1"
											},
											{
												"expression": {
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 450,
																"name": "allUsers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 61,
																"src": "5197:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_user_$56_storage_$",
																	"typeString": "mapping(address => struct StrongHands.user storage ref)"
																}
															},
															"id": 453,
															"indexExpression": {
																"expression": {
																	"id": 451,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "5206:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 452,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "5206:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5197:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_user_$56_storage",
																"typeString": "struct StrongHands.user storage ref"
															}
														},
														"id": 454,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 51,
														"src": "5197:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 455,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5226:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5197:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 457,
												"nodeType": "ExpressionStatement",
												"src": "5197:30:1"
											}
										]
									},
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "2278:199:1",
										"text": " A function that returns ETH from AAVE Lending Pool to the user and distributes a portion\n  to other usersif the user has withdrawn ETH before a defined time period*"
									},
									"functionSelector": "db88031a",
									"id": 459,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMyEther",
									"nameLocation": "2492:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2502:2:1"
									},
									"returnParameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2525:0:1"
									},
									"scope": 634,
									"src": "2483:2754:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 497,
										"nodeType": "Block",
										"src": "5430:262:1",
										"statements": [
											{
												"assignments": [
													466
												],
												"declarations": [
													{
														"constant": false,
														"id": 466,
														"mutability": "mutable",
														"name": "income",
														"nameLocation": "5448:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 497,
														"src": "5443:11:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 465,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5443:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 471,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 467,
															"name": "getCurrentBalanceOfATokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 553,
															"src": "5457:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 468,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5457:28:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 469,
														"name": "depositedAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "5488:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5457:46:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5443:60:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 475,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 473,
																"name": "income",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 466,
																"src": "5524:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 474,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5533:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5524:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 472,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5516:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5516:19:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 477,
												"nodeType": "ExpressionStatement",
												"src": "5516:19:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 479,
															"name": "income",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 466,
															"src": "5561:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 478,
														"name": "withdrawWETH",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 593,
														"src": "5548:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5548:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 481,
												"nodeType": "ExpressionStatement",
												"src": "5548:20:1"
											},
											{
												"assignments": [
													483,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 483,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5587:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 497,
														"src": "5582:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 482,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5582:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 491,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 489,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5632:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"expression": {
																	"id": 484,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "5600:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 485,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "5600:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 486,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5600:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 488,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 487,
																"name": "income",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 466,
																"src": "5624:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5600:31:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5600:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5581:54:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 493,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 483,
															"src": "5656:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c65642e",
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5665:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c81948f77ae7b56f1759fc612b6b373d090eebe7124f74c528fff8e0a139fe69",
																"typeString": "literal_string \"Transfer failed.\""
															},
															"value": "Transfer failed."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c81948f77ae7b56f1759fc612b6b373d090eebe7124f74c528fff8e0a139fe69",
																"typeString": "literal_string \"Transfer failed.\""
															}
														],
														"id": 492,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5648:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5648:36:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 496,
												"nodeType": "ExpressionStatement",
												"src": "5648:36:1"
											}
										]
									},
									"documentation": {
										"id": 460,
										"nodeType": "StructuredDocumentation",
										"src": "5245:120:1",
										"text": "A function that sends passive income to the owner of the contract.\nmanager is the owner*"
									},
									"functionSelector": "e2ec0c2d",
									"id": 498,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 463,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 462,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 510,
												"src": "5415:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "5415:9:1"
										}
									],
									"name": "sendKajmakToOwner",
									"nameLocation": "5380:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5397:2:1"
									},
									"returnParameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5430:0:1"
									},
									"scope": 634,
									"src": "5371:321:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 509,
										"nodeType": "Block",
										"src": "5725:99:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 504,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 501,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "5744:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "5744:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 503,
																"name": "manager",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 66,
																"src": "5758:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5744:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f6e",
															"id": 505,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5768:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef",
																"typeString": "literal_string \"Only owner can call this function\""
															},
															"value": "Only owner can call this function"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef",
																"typeString": "literal_string \"Only owner can call this function\""
															}
														],
														"id": 500,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5736:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5736:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 507,
												"nodeType": "ExpressionStatement",
												"src": "5736:68:1"
											},
											{
												"id": 508,
												"nodeType": "PlaceholderStatement",
												"src": "5815:1:1"
											}
										]
									},
									"id": 510,
									"name": "onlyOwner",
									"nameLocation": "5709:9:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:1"
									},
									"src": "5700:124:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "5945:46:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 516,
																"name": "weth",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "5956:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ERC20_$42",
																	"typeString": "contract ERC20"
																}
															},
															"id": 518,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "deposit",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4,
															"src": "5956:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$__$returns$__$",
																"typeString": "function () payable external"
															}
														},
														"id": 520,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 519,
																"name": "val",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 513,
																"src": "5977:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5956:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$__$returns$__$value",
															"typeString": "function () payable external"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5956:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "5956:27:1"
											}
										]
									},
									"documentation": {
										"id": 511,
										"nodeType": "StructuredDocumentation",
										"src": "5830:64:1",
										"text": "Deposit val amount of ETH to WETH address*"
									},
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "depositETH",
									"nameLocation": "5909:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "val",
												"nameLocation": "5925:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "5920:8:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 512,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5920:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5919:10:1"
									},
									"returnParameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5945:0:1"
									},
									"scope": 634,
									"src": "5900:91:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 552,
										"nodeType": "Block",
										"src": "6155:148:1",
										"statements": [
											{
												"assignments": [
													532
												],
												"declarations": [
													{
														"constant": false,
														"id": 532,
														"mutability": "mutable",
														"name": "aWETH",
														"nameLocation": "6174:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 552,
														"src": "6166:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IAToken_$806",
															"typeString": "contract IAToken"
														},
														"typeName": {
															"id": 531,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 530,
																"name": "IAToken",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 806,
																"src": "6166:7:1"
															},
															"referencedDeclaration": 806,
															"src": "6166:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IAToken_$806",
																"typeString": "contract IAToken"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 543,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 538,
																				"name": "weth",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 71,
																				"src": "6226:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_ERC20_$42",
																					"typeString": "contract ERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_ERC20_$42",
																					"typeString": "contract ERC20"
																				}
																			],
																			"id": 537,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6218:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 536,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6218:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 539,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6218:13:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 534,
																		"name": "lending_pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 77,
																		"src": "6190:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ILendingPool_$1185",
																			"typeString": "contract ILendingPool"
																		}
																	},
																	"id": 535,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "getReserveData",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1147,
																	"src": "6190:27:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_struct$_ReserveData_$1391_memory_ptr_$",
																		"typeString": "function (address) view external returns (struct DataTypes.ReserveData memory)"
																	}
																},
																"id": 540,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6190:42:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ReserveData_$1391_memory_ptr",
																	"typeString": "struct DataTypes.ReserveData memory"
																}
															},
															"id": 541,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "aTokenAddress",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1382,
															"src": "6190:56:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 533,
														"name": "IAToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 806,
														"src": "6182:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IAToken_$806_$",
															"typeString": "type(contract IAToken)"
														}
													},
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6182:65:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IAToken_$806",
														"typeString": "contract IAToken"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6166:81:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 548,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "6289:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StrongHands_$634",
																		"typeString": "contract StrongHands"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_StrongHands_$634",
																		"typeString": "contract StrongHands"
																	}
																],
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6281:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 546,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6281:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 549,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6281:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 544,
															"name": "aWETH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "6265:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IAToken_$806",
																"typeString": "contract IAToken"
															}
														},
														"id": 545,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 651,
														"src": "6265:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6265:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 529,
												"id": 551,
												"nodeType": "Return",
												"src": "6258:37:1"
											}
										]
									},
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "5999:79:1",
										"text": "Returns current balance of AETH tokens for this contract*"
									},
									"functionSelector": "c3d40853",
									"id": 553,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCurrentBalanceOfATokens",
									"nameLocation": "6093:26:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6119:2:1"
									},
									"returnParameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6147:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "6142:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 527,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6142:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6141:8:1"
									},
									"scope": 634,
									"src": "6084:219:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 592,
										"nodeType": "Block",
										"src": "6516:181:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 564,
																	"name": "weth",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 71,
																	"src": "6557:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC20_$42",
																		"typeString": "contract ERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ERC20_$42",
																		"typeString": "contract ERC20"
																	}
																],
																"id": 563,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6549:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 562,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6549:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 565,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6549:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 566,
															"name": "val",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 556,
															"src": "6563:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 569,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "6576:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StrongHands_$634",
																		"typeString": "contract StrongHands"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_StrongHands_$634",
																		"typeString": "contract StrongHands"
																	}
																],
																"id": 568,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6568:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 567,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6568:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 570,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6568:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 559,
															"name": "lending_pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 77,
															"src": "6527:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ILendingPool_$1185",
																"typeString": "contract ILendingPool"
															}
														},
														"id": 561,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "withdraw",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 972,
														"src": "6527:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,uint256,address) external returns (uint256)"
														}
													},
													"id": 571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6527:55:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 572,
												"nodeType": "ExpressionStatement",
												"src": "6527:55:1"
											},
											{
												"assignments": [
													574
												],
												"declarations": [
													{
														"constant": false,
														"id": 574,
														"mutability": "mutable",
														"name": "torf",
														"nameLocation": "6598:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 592,
														"src": "6593:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 573,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6593:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 583,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 579,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "6626:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StrongHands_$634",
																		"typeString": "contract StrongHands"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_StrongHands_$634",
																		"typeString": "contract StrongHands"
																	}
																],
																"id": 578,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6618:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 577,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6618:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6618:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 581,
															"name": "val",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 556,
															"src": "6634:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 575,
															"name": "weth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "6605:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$42",
																"typeString": "contract ERC20"
															}
														},
														"id": 576,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 32,
														"src": "6605:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6605:33:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6593:45:1"
											},
											{
												"condition": {
													"id": 584,
													"name": "torf",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 574,
													"src": "6652:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 591,
												"nodeType": "IfStatement",
												"src": "6649:40:1",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"id": 588,
																"name": "val",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 556,
																"src": "6685:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 585,
																"name": "weth",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "6671:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ERC20_$42",
																	"typeString": "contract ERC20"
																}
															},
															"id": 587,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "withdraw",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 9,
															"src": "6671:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$",
																"typeString": "function (uint256) payable external"
															}
														},
														"id": 589,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6671:18:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 590,
													"nodeType": "ExpressionStatement",
													"src": "6671:18:1"
												}
											}
										]
									},
									"documentation": {
										"id": 554,
										"nodeType": "StructuredDocumentation",
										"src": "6309:150:1",
										"text": "Lending Pool return val tokens to WETH, and they are then \nconverted to ETH and assigned to balance of this contract *"
									},
									"id": 593,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawWETH",
									"nameLocation": "6476:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "val",
												"nameLocation": "6494:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "6489:8:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 555,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6489:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6488:10:1"
									},
									"returnParameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6516:0:1"
									},
									"scope": 634,
									"src": "6467:230:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 624,
										"nodeType": "Block",
										"src": "6828:123:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 602,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 600,
																"name": "val",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 596,
																"src": "6845:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 601,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6851:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6845:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 599,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6837:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6837:16:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "ExpressionStatement",
												"src": "6837:16:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 606,
															"name": "val",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 596,
															"src": "6873:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 605,
														"name": "depositETH",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 524,
														"src": "6862:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6862:15:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 608,
												"nodeType": "ExpressionStatement",
												"src": "6862:15:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 614,
																	"name": "weth",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 71,
																	"src": "6915:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC20_$42",
																		"typeString": "contract ERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ERC20_$42",
																		"typeString": "contract ERC20"
																	}
																],
																"id": 613,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6907:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 612,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6907:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 615,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6907:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 616,
															"name": "val",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 596,
															"src": "6921:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 619,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "6934:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StrongHands_$634",
																		"typeString": "contract StrongHands"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_StrongHands_$634",
																		"typeString": "contract StrongHands"
																	}
																],
																"id": 618,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6926:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 617,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6926:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 620,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6926:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "30",
															"id": 621,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6941:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"expression": {
															"id": 609,
															"name": "lending_pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 77,
															"src": "6886:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ILendingPool_$1185",
																"typeString": "contract ILendingPool"
															}
														},
														"id": 611,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "deposit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 960,
														"src": "6886:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint16_$returns$__$",
															"typeString": "function (address,uint256,address,uint16) external"
														}
													},
													"id": 622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6886:57:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 623,
												"nodeType": "ExpressionStatement",
												"src": "6886:57:1"
											}
										]
									},
									"documentation": {
										"id": 594,
										"nodeType": "StructuredDocumentation",
										"src": "6703:73:1",
										"text": "Depositing val WETH tokens to AAVE V2 Lending Pool*"
									},
									"id": 625,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "depositAave",
									"nameLocation": "6791:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "val",
												"nameLocation": "6808:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "6803:8:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 595,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6803:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6802:10:1"
									},
									"returnParameters": {
										"id": 598,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6828:0:1"
									},
									"scope": 634,
									"src": "6782:169:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 628,
										"nodeType": "Block",
										"src": "6986:2:1",
										"statements": []
									},
									"id": 629,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 626,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6966:2:1"
									},
									"returnParameters": {
										"id": 627,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6986:0:1"
									},
									"scope": 634,
									"src": "6959:29:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 632,
										"nodeType": "Block",
										"src": "7022:2:1",
										"statements": []
									},
									"id": 633,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7002:2:1"
									},
									"returnParameters": {
										"id": 631,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7022:0:1"
									},
									"scope": 634,
									"src": "6994:30:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 635,
							"src": "606:6426:1",
							"usedErrors": []
						}
					],
					"src": "33:6999:1"
				},
				"id": 1
			},
			"https://github.com/aave/protocol-v2/blob/ice/mainnet-deployment-03-12-2020/contracts/dependencies/openzeppelin/contracts/IERC20.sol": {
				"ast": {
					"absolutePath": "https://github.com/aave/protocol-v2/blob/ice/mainnet-deployment-03-12-2020/contracts/dependencies/openzeppelin/contracts/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							712
						]
					},
					"id": 713,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 636,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "37:25:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 637,
								"nodeType": "StructuredDocumentation",
								"src": "64:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 712,
							"linearizedBaseContracts": [
								712
							],
							"name": "IERC20",
							"nameLocation": "145:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 638,
										"nodeType": "StructuredDocumentation",
										"src": "156:62:2",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 643,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "230:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "241:2:2"
									},
									"returnParameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 643,
												"src": "267:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 640,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "267:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "266:9:2"
									},
									"scope": 712,
									"src": "221:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 644,
										"nodeType": "StructuredDocumentation",
										"src": "280:68:2",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 651,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "360:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 646,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "378:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "370:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 645,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "370:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "369:17:2"
									},
									"returnParameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "410:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 648,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "410:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "409:9:2"
									},
									"scope": 712,
									"src": "351:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 652,
										"nodeType": "StructuredDocumentation",
										"src": "423:197:2",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 661,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "632:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 657,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "649:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "641:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 653,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "641:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "668:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "660:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 655,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "660:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "640:35:2"
									},
									"returnParameters": {
										"id": 660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "694:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 658,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "694:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "693:6:2"
									},
									"scope": 712,
									"src": "623:77:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 662,
										"nodeType": "StructuredDocumentation",
										"src": "704:252:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 671,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "968:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "986:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "978:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 663,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "978:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 666,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1001:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "993:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "993:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "977:32:2"
									},
									"returnParameters": {
										"id": 670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "1033:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 668,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1033:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1032:9:2"
									},
									"scope": 712,
									"src": "959:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 672,
										"nodeType": "StructuredDocumentation",
										"src": "1046:616:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 681,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1674:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1690:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "1682:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 673,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1682:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1707:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "1699:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1699:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1681:33:2"
									},
									"returnParameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "1733:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 678,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1733:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1732:6:2"
									},
									"scope": 712,
									"src": "1665:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 682,
										"nodeType": "StructuredDocumentation",
										"src": "1743:280:2",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 693,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2035:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2061:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 693,
												"src": "2053:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 683,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2053:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2081:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 693,
												"src": "2073:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 685,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2073:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2104:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 693,
												"src": "2096:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 687,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2096:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2047:67:2"
									},
									"returnParameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 693,
												"src": "2133:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 690,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2133:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2132:6:2"
									},
									"scope": 712,
									"src": "2026:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 694,
										"nodeType": "StructuredDocumentation",
										"src": "2143:148:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 702,
									"name": "Transfer",
									"nameLocation": "2300:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 696,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2325:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "2309:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 695,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2309:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 698,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2347:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "2331:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 697,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2331:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 700,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2359:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "2351:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 699,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2351:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2308:57:2"
									},
									"src": "2294:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 703,
										"nodeType": "StructuredDocumentation",
										"src": "2370:142:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 711,
									"name": "Approval",
									"nameLocation": "2521:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2546:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 711,
												"src": "2530:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 704,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2530:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 707,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2569:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 711,
												"src": "2553:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 706,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2553:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 709,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2586:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 711,
												"src": "2578:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2578:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2529:63:2"
									},
									"src": "2515:78:2"
								}
							],
							"scope": 713,
							"src": "135:2460:2",
							"usedErrors": []
						}
					],
					"src": "37:2559:2"
				},
				"id": 2
			},
			"https://github.com/aave/protocol-v2/blob/ice/mainnet-deployment-03-12-2020/contracts/interfaces/IAToken.sol": {
				"ast": {
					"absolutePath": "https://github.com/aave/protocol-v2/blob/ice/mainnet-deployment-03-12-2020/contracts/interfaces/IAToken.sol",
					"exportedSymbols": {
						"IAToken": [
							806
						],
						"IERC20": [
							712
						],
						"IScaledBalanceToken": [
							1363
						]
					},
					"id": 807,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 714,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "37:25:3"
						},
						{
							"absolutePath": "https://github.com/aave/protocol-v2/blob/ice/mainnet-deployment-03-12-2020/contracts/dependencies/openzeppelin/contracts/IERC20.sol",
							"file": "../dependencies/openzeppelin/contracts/IERC20.sol",
							"id": 716,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 807,
							"sourceUnit": 713,
							"src": "64:73:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 715,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 712,
										"src": "72:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/aave/protocol-v2/blob/ice/mainnet-deployment-03-12-2020/contracts/interfaces/IScaledBalanceToken.sol",
							"file": "https://github.com/aave/protocol-v2/blob/ice/mainnet-deployment-03-12-2020/contracts/interfaces/IScaledBalanceToken.sol",
							"id": 718,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 807,
							"sourceUnit": 1364,
							"src": "138:156:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 717,
										"name": "IScaledBalanceToken",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1363,
										"src": "146:19:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 719,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 712,
										"src": "317:6:3"
									},
									"id": 720,
									"nodeType": "InheritanceSpecifier",
									"src": "317:6:3"
								},
								{
									"baseName": {
										"id": 721,
										"name": "IScaledBalanceToken",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1363,
										"src": "325:19:3"
									},
									"id": 722,
									"nodeType": "InheritanceSpecifier",
									"src": "325:19:3"
								}
							],
							"canonicalName": "IAToken",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 806,
							"linearizedBaseContracts": [
								806,
								1363,
								712
							],
							"name": "IAToken",
							"nameLocation": "306:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 723,
										"nodeType": "StructuredDocumentation",
										"src": "349:191:3",
										"text": " @dev Emitted after the mint action\n @param from The address performing the mint\n @param value The amount being\n @param index The new liquidity index of the reserve*"
									},
									"eventSelector": "4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f",
									"id": 731,
									"name": "Mint",
									"nameLocation": "549:4:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 725,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "570:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "554:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 724,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "554:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 727,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "584:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "576:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 726,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "576:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 729,
												"indexed": false,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "599:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "591:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 728,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "591:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "553:52:3"
									},
									"src": "543:63:3"
								},
								{
									"documentation": {
										"id": 732,
										"nodeType": "StructuredDocumentation",
										"src": "610:287:3",
										"text": " @dev Mints `amount` aTokens to `user`\n @param user The address receiving the minted tokens\n @param amount The amount of tokens getting minted\n @param index The new liquidity index of the reserve\n @return `true` if the the previous balance of the user was 0"
									},
									"functionSelector": "156e29f6",
									"id": 743,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "909:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 734,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "927:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 743,
												"src": "919:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 733,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "919:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 736,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "945:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 743,
												"src": "937:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 735,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "937:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "965:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 743,
												"src": "957:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 737,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "957:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:61:3"
									},
									"returnParameters": {
										"id": 742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 743,
												"src": "993:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 740,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "993:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "992:6:3"
									},
									"scope": 806,
									"src": "900:99:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 744,
										"nodeType": "StructuredDocumentation",
										"src": "1003:279:3",
										"text": " @dev Emitted after aTokens are burned\n @param from The owner of the aTokens, getting them burned\n @param target The address that will receive the underlying\n @param value The amount being burned\n @param index The new liquidity index of the reserve*"
									},
									"eventSelector": "5d624aa9c148153ab3446c1b154f660ee7701e549fe9b62dab7171b1c80e6fa2",
									"id": 754,
									"name": "Burn",
									"nameLocation": "1291:4:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1312:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "1296:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 745,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1296:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 748,
												"indexed": true,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "1334:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "1318:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 747,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1318:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 750,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1350:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "1342:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 749,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1342:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 752,
												"indexed": false,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "1365:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "1357:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 751,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1357:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1295:76:3"
									},
									"src": "1285:87:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 755,
										"nodeType": "StructuredDocumentation",
										"src": "1376:249:3",
										"text": " @dev Emitted during the transfer action\n @param from The user whose tokens are being transferred\n @param to The recipient\n @param value The amount being transferred\n @param index The new liquidity index of the reserve*"
									},
									"eventSelector": "4beccb90f994c31aced7a23b5611020728a23d8ec5cddd1a3e9d97b96fda8666",
									"id": 765,
									"name": "BalanceTransfer",
									"nameLocation": "1634:15:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 757,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1666:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "1650:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 756,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1650:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 759,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1688:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "1672:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 758,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1672:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 761,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1700:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "1692:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 760,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1692:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 763,
												"indexed": false,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "1715:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "1707:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 762,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1707:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1649:72:3"
									},
									"src": "1628:94:3"
								},
								{
									"documentation": {
										"id": 766,
										"nodeType": "StructuredDocumentation",
										"src": "1726:359:3",
										"text": " @dev Burns aTokens from `user` and sends the equivalent amount of underlying to `receiverOfUnderlying`\n @param user The owner of the aTokens, getting them burned\n @param receiverOfUnderlying The address that will receive the underlying\n @param amount The amount being burned\n @param index The new liquidity index of the reserve*"
									},
									"functionSelector": "d7020d0a",
									"id": 777,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "2097:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 768,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2115:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 777,
												"src": "2107:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 767,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2107:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "receiverOfUnderlying",
												"nameLocation": "2133:20:3",
												"nodeType": "VariableDeclaration",
												"scope": 777,
												"src": "2125:28:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 769,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2125:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2167:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 777,
												"src": "2159:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 771,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2159:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 774,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "2187:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 777,
												"src": "2179:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 773,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2179:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2101:95:3"
									},
									"returnParameters": {
										"id": 776,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2205:0:3"
									},
									"scope": 806,
									"src": "2088:118:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 778,
										"nodeType": "StructuredDocumentation",
										"src": "2210:169:3",
										"text": " @dev Mints aTokens to the reserve treasury\n @param amount The amount of tokens getting minted\n @param index The new liquidity index of the reserve"
									},
									"functionSelector": "7df5bd3b",
									"id": 785,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mintToTreasury",
									"nameLocation": "2391:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 780,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2414:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "2406:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 779,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 782,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "2430:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "2422:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 781,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2422:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2405:31:3"
									},
									"returnParameters": {
										"id": 784,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2445:0:3"
									},
									"scope": 806,
									"src": "2382:64:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 786,
										"nodeType": "StructuredDocumentation",
										"src": "2450:291:3",
										"text": " @dev Transfers aTokens in the event of a borrow being liquidated, in case the liquidators reclaims the aToken\n @param from The address getting liquidated, current owner of the aTokens\n @param to The recipient\n @param value The amount of tokens getting transferred*"
									},
									"functionSelector": "f866c319",
									"id": 795,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferOnLiquidation",
									"nameLocation": "2753:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2788:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "2780:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 787,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2780:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 790,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2806:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "2798:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 789,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2798:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2822:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "2814:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 791,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2814:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2774:57:3"
									},
									"returnParameters": {
										"id": 794,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2840:0:3"
									},
									"scope": 806,
									"src": "2744:97:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 796,
										"nodeType": "StructuredDocumentation",
										"src": "2845:284:3",
										"text": " @dev Transfers the underlying asset to `target`. Used by the LendingPool to transfer\n assets in borrow(), withdraw() and flashLoan()\n @param user The recipient of the aTokens\n @param amount The amount getting transferred\n @return The amount transferred*"
									},
									"functionSelector": "4efecaa5",
									"id": 805,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferUnderlyingTo",
									"nameLocation": "3141:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 801,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 798,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "3170:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 805,
												"src": "3162:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 797,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3162:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 800,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3184:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 805,
												"src": "3176:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 799,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3161:30:3"
									},
									"returnParameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 805,
												"src": "3210:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 802,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:3"
									},
									"scope": 806,
									"src": "3132:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 807,
							"src": "296:2925:3",
							"usedErrors": []
						}
					],
					"src": "37:3185:3"
				},
				"id": 3
			},
			"https://github.com/aave/protocol-v2/blob/ice/mainnet-deployment-03-12-2020/contracts/interfaces/ILendingPool.sol": {
				"ast": {
					"absolutePath": "https://github.com/aave/protocol-v2/blob/ice/mainnet-deployment-03-12-2020/contracts/interfaces/ILendingPool.sol",
					"exportedSymbols": {
						"DataTypes": [
							1402
						],
						"ILendingPool": [
							1185
						],
						"ILendingPoolAddressesProvider": [
							1336
						]
					},
					"id": 1186,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 808,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "37:25:4"
						},
						{
							"id": 809,
							"literals": [
								"experimental",
								"ABIEncoderV2"
							],
							"nodeType": "PragmaDirective",
							"src": "63:33:4"
						},
						{
							"absolutePath": "https://github.com/aave/protocol-v2/blob/ice/mainnet-deployment-03-12-2020/contracts/interfaces/ILendingPoolAddressesProvider.sol",
							"file": "./ILendingPoolAddressesProvider.sol",
							"id": 811,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1186,
							"sourceUnit": 1337,
							"src": "98:82:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 810,
										"name": "ILendingPoolAddressesProvider",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1336,
										"src": "106:29:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/aave/protocol-v2/blob/ice/mainnet-deployment-03-12-2020/contracts/protocol/libraries/types/DataTypes.sol",
							"file": "../protocol/libraries/types/DataTypes.sol",
							"id": 813,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1186,
							"sourceUnit": 1403,
							"src": "181:68:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 812,
										"name": "DataTypes",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1402,
										"src": "189:9:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ILendingPool",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1185,
							"linearizedBaseContracts": [
								1185
							],
							"name": "ILendingPool",
							"nameLocation": "261:12:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 814,
										"nodeType": "StructuredDocumentation",
										"src": "278:325:4",
										"text": " @dev Emitted on deposit()\n @param reserve The address of the underlying asset of the reserve\n @param user The address initiating the deposit\n @param onBehalfOf The beneficiary of the deposit, receiving the aTokens\n @param amount The amount deposited\n @param referral The referral code used*"
									},
									"eventSelector": "de6857219544bb5b7746f48ed30be6386fefc61b2f864cacf559893bf50fd951",
									"id": 826,
									"name": "Deposit",
									"nameLocation": "612:7:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "641:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "625:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "625:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": false,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "662:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "654:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 817,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 820,
												"indexed": true,
												"mutability": "mutable",
												"name": "onBehalfOf",
												"nameLocation": "688:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "672:26:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 819,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "672:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 822,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "712:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "704:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 821,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "704:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 824,
												"indexed": true,
												"mutability": "mutable",
												"name": "referral",
												"nameLocation": "739:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "724:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 823,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "724:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "619:132:4"
									},
									"src": "606:146:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "756:288:4",
										"text": " @dev Emitted on withdraw()\n @param reserve The address of the underlyng asset being withdrawn\n @param user The address initiating the withdrawal, owner of aTokens\n @param to Address that will receive the underlying\n @param amount The amount to be withdrawn*"
									},
									"eventSelector": "3115d1449a7b732c986cba18244e897a450f61e1bb8d589cd2e69e6c8924f9f7",
									"id": 837,
									"name": "Withdraw",
									"nameLocation": "1053:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "1078:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "1062:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1062:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 831,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1103:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "1087:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 830,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1087:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 833,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1125:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "1109:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 832,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1109:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 835,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1137:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "1129:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 834,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1129:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1061:83:4"
									},
									"src": "1047:98:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 838,
										"nodeType": "StructuredDocumentation",
										"src": "1149:605:4",
										"text": " @dev Emitted on borrow() and flashLoan() when debt needs to be opened\n @param reserve The address of the underlying asset being borrowed\n @param user The address of the user initiating the borrow(), receiving the funds on borrow() or just\n initiator of the transaction on flashLoan()\n @param onBehalfOf The address that will be getting the debt\n @param amount The amount borrowed out\n @param borrowRateMode The rate mode: 1 for Stable, 2 for Variable\n @param borrowRate The numeric rate at which the user has borrowed\n @param referral The referral code used*"
									},
									"eventSelector": "c6a898309e823ee50bac64e45ca8adba6690e99e7841c45d754e2a38e9019d9b",
									"id": 854,
									"name": "Borrow",
									"nameLocation": "1763:6:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 840,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "1791:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1775:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 839,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 842,
												"indexed": false,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1812:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1804:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 841,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1804:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 844,
												"indexed": true,
												"mutability": "mutable",
												"name": "onBehalfOf",
												"nameLocation": "1838:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1822:26:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 843,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1822:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 846,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1862:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1854:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 845,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1854:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 848,
												"indexed": false,
												"mutability": "mutable",
												"name": "borrowRateMode",
												"nameLocation": "1882:14:4",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1874:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 847,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1874:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 850,
												"indexed": false,
												"mutability": "mutable",
												"name": "borrowRate",
												"nameLocation": "1910:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1902:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 849,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1902:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 852,
												"indexed": true,
												"mutability": "mutable",
												"name": "referral",
												"nameLocation": "1941:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1926:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 851,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1926:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1769:184:4"
									},
									"src": "1757:197:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1958:311:4",
										"text": " @dev Emitted on repay()\n @param reserve The address of the underlying asset of the reserve\n @param user The beneficiary of the repayment, getting his debt reduced\n @param repayer The address of the user initiating the repay(), providing the funds\n @param amount The amount repaid*"
									},
									"eventSelector": "4cdde6e09bb755c9a5589ebaec640bbfedff1362d4b255ebf8339782b9942faa",
									"id": 865,
									"name": "Repay",
									"nameLocation": "2278:5:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 864,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "2305:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "2289:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2289:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2334:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "2318:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 858,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2318:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 861,
												"indexed": true,
												"mutability": "mutable",
												"name": "repayer",
												"nameLocation": "2360:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "2344:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 860,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2344:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 863,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2381:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "2373:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 862,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2373:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2283:108:4"
									},
									"src": "2272:120:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 866,
										"nodeType": "StructuredDocumentation",
										"src": "2396:253:4",
										"text": " @dev Emitted on swapBorrowRateMode()\n @param reserve The address of the underlying asset of the reserve\n @param user The address of the user swapping his rate mode\n @param rateMode The rate mode that the user wants to swap to*"
									},
									"eventSelector": "ea368a40e9570069bb8e6511d668293ad2e1f03b0d982431fd223de9f3b70ca6",
									"id": 874,
									"name": "Swap",
									"nameLocation": "2658:4:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 868,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "2679:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 874,
												"src": "2663:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 867,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2663:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 870,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2704:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 874,
												"src": "2688:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 869,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2688:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 872,
												"indexed": false,
												"mutability": "mutable",
												"name": "rateMode",
												"nameLocation": "2718:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 874,
												"src": "2710:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 871,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2662:65:4"
									},
									"src": "2652:76:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 875,
										"nodeType": "StructuredDocumentation",
										"src": "2732:208:4",
										"text": " @dev Emitted on setUserUseReserveAsCollateral()\n @param reserve The address of the underlying asset of the reserve\n @param user The address of the user enabling the usage as collateral*"
									},
									"eventSelector": "00058a56ea94653cdf4f152d227ace22d4c00ad99e2a43f58cb7d9e3feb295f2",
									"id": 881,
									"name": "ReserveUsedAsCollateralEnabled",
									"nameLocation": "2949:30:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 877,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "2996:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "2980:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 876,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2980:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 879,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "3021:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "3005:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 878,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3005:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2979:47:4"
									},
									"src": "2943:84:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 882,
										"nodeType": "StructuredDocumentation",
										"src": "3031:208:4",
										"text": " @dev Emitted on setUserUseReserveAsCollateral()\n @param reserve The address of the underlying asset of the reserve\n @param user The address of the user enabling the usage as collateral*"
									},
									"eventSelector": "44c58d81365b66dd4b1a7f36c25aa97b8c71c361ee4937adc1a00000227db5dd",
									"id": 888,
									"name": "ReserveUsedAsCollateralDisabled",
									"nameLocation": "3248:31:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 887,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 884,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "3296:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "3280:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 883,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3280:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 886,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "3321:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "3305:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 885,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3305:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3279:47:4"
									},
									"src": "3242:85:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 889,
										"nodeType": "StructuredDocumentation",
										"src": "3331:213:4",
										"text": " @dev Emitted on rebalanceStableBorrowRate()\n @param reserve The address of the underlying asset of the reserve\n @param user The address of the user for which the rebalance has been executed*"
									},
									"eventSelector": "9f439ae0c81e41a04d3fdfe07aed54e6a179fb0db15be7702eb66fa8ef6f5300",
									"id": 895,
									"name": "RebalanceStableBorrowRate",
									"nameLocation": "3553:25:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 891,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "3595:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 895,
												"src": "3579:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 890,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3579:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 893,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "3620:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 895,
												"src": "3604:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 892,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3604:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3578:47:4"
									},
									"src": "3547:79:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 896,
										"nodeType": "StructuredDocumentation",
										"src": "3630:370:4",
										"text": " @dev Emitted on flashLoan()\n @param target The address of the flash loan receiver contract\n @param initiator The address initiating the flash loan\n @param asset The address of the asset being flash borrowed\n @param amount The amount flash borrowed\n @param premium The fee flash borrowed\n @param referralCode The referral code used*"
									},
									"eventSelector": "631042c832b07452973831137f2d73e395028b44b250dedc5abb0ee766e168ac",
									"id": 910,
									"name": "FlashLoan",
									"nameLocation": "4009:9:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 909,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 898,
												"indexed": true,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4040:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "4024:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 897,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4024:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 900,
												"indexed": true,
												"mutability": "mutable",
												"name": "initiator",
												"nameLocation": "4068:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "4052:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 899,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4052:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 902,
												"indexed": true,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "4099:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "4083:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 901,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4083:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 904,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4118:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "4110:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 903,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4110:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 906,
												"indexed": false,
												"mutability": "mutable",
												"name": "premium",
												"nameLocation": "4138:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "4130:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 905,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4130:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 908,
												"indexed": false,
												"mutability": "mutable",
												"name": "referralCode",
												"nameLocation": "4158:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "4151:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 907,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4151:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4018:156:4"
									},
									"src": "4003:172:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 911,
										"nodeType": "StructuredDocumentation",
										"src": "4179:56:4",
										"text": " @dev Emitted when the pause is triggered."
									},
									"eventSelector": "9e87fac88ff661f02d44f95383c817fece4bce600a3dab7a54406878b965e752",
									"id": 913,
									"name": "Paused",
									"nameLocation": "4244:6:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4250:2:4"
									},
									"src": "4238:15:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 914,
										"nodeType": "StructuredDocumentation",
										"src": "4257:53:4",
										"text": " @dev Emitted when the pause is lifted."
									},
									"eventSelector": "a45f47fdea8a1efdd9029a5691c7f759c32b7c698632b563573e155625d16933",
									"id": 916,
									"name": "Unpaused",
									"nameLocation": "4319:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 915,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4327:2:4"
									},
									"src": "4313:17:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 917,
										"nodeType": "StructuredDocumentation",
										"src": "4334:928:4",
										"text": " @dev Emitted when a borrower is liquidated. This event is emitted by the LendingPool via\n LendingPoolCollateral manager using a DELEGATECALL\n This allows to have the events in the generated ABI for LendingPool.\n @param collateralAsset The address of the underlying asset used as collateral, to receive as result of the liquidation\n @param debtAsset The address of the underlying borrowed asset to be repaid with the liquidation\n @param user The address of the borrower getting liquidated\n @param debtToCover The debt amount of borrowed `asset` the liquidator wants to cover\n @param liquidatedCollateralAmount The amount of collateral received by the liiquidator\n @param liquidator The address of the liquidator\n @param receiveAToken `true` if the liquidators wants to receive the collateral aTokens, `false` if he wants\n to receive the underlying collateral asset directly*"
									},
									"eventSelector": "e413a321e8681d831f4dbccbca790d2952b56f977908e45be37335533e005286",
									"id": 933,
									"name": "LiquidationCall",
									"nameLocation": "5271:15:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 919,
												"indexed": true,
												"mutability": "mutable",
												"name": "collateralAsset",
												"nameLocation": "5308:15:4",
												"nodeType": "VariableDeclaration",
												"scope": 933,
												"src": "5292:31:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 918,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5292:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 921,
												"indexed": true,
												"mutability": "mutable",
												"name": "debtAsset",
												"nameLocation": "5345:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 933,
												"src": "5329:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 920,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5329:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 923,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "5376:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 933,
												"src": "5360:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 922,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5360:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 925,
												"indexed": false,
												"mutability": "mutable",
												"name": "debtToCover",
												"nameLocation": "5394:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 933,
												"src": "5386:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 924,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5386:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 927,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidatedCollateralAmount",
												"nameLocation": "5419:26:4",
												"nodeType": "VariableDeclaration",
												"scope": 933,
												"src": "5411:34:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5411:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 929,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidator",
												"nameLocation": "5459:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 933,
												"src": "5451:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 928,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5451:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 931,
												"indexed": false,
												"mutability": "mutable",
												"name": "receiveAToken",
												"nameLocation": "5480:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 933,
												"src": "5475:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 930,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5475:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5286:211:4"
									},
									"src": "5265:233:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 934,
										"nodeType": "StructuredDocumentation",
										"src": "5502:722:4",
										"text": " @dev Emitted when the state of a reserve is updated. NOTE: This event is actually declared\n in the ReserveLogic library and emitted in the updateInterestRates() function. Since the function is internal,\n the event will actually be fired by the LendingPool contract. The event is therefore replicated here so it\n gets added to the LendingPool ABI\n @param reserve The address of the underlying asset of the reserve\n @param liquidityRate The new liquidity rate\n @param stableBorrowRate The new stable borrow rate\n @param variableBorrowRate The new variable borrow rate\n @param liquidityIndex The new liquidity index\n @param variableBorrowIndex The new variable borrow index*"
									},
									"eventSelector": "804c9b842b2748a22bb64b345453a3de7ca54a6ca45ce00d415894979e22897a",
									"id": 948,
									"name": "ReserveDataUpdated",
									"nameLocation": "6233:18:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 936,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "6273:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "6257:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 935,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6257:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 938,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidityRate",
												"nameLocation": "6294:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "6286:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 937,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6286:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 940,
												"indexed": false,
												"mutability": "mutable",
												"name": "stableBorrowRate",
												"nameLocation": "6321:16:4",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "6313:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 939,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6313:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 942,
												"indexed": false,
												"mutability": "mutable",
												"name": "variableBorrowRate",
												"nameLocation": "6351:18:4",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "6343:26:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 941,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6343:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 944,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidityIndex",
												"nameLocation": "6383:14:4",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "6375:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 943,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6375:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 946,
												"indexed": false,
												"mutability": "mutable",
												"name": "variableBorrowIndex",
												"nameLocation": "6411:19:4",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "6403:27:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 945,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6403:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6251:183:4"
									},
									"src": "6227:208:4"
								},
								{
									"documentation": {
										"id": 949,
										"nodeType": "StructuredDocumentation",
										"src": "6439:712:4",
										"text": " @dev Deposits an `amount` of underlying asset into the reserve, receiving in return overlying aTokens.\n - E.g. User deposits 100 USDC and gets in return 100 aUSDC\n @param asset The address of the underlying asset to deposit\n @param amount The amount to be deposited\n @param onBehalfOf The address that will receive the aTokens, same as msg.sender if the user\n   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens\n   is a different wallet\n @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   0 if the action is executed directly by the user, without any middle-man*"
									},
									"functionSelector": "e8eda9df",
									"id": 960,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "7163:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "7184:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "7176:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 950,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7176:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7203:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "7195:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 952,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7195:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "onBehalfOf",
												"nameLocation": "7223:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "7215:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 954,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7215:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "referralCode",
												"nameLocation": "7246:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "7239:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 956,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "7239:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7170:92:4"
									},
									"returnParameters": {
										"id": 959,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7271:0:4"
									},
									"scope": 1185,
									"src": "7154:118:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 961,
										"nodeType": "StructuredDocumentation",
										"src": "7276:665:4",
										"text": " @dev Withdraws an `amount` of underlying asset from the reserve, burning the equivalent aTokens owned\n E.g. User has 100 aUSDC, calls withdraw() and receives 100 USDC, burning the 100 aUSDC\n @param asset The address of the underlying asset to withdraw\n @param amount The underlying amount to be withdrawn\n   - Send the value type(uint256).max in order to withdraw the whole aToken balance\n @param to Address that will receive the underlying, same as msg.sender if the user\n   wants to receive it on his own wallet, or a different address if the beneficiary is a\n   different wallet\n @return The final amount withdrawn*"
									},
									"functionSelector": "69328dec",
									"id": 972,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "7953:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "7975:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "7967:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 962,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7967:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7994:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "7986:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 964,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7986:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8014:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "8006:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 966,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8006:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7961:59:4"
									},
									"returnParameters": {
										"id": 971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 970,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "8039:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 969,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8039:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8038:9:4"
									},
									"scope": 1185,
									"src": "7944:104:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 973,
										"nodeType": "StructuredDocumentation",
										"src": "8052:1189:4",
										"text": " @dev Allows users to borrow a specific `amount` of the reserve underlying asset, provided that the borrower\n already deposited enough collateral, or he was given enough allowance by a credit delegator on the\n corresponding debt token (StableDebtToken or VariableDebtToken)\n - E.g. User borrows 100 USDC passing as `onBehalfOf` his own address, receiving the 100 USDC in his wallet\n   and 100 stable/variable debt tokens, depending on the `interestRateMode`\n @param asset The address of the underlying asset to borrow\n @param amount The amount to be borrowed\n @param interestRateMode The interest rate mode at which the user wants to borrow: 1 for Stable, 2 for Variable\n @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   0 if the action is executed directly by the user, without any middle-man\n @param onBehalfOf Address of the user who will receive the debt. Should be the address of the borrower itself\n calling the function if he wants to borrow against his own collateral, or the address of the credit delegator\n if he has been given credit delegation allowance*"
									},
									"functionSelector": "a415bcad",
									"id": 986,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "borrow",
									"nameLocation": "9253:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 984,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 975,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "9273:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "9265:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 974,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9265:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 977,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9292:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "9284:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 976,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9284:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 979,
												"mutability": "mutable",
												"name": "interestRateMode",
												"nameLocation": "9312:16:4",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "9304:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 978,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9304:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 981,
												"mutability": "mutable",
												"name": "referralCode",
												"nameLocation": "9341:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "9334:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 980,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "9334:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 983,
												"mutability": "mutable",
												"name": "onBehalfOf",
												"nameLocation": "9367:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "9359:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 982,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9359:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9259:122:4"
									},
									"returnParameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9390:0:4"
									},
									"scope": 1185,
									"src": "9244:147:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 987,
										"nodeType": "StructuredDocumentation",
										"src": "9395:862:4",
										"text": " @notice Repays a borrowed `amount` on a specific reserve, burning the equivalent debt tokens owned\n - E.g. User repays 100 USDC, burning 100 variable/stable debt tokens of the `onBehalfOf` address\n @param asset The address of the borrowed underlying asset previously borrowed\n @param amount The amount to repay\n - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\n @param rateMode The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\n @param onBehalfOf Address of the user who will get his debt reduced/removed. Should be the address of the\n user calling the function if he wants to reduce/remove his own debt, or the address of any other\n other borrower whose debt should be removed\n @return The final amount repaid*"
									},
									"functionSelector": "573ade81",
									"id": 1000,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "repay",
									"nameLocation": "10269:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 996,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 989,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "10288:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1000,
												"src": "10280:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 988,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10280:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 991,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10307:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1000,
												"src": "10299:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 990,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10299:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 993,
												"mutability": "mutable",
												"name": "rateMode",
												"nameLocation": "10327:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1000,
												"src": "10319:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 992,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10319:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 995,
												"mutability": "mutable",
												"name": "onBehalfOf",
												"nameLocation": "10349:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 1000,
												"src": "10341:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 994,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10341:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10274:89:4"
									},
									"returnParameters": {
										"id": 999,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 998,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1000,
												"src": "10382:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 997,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10382:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10381:9:4"
									},
									"scope": 1185,
									"src": "10260:131:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1001,
										"nodeType": "StructuredDocumentation",
										"src": "10395:231:4",
										"text": " @dev Allows a borrower to swap his debt between stable and variable mode, or viceversa\n @param asset The address of the underlying asset borrowed\n @param rateMode The rate mode that the user wants to swap to*"
									},
									"functionSelector": "94ba89a2",
									"id": 1008,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapBorrowRateMode",
									"nameLocation": "10638:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1003,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "10665:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1008,
												"src": "10657:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1002,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10657:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "rateMode",
												"nameLocation": "10680:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1008,
												"src": "10672:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1004,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10672:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10656:33:4"
									},
									"returnParameters": {
										"id": 1007,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10698:0:4"
									},
									"scope": 1185,
									"src": "10629:70:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1009,
										"nodeType": "StructuredDocumentation",
										"src": "10703:553:4",
										"text": " @dev Rebalances the stable interest rate of a user to the current stable rate defined on the reserve.\n - Users can be rebalanced if the following conditions are satisfied:\n     1. Usage ratio is above 95%\n     2. the current deposit APY is below REBALANCE_UP_THRESHOLD * maxVariableBorrowRate, which means that too much has been\n        borrowed at a stable rate and depositors are not earning enough\n @param asset The address of the underlying asset borrowed\n @param user The address of the user to be rebalanced*"
									},
									"functionSelector": "cd112382",
									"id": 1016,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "rebalanceStableBorrowRate",
									"nameLocation": "11268:25:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1011,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "11302:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "11294:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1010,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11294:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1013,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "11317:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "11309:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1012,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11309:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11293:29:4"
									},
									"returnParameters": {
										"id": 1015,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11331:0:4"
									},
									"scope": 1185,
									"src": "11259:73:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1017,
										"nodeType": "StructuredDocumentation",
										"src": "11336:266:4",
										"text": " @dev Allows depositors to enable/disable a specific deposited asset as collateral\n @param asset The address of the underlying asset deposited\n @param useAsCollateral `true` if the user wants to use the deposit as collateral, `false` otherwise*"
									},
									"functionSelector": "5a3b74b9",
									"id": 1024,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setUserUseReserveAsCollateral",
									"nameLocation": "11614:29:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "11652:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1024,
												"src": "11644:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1018,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11644:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "useAsCollateral",
												"nameLocation": "11664:15:4",
												"nodeType": "VariableDeclaration",
												"scope": 1024,
												"src": "11659:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1020,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11659:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11643:37:4"
									},
									"returnParameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11689:0:4"
									},
									"scope": 1185,
									"src": "11605:85:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1025,
										"nodeType": "StructuredDocumentation",
										"src": "11694:860:4",
										"text": " @dev Function to liquidate a non-healthy position collateral-wise, with Health Factor below 1\n - The caller (liquidator) covers `debtToCover` amount of debt of the user getting liquidated, and receives\n   a proportionally amount of the `collateralAsset` plus a bonus to cover market risk\n @param collateralAsset The address of the underlying asset used as collateral, to receive as result of the liquidation\n @param debtAsset The address of the underlying borrowed asset to be repaid with the liquidation\n @param user The address of the borrower getting liquidated\n @param debtToCover The debt amount of borrowed `asset` the liquidator wants to cover\n @param receiveAToken `true` if the liquidators wants to receive the collateral aTokens, `false` if he wants\n to receive the underlying collateral asset directly*"
									},
									"functionSelector": "00a718a9",
									"id": 1038,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "liquidationCall",
									"nameLocation": "12566:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1027,
												"mutability": "mutable",
												"name": "collateralAsset",
												"nameLocation": "12595:15:4",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "12587:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1026,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12587:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "debtAsset",
												"nameLocation": "12624:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "12616:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1028,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12616:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1031,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "12647:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "12639:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1030,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12639:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1033,
												"mutability": "mutable",
												"name": "debtToCover",
												"nameLocation": "12665:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "12657:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1032,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12657:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "receiveAToken",
												"nameLocation": "12687:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "12682:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1034,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12682:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12581:123:4"
									},
									"returnParameters": {
										"id": 1037,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12713:0:4"
									},
									"scope": 1185,
									"src": "12557:157:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1039,
										"nodeType": "StructuredDocumentation",
										"src": "12718:1376:4",
										"text": " @dev Allows smartcontracts to access the liquidity of the pool within one transaction,\n as long as the amount taken plus a fee is returned.\n IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept into consideration.\n For further details please visit https://developers.aave.com\n @param receiverAddress The address of the contract receiving the funds, implementing the IFlashLoanReceiver interface\n @param assets The addresses of the assets being flash-borrowed\n @param amounts The amounts amounts being flash-borrowed\n @param modes Types of the debt to open if the flash loan is not returned:\n   0 -> Don't open any debt, just revert if funds can't be transferred from the receiver\n   1 -> Open debt at stable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\n   2 -> Open debt at variable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\n @param onBehalfOf The address  that will receive the debt in the case of using on `modes` 1 or 2\n @param params Variadic packed params to pass to the receiver as extra information\n @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   0 if the action is executed directly by the user, without any middle-man*"
									},
									"functionSelector": "ab9c4b5d",
									"id": 1059,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "flashLoan",
									"nameLocation": "14106:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "receiverAddress",
												"nameLocation": "14129:15:4",
												"nodeType": "VariableDeclaration",
												"scope": 1059,
												"src": "14121:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1040,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14121:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1044,
												"mutability": "mutable",
												"name": "assets",
												"nameLocation": "14169:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1059,
												"src": "14150:25:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1042,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "14150:7:4",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1043,
													"nodeType": "ArrayTypeName",
													"src": "14150:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1047,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "14200:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1059,
												"src": "14181:26:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1045,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "14181:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1046,
													"nodeType": "ArrayTypeName",
													"src": "14181:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1050,
												"mutability": "mutable",
												"name": "modes",
												"nameLocation": "14232:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1059,
												"src": "14213:24:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1048,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "14213:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1049,
													"nodeType": "ArrayTypeName",
													"src": "14213:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1052,
												"mutability": "mutable",
												"name": "onBehalfOf",
												"nameLocation": "14251:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 1059,
												"src": "14243:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1051,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14243:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "14282:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1059,
												"src": "14267:21:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1053,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14267:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "referralCode",
												"nameLocation": "14301:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1059,
												"src": "14294:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1055,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "14294:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14115:202:4"
									},
									"returnParameters": {
										"id": 1058,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14326:0:4"
									},
									"scope": 1185,
									"src": "14097:230:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1060,
										"nodeType": "StructuredDocumentation",
										"src": "14331:507:4",
										"text": " @dev Returns the user account data across all the reserves\n @param user The address of the user\n @return totalCollateralETH the total collateral in ETH of the user\n @return totalDebtETH the total debt in ETH of the user\n @return availableBorrowsETH the borrowing power left of the user\n @return currentLiquidationThreshold the liquidation threshold of the user\n @return ltv the loan to value of the user\n @return healthFactor the current health factor of the user*"
									},
									"functionSelector": "bf92857c",
									"id": 1077,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getUserAccountData",
									"nameLocation": "14850:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1063,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1062,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "14877:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "14869:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1061,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14869:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14868:14:4"
									},
									"returnParameters": {
										"id": 1076,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1065,
												"mutability": "mutable",
												"name": "totalCollateralETH",
												"nameLocation": "14933:18:4",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "14925:26:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1064,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14925:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "totalDebtETH",
												"nameLocation": "14967:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "14959:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1066,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14959:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "availableBorrowsETH",
												"nameLocation": "14995:19:4",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "14987:27:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1068,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14987:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "currentLiquidationThreshold",
												"nameLocation": "15030:27:4",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "15022:35:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1070,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15022:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "ltv",
												"nameLocation": "15073:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "15065:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1072,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15065:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1075,
												"mutability": "mutable",
												"name": "healthFactor",
												"nameLocation": "15092:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "15084:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1074,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15084:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14917:193:4"
									},
									"scope": 1185,
									"src": "14841:270:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7a708e92",
									"id": 1090,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initReserve",
									"nameLocation": "15124:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1088,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1079,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "15149:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "15141:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1078,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15141:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "aTokenAddress",
												"nameLocation": "15170:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "15162:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1080,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15162:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "stableDebtAddress",
												"nameLocation": "15197:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "15189:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1082,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15189:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "variableDebtAddress",
												"nameLocation": "15228:19:4",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "15220:27:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1084,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15220:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "interestRateStrategyAddress",
												"nameLocation": "15261:27:4",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "15253:35:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1086,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15253:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15135:157:4"
									},
									"returnParameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15301:0:4"
									},
									"scope": 1185,
									"src": "15115:187:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1d2118f9",
									"id": 1097,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setReserveInterestRateStrategyAddress",
									"nameLocation": "15315:37:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1095,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1092,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "15361:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1097,
												"src": "15353:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1091,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15353:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1094,
												"mutability": "mutable",
												"name": "rateStrategyAddress",
												"nameLocation": "15378:19:4",
												"nodeType": "VariableDeclaration",
												"scope": 1097,
												"src": "15370:27:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1093,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15370:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15352:46:4"
									},
									"returnParameters": {
										"id": 1096,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15411:0:4"
									},
									"scope": 1185,
									"src": "15306:106:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b8d29276",
									"id": 1104,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setConfiguration",
									"nameLocation": "15425:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1099,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "15450:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "15442:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1098,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15442:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1101,
												"mutability": "mutable",
												"name": "configuration",
												"nameLocation": "15467:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "15459:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1100,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15459:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15441:40:4"
									},
									"returnParameters": {
										"id": 1103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15490:0:4"
									},
									"scope": 1185,
									"src": "15416:75:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1105,
										"nodeType": "StructuredDocumentation",
										"src": "15495:176:4",
										"text": " @dev Returns the configuration of the reserve\n @param asset The address of the underlying asset of the reserve\n @return The configuration of the reserve*"
									},
									"functionSelector": "c44b11f7",
									"id": 1113,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getConfiguration",
									"nameLocation": "15683:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "15708:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "15700:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15700:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15699:15:4"
									},
									"returnParameters": {
										"id": 1112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "15750:40:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReserveConfigurationMap_$1394_memory_ptr",
													"typeString": "struct DataTypes.ReserveConfigurationMap"
												},
												"typeName": {
													"id": 1110,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1109,
														"name": "DataTypes.ReserveConfigurationMap",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1394,
														"src": "15750:33:4"
													},
													"referencedDeclaration": 1394,
													"src": "15750:33:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReserveConfigurationMap_$1394_storage_ptr",
														"typeString": "struct DataTypes.ReserveConfigurationMap"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15749:42:4"
									},
									"scope": 1185,
									"src": "15674:118:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1114,
										"nodeType": "StructuredDocumentation",
										"src": "15796:159:4",
										"text": " @dev Returns the configuration of the user across all the reserves\n @param user The user address\n @return The configuration of the user*"
									},
									"functionSelector": "4417a583",
									"id": 1122,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getUserConfiguration",
									"nameLocation": "15967:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1116,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "15996:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1122,
												"src": "15988:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15988:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15987:14:4"
									},
									"returnParameters": {
										"id": 1121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1122,
												"src": "16037:37:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserConfigurationMap_$1397_memory_ptr",
													"typeString": "struct DataTypes.UserConfigurationMap"
												},
												"typeName": {
													"id": 1119,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1118,
														"name": "DataTypes.UserConfigurationMap",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1397,
														"src": "16037:30:4"
													},
													"referencedDeclaration": 1397,
													"src": "16037:30:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserConfigurationMap_$1397_storage_ptr",
														"typeString": "struct DataTypes.UserConfigurationMap"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16036:39:4"
									},
									"scope": 1185,
									"src": "15958:118:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1123,
										"nodeType": "StructuredDocumentation",
										"src": "16080:196:4",
										"text": " @dev Returns the normalized income normalized income of the reserve\n @param asset The address of the underlying asset of the reserve\n @return The reserve's normalized income"
									},
									"functionSelector": "d15e0053",
									"id": 1130,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReserveNormalizedIncome",
									"nameLocation": "16288:26:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1125,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "16323:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "16315:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1124,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16315:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16314:15:4"
									},
									"returnParameters": {
										"id": 1129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1128,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "16353:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1127,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16353:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16352:9:4"
									},
									"scope": 1185,
									"src": "16279:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1131,
										"nodeType": "StructuredDocumentation",
										"src": "16366:193:4",
										"text": " @dev Returns the normalized variable debt per unit of asset\n @param asset The address of the underlying asset of the reserve\n @return The reserve normalized variable debt"
									},
									"functionSelector": "386497fd",
									"id": 1138,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReserveNormalizedVariableDebt",
									"nameLocation": "16571:32:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1133,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "16612:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "16604:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16604:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16603:15:4"
									},
									"returnParameters": {
										"id": 1137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1136,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "16642:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16642:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16641:9:4"
									},
									"scope": 1185,
									"src": "16562:89:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1139,
										"nodeType": "StructuredDocumentation",
										"src": "16655:178:4",
										"text": " @dev Returns the state and configuration of the reserve\n @param asset The address of the underlying asset of the reserve\n @return The state of the reserve*"
									},
									"functionSelector": "35ea6a75",
									"id": 1147,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReserveData",
									"nameLocation": "16845:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1141,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "16868:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "16860:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16860:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16859:15:4"
									},
									"returnParameters": {
										"id": 1146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1145,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "16898:28:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReserveData_$1391_memory_ptr",
													"typeString": "struct DataTypes.ReserveData"
												},
												"typeName": {
													"id": 1144,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1143,
														"name": "DataTypes.ReserveData",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1391,
														"src": "16898:21:4"
													},
													"referencedDeclaration": 1391,
													"src": "16898:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReserveData_$1391_storage_ptr",
														"typeString": "struct DataTypes.ReserveData"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16897:30:4"
									},
									"scope": 1185,
									"src": "16836:92:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d5ed3933",
									"id": 1162,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "finalizeTransfer",
									"nameLocation": "16941:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1149,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "16971:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "16963:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1148,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16963:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1151,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16990:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "16982:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1150,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16982:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1153,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "17008:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "17000:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17000:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1155,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "17024:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "17016:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17016:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1157,
												"mutability": "mutable",
												"name": "balanceFromAfter",
												"nameLocation": "17044:16:4",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "17036:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17036:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1159,
												"mutability": "mutable",
												"name": "balanceToBefore",
												"nameLocation": "17074:15:4",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "17066:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1158,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17066:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16957:136:4"
									},
									"returnParameters": {
										"id": 1161,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17102:0:4"
									},
									"scope": 1185,
									"src": "16932:171:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d1946dbc",
									"id": 1168,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReservesList",
									"nameLocation": "17116:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1163,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17131:2:4"
									},
									"returnParameters": {
										"id": 1167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1168,
												"src": "17157:16:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1164,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "17157:7:4",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1165,
													"nodeType": "ArrayTypeName",
													"src": "17157:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17156:18:4"
									},
									"scope": 1185,
									"src": "17107:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fe65acfe",
									"id": 1174,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressesProvider",
									"nameLocation": "17188:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17208:2:4"
									},
									"returnParameters": {
										"id": 1173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1172,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "17234:29:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ILendingPoolAddressesProvider_$1336",
													"typeString": "contract ILendingPoolAddressesProvider"
												},
												"typeName": {
													"id": 1171,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1170,
														"name": "ILendingPoolAddressesProvider",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1336,
														"src": "17234:29:4"
													},
													"referencedDeclaration": 1336,
													"src": "17234:29:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ILendingPoolAddressesProvider_$1336",
														"typeString": "contract ILendingPoolAddressesProvider"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17233:31:4"
									},
									"scope": 1185,
									"src": "17179:86:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "bedb86fb",
									"id": 1179,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setPause",
									"nameLocation": "17278:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1176,
												"mutability": "mutable",
												"name": "val",
												"nameLocation": "17292:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "17287:8:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1175,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17287:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17286:10:4"
									},
									"returnParameters": {
										"id": 1178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17305:0:4"
									},
									"scope": 1185,
									"src": "17269:37:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5c975abb",
									"id": 1184,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "17319:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1180,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17325:2:4"
									},
									"returnParameters": {
										"id": 1183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1184,
												"src": "17351:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1181,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17351:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17350:6:4"
									},
									"scope": 1185,
									"src": "17310:47:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1186,
							"src": "251:17108:4",
							"usedErrors": []
						}
					],
					"src": "37:17323:4"
				},
				"id": 4
			},
			"https://github.com/aave/protocol-v2/blob/ice/mainnet-deployment-03-12-2020/contracts/interfaces/ILendingPoolAddressesProvider.sol": {
				"ast": {
					"absolutePath": "https://github.com/aave/protocol-v2/blob/ice/mainnet-deployment-03-12-2020/contracts/interfaces/ILendingPoolAddressesProvider.sol",
					"exportedSymbols": {
						"ILendingPoolAddressesProvider": [
							1336
						]
					},
					"id": 1337,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1187,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "37:25:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ILendingPoolAddressesProvider",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1188,
								"nodeType": "StructuredDocumentation",
								"src": "64:311:5",
								"text": " @title LendingPoolAddressesProvider contract\n @dev Main registry of addresses part of or connected to the protocol, including permissioned roles\n - Acting also as factory of proxies and admin of those, so with right to change its implementations\n - Owned by the Aave Governance\n @author Aave*"
							},
							"fullyImplemented": false,
							"id": 1336,
							"linearizedBaseContracts": [
								1336
							],
							"name": "ILendingPoolAddressesProvider",
							"nameLocation": "386:29:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "5e667c32fd847cf8bce48ab3400175cbf107bdc82b2dea62e3364909dfaee799",
									"id": 1192,
									"name": "MarketIdSet",
									"nameLocation": "426:11:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1190,
												"indexed": false,
												"mutability": "mutable",
												"name": "newMarketId",
												"nameLocation": "445:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "438:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1189,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "438:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "437:20:5"
									},
									"src": "420:38:5"
								},
								{
									"anonymous": false,
									"eventSelector": "c4e6c6cdf28d0edbd8bcf071d724d33cc2e7a30be7d06443925656e9cb492aa4",
									"id": 1196,
									"name": "LendingPoolUpdated",
									"nameLocation": "467:18:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1194,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "502:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1196,
												"src": "486:26:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "486:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "485:28:5"
									},
									"src": "461:53:5"
								},
								{
									"anonymous": false,
									"eventSelector": "c20a317155a9e7d84e06b716b4b355d47742ab9f8c5d630e7f556553f582430d",
									"id": 1200,
									"name": "ConfigurationAdminUpdated",
									"nameLocation": "523:25:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1198,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "565:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "549:26:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "549:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "548:28:5"
									},
									"src": "517:60:5"
								},
								{
									"anonymous": false,
									"eventSelector": "e19673fc861bfeb894cf2d6b7662505497ef31c0f489b742db24ee3310826916",
									"id": 1204,
									"name": "EmergencyAdminUpdated",
									"nameLocation": "586:21:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1202,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "624:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "608:26:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "608:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "607:28:5"
									},
									"src": "580:56:5"
								},
								{
									"anonymous": false,
									"eventSelector": "dfabe479bad36782fb1e77fbfddd4e382671713527e4786cfc93a022ae763729",
									"id": 1208,
									"name": "LendingPoolConfiguratorUpdated",
									"nameLocation": "645:30:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1206,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "692:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1208,
												"src": "676:26:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "676:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "675:28:5"
									},
									"src": "639:65:5"
								},
								{
									"anonymous": false,
									"eventSelector": "991888326f0eab3df6084aadb82bee6781b5c9aa75379e8bc50ae86934541638",
									"id": 1212,
									"name": "LendingPoolCollateralManagerUpdated",
									"nameLocation": "713:35:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1210,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "765:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1212,
												"src": "749:26:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "749:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "748:28:5"
									},
									"src": "707:70:5"
								},
								{
									"anonymous": false,
									"eventSelector": "efe8ab924ca486283a79dc604baa67add51afb82af1db8ac386ebbba643cdffd",
									"id": 1216,
									"name": "PriceOracleUpdated",
									"nameLocation": "786:18:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1214,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "821:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1216,
												"src": "805:26:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "805:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "804:28:5"
									},
									"src": "780:53:5"
								},
								{
									"anonymous": false,
									"eventSelector": "5c29179aba6942020a8a2d38f65de02fb6b7f784e7f049ed3a3cab97621859b5",
									"id": 1220,
									"name": "LendingRateOracleUpdated",
									"nameLocation": "842:24:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1218,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "883:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1220,
												"src": "867:26:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "866:28:5"
									},
									"src": "836:59:5"
								},
								{
									"anonymous": false,
									"eventSelector": "1eb35cb4b5bbb23d152f3b4016a5a46c37a07ae930ed0956aba951e231142438",
									"id": 1226,
									"name": "ProxyCreated",
									"nameLocation": "904:12:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1222,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "925:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1226,
												"src": "917:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1221,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "917:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1224,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "945:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1226,
												"src": "929:26:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "929:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "916:40:5"
									},
									"src": "898:59:5"
								},
								{
									"anonymous": false,
									"eventSelector": "f2689d5d5cd0c639e137642cae5d40afced201a1a0327e7ac9358461dc9fff31",
									"id": 1234,
									"name": "AddressSet",
									"nameLocation": "966:10:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1228,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "985:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1234,
												"src": "977:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1227,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "977:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1230,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "1005:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1234,
												"src": "989:26:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "989:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1232,
												"indexed": false,
												"mutability": "mutable",
												"name": "hasProxy",
												"nameLocation": "1022:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1234,
												"src": "1017:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1231,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1017:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "976:55:5"
									},
									"src": "960:72:5"
								},
								{
									"functionSelector": "568ef470",
									"id": 1239,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getMarketId",
									"nameLocation": "1045:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1235,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1056:2:5"
									},
									"returnParameters": {
										"id": 1238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1237,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1239,
												"src": "1082:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1236,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1082:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1081:15:5"
									},
									"scope": 1336,
									"src": "1036:61:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f67b1847",
									"id": 1244,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setMarketId",
									"nameLocation": "1110:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1241,
												"mutability": "mutable",
												"name": "marketId",
												"nameLocation": "1138:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1244,
												"src": "1122:24:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1240,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1122:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1121:26:5"
									},
									"returnParameters": {
										"id": 1243,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1156:0:5"
									},
									"scope": 1336,
									"src": "1101:56:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ca446dd9",
									"id": 1251,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setAddress",
									"nameLocation": "1170:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1246,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1189:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1251,
												"src": "1181:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1245,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1181:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1248,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "1201:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1251,
												"src": "1193:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1193:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1180:32:5"
									},
									"returnParameters": {
										"id": 1250,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1221:0:5"
									},
									"scope": 1336,
									"src": "1161:61:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5dcc528c",
									"id": 1258,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setAddressAsProxy",
									"nameLocation": "1235:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1253,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1261:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1258,
												"src": "1253:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1252,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1253:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1255,
												"mutability": "mutable",
												"name": "impl",
												"nameLocation": "1273:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1258,
												"src": "1265:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1265:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1252:26:5"
									},
									"returnParameters": {
										"id": 1257,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1287:0:5"
									},
									"scope": 1336,
									"src": "1226:62:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "21f8a721",
									"id": 1265,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAddress",
									"nameLocation": "1301:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1260,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1320:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1265,
												"src": "1312:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1259,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1312:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1311:12:5"
									},
									"returnParameters": {
										"id": 1264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1263,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1265,
												"src": "1347:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1262,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1347:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1346:9:5"
									},
									"scope": 1336,
									"src": "1292:64:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0261bf8b",
									"id": 1270,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getLendingPool",
									"nameLocation": "1369:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1266,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1383:2:5"
									},
									"returnParameters": {
										"id": 1269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1268,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1270,
												"src": "1409:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1267,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1409:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1408:9:5"
									},
									"scope": 1336,
									"src": "1360:58:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5aef021f",
									"id": 1275,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setLendingPoolImpl",
									"nameLocation": "1431:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "1458:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "1450:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1271,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1450:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1449:14:5"
									},
									"returnParameters": {
										"id": 1274,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1472:0:5"
									},
									"scope": 1336,
									"src": "1422:51:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "85c858b1",
									"id": 1280,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getLendingPoolConfigurator",
									"nameLocation": "1486:26:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1276,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1512:2:5"
									},
									"returnParameters": {
										"id": 1279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1278,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1280,
												"src": "1538:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1277,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1538:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1537:9:5"
									},
									"scope": 1336,
									"src": "1477:70:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c12542df",
									"id": 1285,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setLendingPoolConfiguratorImpl",
									"nameLocation": "1560:30:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1282,
												"mutability": "mutable",
												"name": "configurator",
												"nameLocation": "1599:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1285,
												"src": "1591:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1281,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1591:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1590:22:5"
									},
									"returnParameters": {
										"id": 1284,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1621:0:5"
									},
									"scope": 1336,
									"src": "1551:71:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "712d9171",
									"id": 1290,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getLendingPoolCollateralManager",
									"nameLocation": "1635:31:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1286,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1666:2:5"
									},
									"returnParameters": {
										"id": 1289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1288,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1290,
												"src": "1692:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1287,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1692:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1691:9:5"
									},
									"scope": 1336,
									"src": "1626:75:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "398e5553",
									"id": 1295,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setLendingPoolCollateralManager",
									"nameLocation": "1714:31:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1292,
												"mutability": "mutable",
												"name": "manager",
												"nameLocation": "1754:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "1746:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1291,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1746:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1745:17:5"
									},
									"returnParameters": {
										"id": 1294,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1771:0:5"
									},
									"scope": 1336,
									"src": "1705:67:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "aecda378",
									"id": 1300,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPoolAdmin",
									"nameLocation": "1785:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1296,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1797:2:5"
									},
									"returnParameters": {
										"id": 1299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1298,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1300,
												"src": "1823:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1297,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1823:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1822:9:5"
									},
									"scope": 1336,
									"src": "1776:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "283d62ad",
									"id": 1305,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setPoolAdmin",
									"nameLocation": "1845:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1302,
												"mutability": "mutable",
												"name": "admin",
												"nameLocation": "1866:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1305,
												"src": "1858:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1858:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1857:15:5"
									},
									"returnParameters": {
										"id": 1304,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1881:0:5"
									},
									"scope": 1336,
									"src": "1836:46:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ddcaa9ea",
									"id": 1310,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getEmergencyAdmin",
									"nameLocation": "1895:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1306,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1912:2:5"
									},
									"returnParameters": {
										"id": 1309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1308,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1310,
												"src": "1938:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1307,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1938:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1937:9:5"
									},
									"scope": 1336,
									"src": "1886:61:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "35da3394",
									"id": 1315,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setEmergencyAdmin",
									"nameLocation": "1960:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1312,
												"mutability": "mutable",
												"name": "admin",
												"nameLocation": "1986:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1315,
												"src": "1978:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1311,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1978:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1977:15:5"
									},
									"returnParameters": {
										"id": 1314,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2001:0:5"
									},
									"scope": 1336,
									"src": "1951:51:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fca513a8",
									"id": 1320,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPriceOracle",
									"nameLocation": "2015:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1316,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2029:2:5"
									},
									"returnParameters": {
										"id": 1319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1318,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1320,
												"src": "2055:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1317,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2055:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2054:9:5"
									},
									"scope": 1336,
									"src": "2006:58:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "530e784f",
									"id": 1325,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setPriceOracle",
									"nameLocation": "2077:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1322,
												"mutability": "mutable",
												"name": "priceOracle",
												"nameLocation": "2100:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 1325,
												"src": "2092:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2092:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2091:21:5"
									},
									"returnParameters": {
										"id": 1324,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2121:0:5"
									},
									"scope": 1336,
									"src": "2068:54:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "3618abba",
									"id": 1330,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getLendingRateOracle",
									"nameLocation": "2135:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2155:2:5"
									},
									"returnParameters": {
										"id": 1329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1328,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1330,
												"src": "2181:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1327,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2181:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2180:9:5"
									},
									"scope": 1336,
									"src": "2126:64:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "820d1274",
									"id": 1335,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setLendingRateOracle",
									"nameLocation": "2203:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1332,
												"mutability": "mutable",
												"name": "lendingRateOracle",
												"nameLocation": "2232:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 1335,
												"src": "2224:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2224:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2223:27:5"
									},
									"returnParameters": {
										"id": 1334,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2259:0:5"
									},
									"scope": 1336,
									"src": "2194:66:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1337,
							"src": "376:1886:5",
							"usedErrors": []
						}
					],
					"src": "37:2226:5"
				},
				"id": 5
			},
			"https://github.com/aave/protocol-v2/blob/ice/mainnet-deployment-03-12-2020/contracts/interfaces/IScaledBalanceToken.sol": {
				"ast": {
					"absolutePath": "https://github.com/aave/protocol-v2/blob/ice/mainnet-deployment-03-12-2020/contracts/interfaces/IScaledBalanceToken.sol",
					"exportedSymbols": {
						"IScaledBalanceToken": [
							1363
						]
					},
					"id": 1364,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1338,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "37:25:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IScaledBalanceToken",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1363,
							"linearizedBaseContracts": [
								1363
							],
							"name": "IScaledBalanceToken",
							"nameLocation": "74:19:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1339,
										"nodeType": "StructuredDocumentation",
										"src": "98:296:6",
										"text": " @dev Returns the scaled balance of the user. The scaled balance is the sum of all the\n updated stored balance divided by the reserve's liquidity index at the moment of the update\n @param user The user whose balance is calculated\n @return The scaled balance of the user*"
									},
									"functionSelector": "1da24f3e",
									"id": 1346,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "scaledBalanceOf",
									"nameLocation": "406:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1341,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "430:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1346,
												"src": "422:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "422:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "421:14:6"
									},
									"returnParameters": {
										"id": 1345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1344,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1346,
												"src": "459:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1343,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "459:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "458:9:6"
									},
									"scope": 1363,
									"src": "397:71:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1347,
										"nodeType": "StructuredDocumentation",
										"src": "472:233:6",
										"text": " @dev Returns the scaled balance of the user and the scaled total supply.\n @param user The address of the user\n @return The scaled balance of the user\n @return The scaled balance and the scaled total supply*"
									},
									"functionSelector": "0afbcdc9",
									"id": 1356,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getScaledUserBalanceAndSupply",
									"nameLocation": "717:29:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1349,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "755:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1356,
												"src": "747:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1348,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "747:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "746:14:6"
									},
									"returnParameters": {
										"id": 1355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1352,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1356,
												"src": "784:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1351,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1354,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1356,
												"src": "793:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1353,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "793:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "783:18:6"
									},
									"scope": 1363,
									"src": "708:94:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1357,
										"nodeType": "StructuredDocumentation",
										"src": "806:144:6",
										"text": " @dev Returns the scaled total supply of the variable debt token. Represents sum(debt/index)\n @return The scaled total supply*"
									},
									"functionSelector": "b1bf962d",
									"id": 1362,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "scaledTotalSupply",
									"nameLocation": "962:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1358,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "979:2:6"
									},
									"returnParameters": {
										"id": 1361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1360,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1362,
												"src": "1005:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1359,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1005:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1004:9:6"
									},
									"scope": 1363,
									"src": "953:61:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1364,
							"src": "64:952:6",
							"usedErrors": []
						}
					],
					"src": "37:980:6"
				},
				"id": 6
			},
			"https://github.com/aave/protocol-v2/blob/ice/mainnet-deployment-03-12-2020/contracts/protocol/libraries/types/DataTypes.sol": {
				"ast": {
					"absolutePath": "https://github.com/aave/protocol-v2/blob/ice/mainnet-deployment-03-12-2020/contracts/protocol/libraries/types/DataTypes.sol",
					"exportedSymbols": {
						"DataTypes": [
							1402
						]
					},
					"id": 1403,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1365,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "37:25:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "DataTypes",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 1402,
							"linearizedBaseContracts": [
								1402
							],
							"name": "DataTypes",
							"nameLocation": "72:9:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "DataTypes.ReserveData",
									"id": 1391,
									"members": [
										{
											"constant": false,
											"id": 1368,
											"mutability": "mutable",
											"name": "configuration",
											"nameLocation": "277:13:7",
											"nodeType": "VariableDeclaration",
											"scope": 1391,
											"src": "253:37:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_ReserveConfigurationMap_$1394_storage_ptr",
												"typeString": "struct DataTypes.ReserveConfigurationMap"
											},
											"typeName": {
												"id": 1367,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1366,
													"name": "ReserveConfigurationMap",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1394,
													"src": "253:23:7"
												},
												"referencedDeclaration": 1394,
												"src": "253:23:7",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReserveConfigurationMap_$1394_storage_ptr",
													"typeString": "struct DataTypes.ReserveConfigurationMap"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1370,
											"mutability": "mutable",
											"name": "liquidityIndex",
											"nameLocation": "348:14:7",
											"nodeType": "VariableDeclaration",
											"scope": 1391,
											"src": "340:22:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 1369,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "340:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1372,
											"mutability": "mutable",
											"name": "variableBorrowIndex",
											"nameLocation": "422:19:7",
											"nodeType": "VariableDeclaration",
											"scope": 1391,
											"src": "414:27:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 1371,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "414:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1374,
											"mutability": "mutable",
											"name": "currentLiquidityRate",
											"nameLocation": "503:20:7",
											"nodeType": "VariableDeclaration",
											"scope": 1391,
											"src": "495:28:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 1373,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "495:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1376,
											"mutability": "mutable",
											"name": "currentVariableBorrowRate",
											"nameLocation": "594:25:7",
											"nodeType": "VariableDeclaration",
											"scope": 1391,
											"src": "586:33:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 1375,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "586:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1378,
											"mutability": "mutable",
											"name": "currentStableBorrowRate",
											"nameLocation": "688:23:7",
											"nodeType": "VariableDeclaration",
											"scope": 1391,
											"src": "680:31:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 1377,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "680:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1380,
											"mutability": "mutable",
											"name": "lastUpdateTimestamp",
											"nameLocation": "724:19:7",
											"nodeType": "VariableDeclaration",
											"scope": 1391,
											"src": "717:26:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint40",
												"typeString": "uint40"
											},
											"typeName": {
												"id": 1379,
												"name": "uint40",
												"nodeType": "ElementaryTypeName",
												"src": "717:6:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint40",
													"typeString": "uint40"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1382,
											"mutability": "mutable",
											"name": "aTokenAddress",
											"nameLocation": "780:13:7",
											"nodeType": "VariableDeclaration",
											"scope": 1391,
											"src": "772:21:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1381,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "772:7:7",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1384,
											"mutability": "mutable",
											"name": "stableDebtTokenAddress",
											"nameLocation": "807:22:7",
											"nodeType": "VariableDeclaration",
											"scope": 1391,
											"src": "799:30:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1383,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "799:7:7",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1386,
											"mutability": "mutable",
											"name": "variableDebtTokenAddress",
											"nameLocation": "843:24:7",
											"nodeType": "VariableDeclaration",
											"scope": 1391,
											"src": "835:32:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1385,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "835:7:7",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1388,
											"mutability": "mutable",
											"name": "interestRateStrategyAddress",
											"nameLocation": "925:27:7",
											"nodeType": "VariableDeclaration",
											"scope": 1391,
											"src": "917:35:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1387,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "917:7:7",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1390,
											"mutability": "mutable",
											"name": "id",
											"nameLocation": "1052:2:7",
											"nodeType": "VariableDeclaration",
											"scope": 1391,
											"src": "1046:8:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 1389,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "1046:5:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ReserveData",
									"nameLocation": "196:11:7",
									"nodeType": "StructDefinition",
									"scope": 1402,
									"src": "189:870:7",
									"visibility": "public"
								},
								{
									"canonicalName": "DataTypes.ReserveConfigurationMap",
									"id": 1394,
									"members": [
										{
											"constant": false,
											"id": 1393,
											"mutability": "mutable",
											"name": "data",
											"nameLocation": "1415:4:7",
											"nodeType": "VariableDeclaration",
											"scope": 1394,
											"src": "1407:12:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1392,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1407:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ReserveConfigurationMap",
									"nameLocation": "1070:23:7",
									"nodeType": "StructDefinition",
									"scope": 1402,
									"src": "1063:361:7",
									"visibility": "public"
								},
								{
									"canonicalName": "DataTypes.UserConfigurationMap",
									"id": 1397,
									"members": [
										{
											"constant": false,
											"id": 1396,
											"mutability": "mutable",
											"name": "data",
											"nameLocation": "1470:4:7",
											"nodeType": "VariableDeclaration",
											"scope": 1397,
											"src": "1462:12:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1395,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1462:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserConfigurationMap",
									"nameLocation": "1435:20:7",
									"nodeType": "StructDefinition",
									"scope": 1402,
									"src": "1428:51:7",
									"visibility": "public"
								},
								{
									"canonicalName": "DataTypes.InterestRateMode",
									"id": 1401,
									"members": [
										{
											"id": 1398,
											"name": "NONE",
											"nameLocation": "1506:4:7",
											"nodeType": "EnumValue",
											"src": "1506:4:7"
										},
										{
											"id": 1399,
											"name": "STABLE",
											"nameLocation": "1512:6:7",
											"nodeType": "EnumValue",
											"src": "1512:6:7"
										},
										{
											"id": 1400,
											"name": "VARIABLE",
											"nameLocation": "1520:8:7",
											"nodeType": "EnumValue",
											"src": "1520:8:7"
										}
									],
									"name": "InterestRateMode",
									"nameLocation": "1488:16:7",
									"nodeType": "EnumDefinition",
									"src": "1483:46:7"
								}
							],
							"scope": 1403,
							"src": "64:1467:7",
							"usedErrors": []
						}
					],
					"src": "37:1495:7"
				},
				"id": 7
			}
		}
	}
}